#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeadPlayer_BP

#include "Basic.hpp"

#include "CharacterModel_structs.hpp"


namespace SDK::Params
{

// Function DeadPlayer_BP.DeadPlayer_BP_C.ExecuteUbergraph_DeadPlayer_BP
// 0x00E0 (0x00E0 - 0x0000)
struct DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterModel                               ___byte_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ___float_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_5;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_6;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_7;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_8;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_9;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterModel                               ___byte_Variable_1;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomCharacterState_BP_C*             K2Node_DynamicCast_AsCustom_Character_State_BP;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMesh*>                  K2Node_Select_Default;                             // 0x0070(0x0010)(ReferenceParm)
	class USkeletalMesh*                          CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_3;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_4;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_5;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_6;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_7;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_8;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Array_Get_Item_9;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP) == 0x000008, "Wrong alignment on DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP");
static_assert(sizeof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP) == 0x0000E0, "Wrong size on DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, EntryPoint) == 0x000000, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___byte_Variable) == 0x000004, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___byte_Variable' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable) == 0x000008, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_1) == 0x00000C, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_1' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_2) == 0x000010, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_2' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_3) == 0x000014, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_3' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_4) == 0x000018, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_4' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_5) == 0x00001C, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_5' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_6) == 0x000020, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_6' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_7) == 0x000024, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_7' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_8) == 0x000028, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_8' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___float_Variable_9) == 0x00002C, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___float_Variable_9' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, ___byte_Variable_1) == 0x000030, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::___byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000040, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000050, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000058, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_DynamicCast_AsCustom_Character_State_BP) == 0x000060, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_DynamicCast_AsCustom_Character_State_BP' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_Select_Default) == 0x000070, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item) == 0x000080, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000090, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_3) == 0x0000A0, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_4) == 0x0000A8, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_5) == 0x0000B0, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_6) == 0x0000B8, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_7) == 0x0000C0, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_8) == 0x0000C8, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, CallFunc_Array_Get_Item_9) == 0x0000D0, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP, K2Node_Select_Default_1) == 0x0000D8, "Member 'DeadPlayer_BP_C_ExecuteUbergraph_DeadPlayer_BP::K2Node_Select_Default_1' has a wrong offset!");

// Function DeadPlayer_BP.DeadPlayer_BP_C.应用读取的数据
// 0x0040 (0x0040 - 0x0000)
struct DeadPlayer_BP_C_应用读取的数据 final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_As_______;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DeadPlayer_BP_C_应用读取的数据) == 0x000008, "Wrong alignment on DeadPlayer_BP_C_应用读取的数据");
static_assert(sizeof(DeadPlayer_BP_C_应用读取的数据) == 0x000040, "Wrong size on DeadPlayer_BP_C_应用读取的数据");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, ___int_Array_Index_Variable) == 0x000000, "Member 'DeadPlayer_BP_C_应用读取的数据::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, ___int_Loop_Counter_Variable) == 0x000004, "Member 'DeadPlayer_BP_C_应用读取的数据::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DeadPlayer_BP_C_应用读取的数据::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'DeadPlayer_BP_C_应用读取的数据::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, CallFunc_Array_Get_Item) == 0x000020, "Member 'DeadPlayer_BP_C_应用读取的数据::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DeadPlayer_BP_C_应用读取的数据::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, K2Node_DynamicCast_As_______) == 0x000030, "Member 'DeadPlayer_BP_C_应用读取的数据::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'DeadPlayer_BP_C_应用读取的数据::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DeadPlayer_BP_C_应用读取的数据, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'DeadPlayer_BP_C_应用读取的数据::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

