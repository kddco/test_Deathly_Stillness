#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DS_DoorMaster_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.ExecuteUbergraph_DS_DoorMaster_BP
// 0x03B8 (0x03B8 - 0x0000)
struct DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickUpKeyboardTips_C*                  K2Node_DynamicCast_AsPick_Up_Keyboard_Tips;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_____;                        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_1;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_2;                       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_2;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Player;                               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent___;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0208(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02C0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_1;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_2;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickUpKeyboardTips_C*                  K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_1;      // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPickUpKeyboardTips_C*                  K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_2;      // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP");
static_assert(sizeof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP) == 0x0003B8, "Wrong size on DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, EntryPoint) == 0x000000, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPick_Up_Keyboard_Tips) == 0x000010, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPick_Up_Keyboard_Tips' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_As_____) == 0x000020, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_Has_Been_Initd_Variable) == 0x000029, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_IsClosed_Variable) == 0x00002A, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_Has_Been_Initd_Variable_1) == 0x00002B, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_IsClosed_Variable_1) == 0x00002C, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_IsClosed_Variable_2) == 0x00002D, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, ___bool_Has_Been_Initd_Variable_2) == 0x00002E, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::___bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00003C, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_RLerp_ReturnValue) == 0x000058, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000064, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_RLerp_ReturnValue_1) == 0x0000EC, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x0000F8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000FC, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_Event_Player) == 0x000188, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPlayer_BP) == 0x000198, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_CustomEvent___) == 0x0001A8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_CustomEvent___' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001B0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001BC, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0001C8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_BreakVector_X) == 0x0001D4, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_BreakVector_Y) == 0x0001D8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_BreakVector_Z) == 0x0001DC, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0001E8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0001F0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0001F8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000200, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000204, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000208, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsZombie_BP) == 0x000290, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_3) == 0x000298, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0002A0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0002A8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002B0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0002B8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002BC, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x0002C0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000348, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000350, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000358, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000360, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPlayer_BP_1) == 0x000368, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPlayer_BP_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_4) == 0x000370, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPlayer_BP_2) == 0x000378, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPlayer_BP_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_5) == 0x000380, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000388, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x000390, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_1) == 0x000398, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_1' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_6) == 0x0003A0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_2) == 0x0003A8, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_AsPick_Up_Keyboard_Tips_2' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP, K2Node_DynamicCast_bSuccess_7) == 0x0003B0, "Member 'DS_DoorMaster_BP_C_ExecuteUbergraph_DS_DoorMaster_BP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'DS_DoorMaster_BP_C_BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'DS_DoorMaster_BP_C_BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.ZombieOpenDoor
// 0x0008 (0x0008 - 0x0000)
struct DS_DoorMaster_BP_C_ZombieOpenDoor final
{
public:
	class AActor*                                 目标_0; // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DS_DoorMaster_BP_C_ZombieOpenDoor) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_ZombieOpenDoor");
static_assert(sizeof(DS_DoorMaster_BP_C_ZombieOpenDoor) == 0x000008, "Wrong size on DS_DoorMaster_BP_C_ZombieOpenDoor");
static_assert(offsetof(DS_DoorMaster_BP_C_ZombieOpenDoor, 目标_0) == 0x000000, "Member 'DS_DoorMaster_BP_C_ZombieOpenDoor::目标_0' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.PlayerInteration
// 0x0008 (0x0008 - 0x0000)
struct DS_DoorMaster_BP_C_PlayerInteration final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DS_DoorMaster_BP_C_PlayerInteration) == 0x000008, "Wrong alignment on DS_DoorMaster_BP_C_PlayerInteration");
static_assert(sizeof(DS_DoorMaster_BP_C_PlayerInteration) == 0x000008, "Wrong size on DS_DoorMaster_BP_C_PlayerInteration");
static_assert(offsetof(DS_DoorMaster_BP_C_PlayerInteration, Player) == 0x000000, "Member 'DS_DoorMaster_BP_C_PlayerInteration::Player' has a wrong offset!");

// Function DS_DoorMaster_BP.DS_DoorMaster_BP_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct DS_DoorMaster_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DS_DoorMaster_BP_C_UserConstructionScript) == 0x000001, "Wrong alignment on DS_DoorMaster_BP_C_UserConstructionScript");
static_assert(sizeof(DS_DoorMaster_BP_C_UserConstructionScript) == 0x000001, "Wrong size on DS_DoorMaster_BP_C_UserConstructionScript");
static_assert(offsetof(DS_DoorMaster_BP_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'DS_DoorMaster_BP_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

