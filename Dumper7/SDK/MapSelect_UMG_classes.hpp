#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapSelect_UMG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MapSelect_UMG.MapSelect_UMG_C
// 0x0068 (0x02C8 - 0x0260)
class UMapSelect_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMapSelectSlot_C*                       MapSelectSlot;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapSelectSlot_C*                       MapSelectSlot_1;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapSelectSlot_C*                       MapSelectSlot_2;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapSelectSlot_C*                       MapSelectSlot_3;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapSelectSlot_C*                       MapSelectSlot_4;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_0;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_735;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomButton_UMG_C*                    自定义按钮; // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UReturnButton_UMG_C*                    返回按钮; // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          是否选中地图_; // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GameMap;                                           // 0x02BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MapSelect_UMG(int32 EntryPoint);
	void BndEvt__MapSelect_UMG_返回按钮_K2Node_ComponentBoundEvent_1_Click__DelegateSignature();
	void BndEvt__MapSelect_UMG_自定义按钮_K2Node_ComponentBoundEvent_0_Click__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void BGVisibility(EUMGSequencePlayMode PlayMode);
	ESlateVisibility GetVisibility_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MapSelect_UMG_C">();
	}
	static class UMapSelect_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapSelect_UMG_C>();
	}
};
static_assert(alignof(UMapSelect_UMG_C) == 0x000008, "Wrong alignment on UMapSelect_UMG_C");
static_assert(sizeof(UMapSelect_UMG_C) == 0x0002C8, "Wrong size on UMapSelect_UMG_C");
static_assert(offsetof(UMapSelect_UMG_C, UberGraphFrame) == 0x000260, "Member 'UMapSelect_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, Appear) == 0x000268, "Member 'UMapSelect_UMG_C::Appear' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, MapSelectSlot) == 0x000270, "Member 'UMapSelect_UMG_C::MapSelectSlot' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, MapSelectSlot_1) == 0x000278, "Member 'UMapSelect_UMG_C::MapSelectSlot_1' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, MapSelectSlot_2) == 0x000280, "Member 'UMapSelect_UMG_C::MapSelectSlot_2' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, MapSelectSlot_3) == 0x000288, "Member 'UMapSelect_UMG_C::MapSelectSlot_3' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, MapSelectSlot_4) == 0x000290, "Member 'UMapSelect_UMG_C::MapSelectSlot_4' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, ScrollBox_0) == 0x000298, "Member 'UMapSelect_UMG_C::ScrollBox_0' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, TextBlock_735) == 0x0002A0, "Member 'UMapSelect_UMG_C::TextBlock_735' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, 自定义按钮) == 0x0002A8, "Member 'UMapSelect_UMG_C::自定义按钮' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, 返回按钮) == 0x0002B0, "Member 'UMapSelect_UMG_C::返回按钮' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, 是否选中地图_) == 0x0002B8, "Member 'UMapSelect_UMG_C::是否选中地图_' has a wrong offset!");
static_assert(offsetof(UMapSelect_UMG_C, GameMap) == 0x0002BC, "Member 'UMapSelect_UMG_C::GameMap' has a wrong offset!");

}

