#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PickUpMaster_BP

#include "Basic.hpp"

#include "InventoryData_Struct_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PickUpMaster_BP.PickUpMaster_BP_C
// 0x0108 (0x0328 - 0x0220)
class APickUpMaster_BP_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere1;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       拾取提示; // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         loading_NewTrack_0_14A13B33407C4DA8C05DDCB94DB73DF6; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            loading__Direction_14A13B33407C4DA8C05DDCB94DB73DF6; // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     loading;                                           // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInventoryData_Struct                  PickUp_Struct;                                     // 0x0268(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class APlayer_BP_C*                           PlayerRef;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ZombieSkeletalMesh;                                // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InteractionMesh;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否需要删除; // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          不需要读条; // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否开启靠近提示; // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PickUpMaster_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void RenderDeepOpen();
	void RenderDeepClose();
	void BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void 互动结束不销毁();
	void 关闭位置提示();
	void PickUpFinish();
	void PlayerInteration(class AActor* Player);
	void BreakInteration();
	void loading__UpdateFunc();
	void loading__FinishedFunc();
	void UserConstructionScript();
	void 初始化物品();
	void 高亮开启和关闭(bool 模型是否高亮, ESlateVisibility Circle, ESlateVisibility keyboard);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PickUpMaster_BP_C">();
	}
	static class APickUpMaster_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APickUpMaster_BP_C>();
	}
};
static_assert(alignof(APickUpMaster_BP_C) == 0x000008, "Wrong alignment on APickUpMaster_BP_C");
static_assert(sizeof(APickUpMaster_BP_C) == 0x000328, "Wrong size on APickUpMaster_BP_C");
static_assert(offsetof(APickUpMaster_BP_C, UberGraphFrame) == 0x000220, "Member 'APickUpMaster_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, StaticMesh) == 0x000228, "Member 'APickUpMaster_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, Sphere1) == 0x000230, "Member 'APickUpMaster_BP_C::Sphere1' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, Sphere) == 0x000238, "Member 'APickUpMaster_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, 拾取提示) == 0x000240, "Member 'APickUpMaster_BP_C::拾取提示' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, SkeletalMesh) == 0x000248, "Member 'APickUpMaster_BP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, DefaultSceneRoot) == 0x000250, "Member 'APickUpMaster_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, loading_NewTrack_0_14A13B33407C4DA8C05DDCB94DB73DF6) == 0x000258, "Member 'APickUpMaster_BP_C::loading_NewTrack_0_14A13B33407C4DA8C05DDCB94DB73DF6' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, loading__Direction_14A13B33407C4DA8C05DDCB94DB73DF6) == 0x00025C, "Member 'APickUpMaster_BP_C::loading__Direction_14A13B33407C4DA8C05DDCB94DB73DF6' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, loading) == 0x000260, "Member 'APickUpMaster_BP_C::loading' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, PickUp_Struct) == 0x000268, "Member 'APickUpMaster_BP_C::PickUp_Struct' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, PlayerRef) == 0x000300, "Member 'APickUpMaster_BP_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, ZombieSkeletalMesh) == 0x000308, "Member 'APickUpMaster_BP_C::ZombieSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, InteractionMesh) == 0x000310, "Member 'APickUpMaster_BP_C::InteractionMesh' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, 是否需要删除) == 0x000318, "Member 'APickUpMaster_BP_C::是否需要删除' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, 不需要读条) == 0x000319, "Member 'APickUpMaster_BP_C::不需要读条' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, Index_0) == 0x00031C, "Member 'APickUpMaster_BP_C::Index_0' has a wrong offset!");
static_assert(offsetof(APickUpMaster_BP_C, 是否开启靠近提示) == 0x000320, "Member 'APickUpMaster_BP_C::是否开启靠近提示' has a wrong offset!");

}

