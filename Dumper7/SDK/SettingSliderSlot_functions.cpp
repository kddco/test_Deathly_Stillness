#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingSliderSlot

#include "Basic.hpp"

#include "SettingSliderSlot_classes.hpp"
#include "SettingSliderSlot_parameters.hpp"


namespace SDK
{

// Function SettingSliderSlot.SettingSliderSlot_C.ExecuteUbergraph_SettingSliderSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSliderSlot_C::ExecuteUbergraph_SettingSliderSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "ExecuteUbergraph_SettingSliderSlot");

	Params::SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSliderSlot_C::BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingSliderSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "PreConstruct");

	Params::SettingSliderSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingSliderSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USettingSliderSlot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "OnMouseLeave");

	Params::SettingSliderSlot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USettingSliderSlot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "OnMouseEnter");

	Params::SettingSliderSlot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.CustomMappingCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionKeyMapping&    InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FInputAxisKeyMapping&      InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingSliderSlot_C::CustomMappingCheck(const struct FInputActionKeyMapping& InputAction, const struct FInputAxisKeyMapping& InputAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "CustomMappingCheck");

	Params::SettingSliderSlot_C_CustomMappingCheck Parms{};

	Parms.InputAction = std::move(InputAction);
	Parms.InputAxis = std::move(InputAxis);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.initializeSetting
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::initializeSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "initializeSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.SettingDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      标题(BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      详情(BlueprintVisible, BlueprintReadOnly, Parm)

void USettingSliderSlot_C::SettingDetails(const class FText& 标题, const class FText& 详情)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "SettingDetails");

	Params::SettingSliderSlot_C_SettingDetails Parms{};

	Parms.标题 = std::move(标题);
	Parms.详情 = std::move(详情);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply USettingSliderSlot_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "OnMouseButtonDown");

	Params::SettingSliderSlot_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingSliderSlot.SettingSliderSlot_C.GetPercent_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float USettingSliderSlot_C::GetPercent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "GetPercent_0");

	Params::SettingSliderSlot_C_GetPercent_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingSliderSlot.SettingSliderSlot_C.GetText_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText USettingSliderSlot_C::GetText_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "GetText_0");

	Params::SettingSliderSlot_C_GetText_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingSliderSlot.SettingSliderSlot_C.进入选中模式
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::进入选中模式()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "进入选中模式");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.MouseXSave
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::MouseXSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "MouseXSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.MouseYSave
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::MouseYSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "MouseYSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.背景音量Save
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::背景音量Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "背景音量Save");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.音效音量Save
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::音效音量Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "音效音量Save");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSliderSlot.SettingSliderSlot_C.屏幕百分比Save
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSliderSlot_C::屏幕百分比Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSliderSlot_C", "屏幕百分比Save");

	UObject::ProcessEvent(Func, nullptr);
}

}

