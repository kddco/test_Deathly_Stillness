#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapSelectSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MapSelectSlot.MapSelectSlot_C.ExecuteUbergraph_MapSelectSlot
// 0x0120 (0x0120 - 0x0000)
struct MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event___;                                   // 0x0030(0x0018)()
	class FText                                   K2Node_Event____1;                                 // 0x0048(0x0018)()
	struct FInputActionKeyMapping                 K2Node_Event_InputAction;                          // 0x0060(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_Event_InputAxis;                            // 0x0088(0x0028)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UMapSelect_UMG_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSelect_UMG_C*                       CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot) == 0x000008, "Wrong alignment on MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot");
static_assert(sizeof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot) == 0x000120, "Wrong size on MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, EntryPoint) == 0x000000, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000010, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, ___int_Array_Index_Variable) == 0x00001C, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Conv_BoolToString_ReturnValue) == 0x000020, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_Event___) == 0x000030, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_Event___' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_Event____1) == 0x000048, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_Event____1' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_Event_InputAction) == 0x000060, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_Event_InputAction' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_Event_InputAxis) == 0x000088, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_Event_InputAxis' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_Event_IsDesignTime) == 0x0000B0, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C0, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, ___int_Loop_Counter_Variable) == 0x0000C8, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x0000D0, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0000E0, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_DynamicCast_AsUISetting_Interface) == 0x000100, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot, K2Node_ComponentBoundEvent_bIsChecked) == 0x000119, "Member 'MapSelectSlot_C_ExecuteUbergraph_MapSelectSlot::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'MapSelectSlot_C_BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MapSelectSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelectSlot_C_PreConstruct) == 0x000001, "Wrong alignment on MapSelectSlot_C_PreConstruct");
static_assert(sizeof(MapSelectSlot_C_PreConstruct) == 0x000001, "Wrong size on MapSelectSlot_C_PreConstruct");
static_assert(offsetof(MapSelectSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MapSelectSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.CustomMappingCheck
// 0x0050 (0x0050 - 0x0000)
struct MapSelectSlot_C_CustomMappingCheck final
{
public:
	struct FInputActionKeyMapping                 InputAction;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FInputAxisKeyMapping                   InputAxis;                                         // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MapSelectSlot_C_CustomMappingCheck) == 0x000008, "Wrong alignment on MapSelectSlot_C_CustomMappingCheck");
static_assert(sizeof(MapSelectSlot_C_CustomMappingCheck) == 0x000050, "Wrong size on MapSelectSlot_C_CustomMappingCheck");
static_assert(offsetof(MapSelectSlot_C_CustomMappingCheck, InputAction) == 0x000000, "Member 'MapSelectSlot_C_CustomMappingCheck::InputAction' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_CustomMappingCheck, InputAxis) == 0x000028, "Member 'MapSelectSlot_C_CustomMappingCheck::InputAxis' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.SettingDetails
// 0x0030 (0x0030 - 0x0000)
struct MapSelectSlot_C_SettingDetails final
{
public:
	class FText                                   标题; // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   详情; // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MapSelectSlot_C_SettingDetails) == 0x000008, "Wrong alignment on MapSelectSlot_C_SettingDetails");
static_assert(sizeof(MapSelectSlot_C_SettingDetails) == 0x000030, "Wrong size on MapSelectSlot_C_SettingDetails");
static_assert(offsetof(MapSelectSlot_C_SettingDetails, 标题) == 0x000000, "Member 'MapSelectSlot_C_SettingDetails::标题' has a wrong offset!");
static_assert(offsetof(MapSelectSlot_C_SettingDetails, 详情) == 0x000018, "Member 'MapSelectSlot_C_SettingDetails::详情' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.选中状态
// 0x0001 (0x0001 - 0x0000)
struct MapSelectSlot_C_选中状态 final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelectSlot_C_选中状态) == 0x000001, "Wrong alignment on MapSelectSlot_C_选中状态");
static_assert(sizeof(MapSelectSlot_C_选中状态) == 0x000001, "Wrong size on MapSelectSlot_C_选中状态");
static_assert(offsetof(MapSelectSlot_C_选中状态, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MapSelectSlot_C_选中状态::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MapSelectSlot.MapSelectSlot_C.关闭选中状态
// 0x0001 (0x0001 - 0x0000)
struct MapSelectSlot_C_关闭选中状态 final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelectSlot_C_关闭选中状态) == 0x000001, "Wrong alignment on MapSelectSlot_C_关闭选中状态");
static_assert(sizeof(MapSelectSlot_C_关闭选中状态) == 0x000001, "Wrong size on MapSelectSlot_C_关闭选中状态");
static_assert(offsetof(MapSelectSlot_C_关闭选中状态, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MapSelectSlot_C_关闭选中状态::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

