#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyGameInstance

#include "Basic.hpp"

#include "InventoryData_Struct_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FogScene_Enum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MyGameInstance.MyGameInstance_C
// 0x0058 (0x0200 - 0x01A8)
class UMyGameInstance_C final : public UGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Restart_;                                          // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameSettingName;                                   // 0x01B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          是否开启黑夜模式; // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFogScene_Enum                                MistyQuest;                                        // 0x01C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomCharacterName;                               // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FInventoryData_Struct>          InventoryData;                                     // 0x01E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Seven_65背包子弹总数; // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Five_56背包子弹总数; // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ninemm背包子弹总数; // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MyGameInstance(int32 EntryPoint);
	void Backroom存档复活点();
	void 迷雾地图存档点();
	void 设置玩家位置和旋转(float New_Location_X, float New_Location_Y, float New_Rotation_Z__Yaw_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MyGameInstance_C">();
	}
	static class UMyGameInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyGameInstance_C>();
	}
};
static_assert(alignof(UMyGameInstance_C) == 0x000008, "Wrong alignment on UMyGameInstance_C");
static_assert(sizeof(UMyGameInstance_C) == 0x000200, "Wrong size on UMyGameInstance_C");
static_assert(offsetof(UMyGameInstance_C, UberGraphFrame) == 0x0001A8, "Member 'UMyGameInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, Restart_) == 0x0001B0, "Member 'UMyGameInstance_C::Restart_' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, GameSettingName) == 0x0001B8, "Member 'UMyGameInstance_C::GameSettingName' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, 是否开启黑夜模式) == 0x0001C8, "Member 'UMyGameInstance_C::是否开启黑夜模式' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, MistyQuest) == 0x0001C9, "Member 'UMyGameInstance_C::MistyQuest' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, CustomCharacterName) == 0x0001D0, "Member 'UMyGameInstance_C::CustomCharacterName' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, InventoryData) == 0x0001E0, "Member 'UMyGameInstance_C::InventoryData' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, Seven_65背包子弹总数) == 0x0001F0, "Member 'UMyGameInstance_C::Seven_65背包子弹总数' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, Five_56背包子弹总数) == 0x0001F4, "Member 'UMyGameInstance_C::Five_56背包子弹总数' has a wrong offset!");
static_assert(offsetof(UMyGameInstance_C, Ninemm背包子弹总数) == 0x0001F8, "Member 'UMyGameInstance_C::Ninemm背包子弹总数' has a wrong offset!");

}

