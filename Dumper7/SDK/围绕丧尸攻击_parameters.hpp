#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 围绕丧尸攻击

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function 围绕丧尸攻击.围绕丧尸攻击_C.ExecuteUbergraph_围绕丧尸攻击
// 0x00B0 (0x00B0 - 0x0000)
struct 围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          ___byte_Variable;                                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVagrant_BP_C*                          K2Node_DynamicCast_AsVagrant_BP;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击) == 0x000008, "Wrong alignment on 围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击");
static_assert(sizeof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击) == 0x0000B0, "Wrong size on 围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, EntryPoint) == 0x000000, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::EntryPoint' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_CustomEvent_MovementResult_1) == 0x000020, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_CustomEvent_MovementResult) == 0x000021, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, ___byte_Variable) == 0x000034, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::___byte_Variable' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_Event_OwnerController) == 0x000038, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_Event_ControlledPawn) == 0x000040, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_MakeLiteralName_ReturnValue) == 0x000048, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_DynamicCast_AsVagrant_BP) == 0x000050, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_DynamicCast_AsVagrant_BP' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_DynamicCast_bSuccess) == 0x000058, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_GetBlackboard_ReturnValue) == 0x000060, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_GetValueAsObject_ReturnValue) == 0x000068, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_IsValid_ReturnValue) == 0x000070, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_DynamicCast_AsZombie_BP) == 0x000078, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000084, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000090, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x00009C, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x0000A0, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member '围绕丧尸攻击_C_ExecuteUbergraph_围绕丧尸攻击::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function 围绕丧尸攻击.围绕丧尸攻击_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct 围绕丧尸攻击_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(围绕丧尸攻击_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on 围绕丧尸攻击_C_ReceiveExecuteAI");
static_assert(sizeof(围绕丧尸攻击_C_ReceiveExecuteAI) == 0x000010, "Wrong size on 围绕丧尸攻击_C_ReceiveExecuteAI");
static_assert(offsetof(围绕丧尸攻击_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member '围绕丧尸攻击_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(围绕丧尸攻击_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member '围绕丧尸攻击_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function 围绕丧尸攻击.围绕丧尸攻击_C.OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF
// 0x0001 (0x0001 - 0x0000)
struct 围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF) == 0x000001, "Wrong alignment on 围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF");
static_assert(sizeof(围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF) == 0x000001, "Wrong size on 围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF");
static_assert(offsetof(围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF, MovementResult) == 0x000000, "Member '围绕丧尸攻击_C_OnSuccess_2D6DC51644D03A0010967AA4E3A89EFF::MovementResult' has a wrong offset!");

// Function 围绕丧尸攻击.围绕丧尸攻击_C.OnFail_2D6DC51644D03A0010967AA4E3A89EFF
// 0x0001 (0x0001 - 0x0000)
struct 围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF) == 0x000001, "Wrong alignment on 围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF");
static_assert(sizeof(围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF) == 0x000001, "Wrong size on 围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF");
static_assert(offsetof(围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF, MovementResult) == 0x000000, "Member '围绕丧尸攻击_C_OnFail_2D6DC51644D03A0010967AA4E3A89EFF::MovementResult' has a wrong offset!");

}

