#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Chinese_Vampire_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Chinese_Vampire_Anim.Chinese_Vampire_Anim_C
// 0x0820 (0x0AE0 - 0x02C0)
class UChinese_Vampire_Anim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0348(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0370(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x03F0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0420(0x00E8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0508(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x05C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0648(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0678(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x06F8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0798(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0818(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0848(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x08F8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0A50(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0A78(0x0048)()
	float                                         Speed;                                             // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead_;                                             // 0x0AC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Hit;                                               // 0x0AC5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC6[0x2];                                      // 0x0AC6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AChinese_Vampire_BP_C*                  As_Chinese_Vampire_BP;                             // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         移动速度; // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Chinese_Vampire_Anim(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chinese_Vampire_Anim_AnimGraphNode_TransitionResult_EB9E32154ACFBB550C2A05A05D2169BC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chinese_Vampire_Anim_AnimGraphNode_BlendListByBool_3251FFD64ADAD31A9E3E0B945C7C07F5();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Chinese_Vampire_Anim_C">();
	}
	static class UChinese_Vampire_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChinese_Vampire_Anim_C>();
	}
};
static_assert(alignof(UChinese_Vampire_Anim_C) == 0x000010, "Wrong alignment on UChinese_Vampire_Anim_C");
static_assert(sizeof(UChinese_Vampire_Anim_C) == 0x000AE0, "Wrong size on UChinese_Vampire_Anim_C");
static_assert(offsetof(UChinese_Vampire_Anim_C, UberGraphFrame) == 0x0002C0, "Member 'UChinese_Vampire_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_TransitionResult_2) == 0x0002F8, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_TransitionResult_1) == 0x000320, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_TransitionResult) == 0x000348, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x000370, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_StateResult_2) == 0x0003F0, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x000420, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_LayeredBoneBlend) == 0x000508, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x0005C8, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_StateResult_1) == 0x000648, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000678, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_BlendListByBool) == 0x0006F8, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_SequencePlayer) == 0x000798, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_StateResult) == 0x000818, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_StateMachine) == 0x000848, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_SaveCachedPose) == 0x0008F8, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_UseCachedPose) == 0x000A50, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, AnimGraphNode_Slot) == 0x000A78, "Member 'UChinese_Vampire_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, Speed) == 0x000AC0, "Member 'UChinese_Vampire_Anim_C::Speed' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, Dead_) == 0x000AC4, "Member 'UChinese_Vampire_Anim_C::Dead_' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, Hit) == 0x000AC5, "Member 'UChinese_Vampire_Anim_C::Hit' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, As_Chinese_Vampire_BP) == 0x000AC8, "Member 'UChinese_Vampire_Anim_C::As_Chinese_Vampire_BP' has a wrong offset!");
static_assert(offsetof(UChinese_Vampire_Anim_C, 移动速度) == 0x000AD0, "Member 'UChinese_Vampire_Anim_C::移动速度' has a wrong offset!");

}

