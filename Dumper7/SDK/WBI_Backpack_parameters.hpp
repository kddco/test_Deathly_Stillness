#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBI_Backpack

#include "Basic.hpp"

#include "InventoryData_Struct_structs.hpp"


namespace SDK::Params
{

// Function WBI_Backpack.WBI_Backpack_C.刷新数据
// 0x00A0 (0x00A0 - 0x0000)
struct WBI_Backpack_C_刷新数据 final
{
public:
	struct FInventoryData_Struct                  InventoryData;                                     // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_刷新数据) == 0x000008, "Wrong alignment on WBI_Backpack_C_刷新数据");
static_assert(sizeof(WBI_Backpack_C_刷新数据) == 0x0000A0, "Wrong size on WBI_Backpack_C_刷新数据");
static_assert(offsetof(WBI_Backpack_C_刷新数据, InventoryData) == 0x000000, "Member 'WBI_Backpack_C_刷新数据::InventoryData' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_刷新数据, Index_0) == 0x000098, "Member 'WBI_Backpack_C_刷新数据::Index_0' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.创建UI
// 0x0008 (0x0008 - 0x0000)
struct WBI_Backpack_C_创建UI final
{
public:
	class UWidget*                                创建的UI; // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_创建UI) == 0x000008, "Wrong alignment on WBI_Backpack_C_创建UI");
static_assert(sizeof(WBI_Backpack_C_创建UI) == 0x000008, "Wrong size on WBI_Backpack_C_创建UI");
static_assert(offsetof(WBI_Backpack_C_创建UI, 创建的UI) == 0x000000, "Member 'WBI_Backpack_C_创建UI::创建的UI' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.添加空格子
// 0x0028 (0x0028 - 0x0000)
struct WBI_Backpack_C_添加空格子 final
{
public:
	TArray<struct FInventoryData_Struct>          InventoryData;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UInventorySystem_Component_C*           背包组件; // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             ItemDragUMG;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_Details_C*                    BackpackDetailsUMG;                                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_添加空格子) == 0x000008, "Wrong alignment on WBI_Backpack_C_添加空格子");
static_assert(sizeof(WBI_Backpack_C_添加空格子) == 0x000028, "Wrong size on WBI_Backpack_C_添加空格子");
static_assert(offsetof(WBI_Backpack_C_添加空格子, InventoryData) == 0x000000, "Member 'WBI_Backpack_C_添加空格子::InventoryData' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_添加空格子, 背包组件) == 0x000010, "Member 'WBI_Backpack_C_添加空格子::背包组件' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_添加空格子, ItemDragUMG) == 0x000018, "Member 'WBI_Backpack_C_添加空格子::ItemDragUMG' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_添加空格子, BackpackDetailsUMG) == 0x000020, "Member 'WBI_Backpack_C_添加空格子::BackpackDetailsUMG' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.添加武器数据
// 0x0010 (0x0010 - 0x0000)
struct WBI_Backpack_C_添加武器数据 final
{
public:
	bool                                          是否是主武器; // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon_Master_C*                       weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_添加武器数据) == 0x000008, "Wrong alignment on WBI_Backpack_C_添加武器数据");
static_assert(sizeof(WBI_Backpack_C_添加武器数据) == 0x000010, "Wrong size on WBI_Backpack_C_添加武器数据");
static_assert(offsetof(WBI_Backpack_C_添加武器数据, 是否是主武器) == 0x000000, "Member 'WBI_Backpack_C_添加武器数据::是否是主武器' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_添加武器数据, weapon) == 0x000008, "Member 'WBI_Backpack_C_添加武器数据::weapon' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.添加空的武器插槽
// 0x0008 (0x0008 - 0x0000)
struct WBI_Backpack_C_添加空的武器插槽 final
{
public:
	class UWB_Backpack_Weapon_C*                  WeaponDragUMG;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_添加空的武器插槽) == 0x000008, "Wrong alignment on WBI_Backpack_C_添加空的武器插槽");
static_assert(sizeof(WBI_Backpack_C_添加空的武器插槽) == 0x000008, "Wrong size on WBI_Backpack_C_添加空的武器插槽");
static_assert(offsetof(WBI_Backpack_C_添加空的武器插槽, WeaponDragUMG) == 0x000000, "Member 'WBI_Backpack_C_添加空的武器插槽::WeaponDragUMG' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.数据对调接口
// 0x0008 (0x0008 - 0x0000)
struct WBI_Backpack_C_数据对调接口 final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_数据对调接口) == 0x000004, "Wrong alignment on WBI_Backpack_C_数据对调接口");
static_assert(sizeof(WBI_Backpack_C_数据对调接口) == 0x000008, "Wrong size on WBI_Backpack_C_数据对调接口");
static_assert(offsetof(WBI_Backpack_C_数据对调接口, Current) == 0x000000, "Member 'WBI_Backpack_C_数据对调接口::Current' has a wrong offset!");
static_assert(offsetof(WBI_Backpack_C_数据对调接口, Target) == 0x000004, "Member 'WBI_Backpack_C_数据对调接口::Target' has a wrong offset!");

// Function WBI_Backpack.WBI_Backpack_C.拾取子弹
// 0x0098 (0x0098 - 0x0000)
struct WBI_Backpack_C_拾取子弹 final
{
public:
	struct FInventoryData_Struct                  InventoryData;                                     // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBI_Backpack_C_拾取子弹) == 0x000008, "Wrong alignment on WBI_Backpack_C_拾取子弹");
static_assert(sizeof(WBI_Backpack_C_拾取子弹) == 0x000098, "Wrong size on WBI_Backpack_C_拾取子弹");
static_assert(offsetof(WBI_Backpack_C_拾取子弹, InventoryData) == 0x000000, "Member 'WBI_Backpack_C_拾取子弹::InventoryData' has a wrong offset!");

}

