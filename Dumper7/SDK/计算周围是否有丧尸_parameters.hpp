#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 计算周围是否有丧尸

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function 计算周围是否有丧尸.计算周围是否有丧尸_C.ExecuteUbergraph_计算周围是否有丧尸
// 0x01C0 (0x01C0 - 0x0000)
struct 计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVagrant_BP_C*                          K2Node_DynamicCast_AsVagrant_BP;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ___object_Variable;                                // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP_1;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸) == 0x000008, "Wrong alignment on 计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸");
static_assert(sizeof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸) == 0x0001C0, "Wrong size on 计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, EntryPoint) == 0x000000, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::EntryPoint' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, ___bool_True_if_break_was_hit_Variable) == 0x000004, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, ___int_Array_Index_Variable) == 0x000008, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x000010, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_IsValid_ReturnValue) == 0x000018, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_AsZombie_BP) == 0x000020, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_bSuccess) == 0x000028, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_Event_OwnerController) == 0x000030, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_Event_ControlledPawn) == 0x000038, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_Event_DeltaSeconds) == 0x000040, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Array_Get_Item) == 0x000044, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_AsVagrant_BP) == 0x000050, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_AsVagrant_BP' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000059, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, ___int_Loop_Counter_Variable) == 0x000068, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, ___object_Variable) == 0x000070, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::___object_Variable' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_SphereTraceMulti_OutHits) == 0x000080, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_SphereTraceMulti_ReturnValue) == 0x000090, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Array_Get_Item_1) == 0x000094, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_bBlockingHit) == 0x000120, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_bInitialOverlap) == 0x000121, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_Time) == 0x000124, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_Distance) == 0x000128, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_Location) == 0x00012C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_Normal) == 0x000144, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_TraceStart) == 0x00018C, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BreakHitResult_TraceEnd) == 0x000198, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Less_IntInt_ReturnValue) == 0x0001A4, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_AsZombie_BP_1) == 0x0001A8, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_AsZombie_BP_1' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_BooleanAND_ReturnValue) == 0x0001B1, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_Array_Get_Item_2) == 0x0001B4, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0001BC, "Member '计算周围是否有丧尸_C_ExecuteUbergraph_计算周围是否有丧尸::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function 计算周围是否有丧尸.计算周围是否有丧尸_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct 计算周围是否有丧尸_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(计算周围是否有丧尸_C_ReceiveTickAI) == 0x000008, "Wrong alignment on 计算周围是否有丧尸_C_ReceiveTickAI");
static_assert(sizeof(计算周围是否有丧尸_C_ReceiveTickAI) == 0x000018, "Wrong size on 计算周围是否有丧尸_C_ReceiveTickAI");
static_assert(offsetof(计算周围是否有丧尸_C_ReceiveTickAI, OwnerController) == 0x000000, "Member '计算周围是否有丧尸_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member '计算周围是否有丧尸_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(计算周围是否有丧尸_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member '计算周围是否有丧尸_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

