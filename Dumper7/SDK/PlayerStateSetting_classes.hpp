#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStateSetting

#include "Basic.hpp"

#include "GameDifficultyEnum_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerStateSetting.PlayerStateSetting_C
// 0x0078 (0x00A0 - 0x0028)
class UPlayerStateSetting_C final : public USaveGame
{
public:
	int32                                         MouseX;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MouseY;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         音乐音量Scale; // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FOV;                                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShowFPS;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         音效音量Scale; // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         反转鼠标Y轴; // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Language;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         长按瞄准; // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         开启机瞄; // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         第一人称; // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         镜头晃动; // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         击杀提示; // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameDifficultyEnum                           游戏难度; // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         无敌; // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         无限子弹; // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         超级跳; // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         闪电侠; // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         聆听; // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         子弹时间; // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         丧尸巨大化; // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         无后坐力; // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         兔女郎丧尸; // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         无重力; // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         自动瞄准; // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         丧尸下班;                                      // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AntiMethod;                                        // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         屏幕百分比; // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         分辨率; // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerStateSetting_C">();
	}
	static class UPlayerStateSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerStateSetting_C>();
	}
};
static_assert(alignof(UPlayerStateSetting_C) == 0x000008, "Wrong alignment on UPlayerStateSetting_C");
static_assert(sizeof(UPlayerStateSetting_C) == 0x0000A0, "Wrong size on UPlayerStateSetting_C");
static_assert(offsetof(UPlayerStateSetting_C, MouseX) == 0x000028, "Member 'UPlayerStateSetting_C::MouseX' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, MouseY) == 0x00002C, "Member 'UPlayerStateSetting_C::MouseY' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 音乐音量Scale) == 0x000030, "Member 'UPlayerStateSetting_C::音乐音量Scale' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, FOV) == 0x000034, "Member 'UPlayerStateSetting_C::FOV' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, ShowFPS) == 0x000038, "Member 'UPlayerStateSetting_C::ShowFPS' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 音效音量Scale) == 0x00003C, "Member 'UPlayerStateSetting_C::音效音量Scale' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 反转鼠标Y轴) == 0x000040, "Member 'UPlayerStateSetting_C::反转鼠标Y轴' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, Language) == 0x000044, "Member 'UPlayerStateSetting_C::Language' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 长按瞄准) == 0x000048, "Member 'UPlayerStateSetting_C::长按瞄准' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 开启机瞄) == 0x00004C, "Member 'UPlayerStateSetting_C::开启机瞄' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 第一人称) == 0x000050, "Member 'UPlayerStateSetting_C::第一人称' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 镜头晃动) == 0x000054, "Member 'UPlayerStateSetting_C::镜头晃动' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 击杀提示) == 0x000058, "Member 'UPlayerStateSetting_C::击杀提示' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 游戏难度) == 0x00005C, "Member 'UPlayerStateSetting_C::游戏难度' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 无敌) == 0x000060, "Member 'UPlayerStateSetting_C::无敌' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 无限子弹) == 0x000064, "Member 'UPlayerStateSetting_C::无限子弹' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 超级跳) == 0x000068, "Member 'UPlayerStateSetting_C::超级跳' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 闪电侠) == 0x00006C, "Member 'UPlayerStateSetting_C::闪电侠' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 聆听) == 0x000070, "Member 'UPlayerStateSetting_C::聆听' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 子弹时间) == 0x000074, "Member 'UPlayerStateSetting_C::子弹时间' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 丧尸巨大化) == 0x000078, "Member 'UPlayerStateSetting_C::丧尸巨大化' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 无后坐力) == 0x00007C, "Member 'UPlayerStateSetting_C::无后坐力' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 兔女郎丧尸) == 0x000080, "Member 'UPlayerStateSetting_C::兔女郎丧尸' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 无重力) == 0x000084, "Member 'UPlayerStateSetting_C::无重力' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 自动瞄准) == 0x000088, "Member 'UPlayerStateSetting_C::自动瞄准' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 丧尸下班) == 0x00008C, "Member 'UPlayerStateSetting_C::丧尸下班' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, AntiMethod) == 0x000090, "Member 'UPlayerStateSetting_C::AntiMethod' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 屏幕百分比) == 0x000094, "Member 'UPlayerStateSetting_C::屏幕百分比' has a wrong offset!");
static_assert(offsetof(UPlayerStateSetting_C, 分辨率) == 0x000098, "Member 'UPlayerStateSetting_C::分辨率' has a wrong offset!");

}

