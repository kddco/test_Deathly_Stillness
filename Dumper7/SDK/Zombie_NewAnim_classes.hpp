#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zombie_NewAnim

#include "Basic.hpp"

#include "ZombieMovement_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Zombie_NewAnim.Zombie_NewAnim_C
// 0x1220 (0x14E0 - 0x02C0)
class UZombie_NewAnim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x02C8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x02F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0370(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x03A0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x03C8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x03F8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x04A8(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0628(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0650(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x06D0(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0700(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0728(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0758(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0808(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0960(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0988(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0AE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0B08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0B30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0B58(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0B80(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0C00(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0C30(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0CB0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0CE0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D60(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0D90(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0E30(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0F18(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0FB8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1058(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x10F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1178(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x11F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1278(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x12F8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1328(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x13D8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1420(0x0030)()
	float                                         Speed;                                             // 0x1450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartPosition;                                     // 0x1454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_BP_C*                           ZombieRef;                                         // 0x1458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x1460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1461[0x3];                                     // 0x1461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RunRate;                                           // 0x1464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead_;                                             // 0x1468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1469[0x7];                                     // 0x1469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      ChaseAnim;                                         // 0x1470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      WalkAnim;                                          // 0x1478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      IdleAnim;                                          // 0x1480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Chase_;                                            // 0x1488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Idle_;                                             // 0x1489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_148A[0x6];                                     // 0x148A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AttackAnim;                                        // 0x1490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackPlay_Rate;                                   // 0x1498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDirection;                                      // 0x149C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieMovement                               ZombieMovement;                                    // 0x14A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A1[0x7];                                     // 0x14A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      HearAnim;                                          // 0x14A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crouch_;                                           // 0x14B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OffDutyState;                                      // 0x14B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B2[0x6];                                     // 0x14B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      OffDutyAnimaiton;                                  // 0x14B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hear_;                                             // 0x14C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C1[0x3];                                     // 0x14C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Direction;                                         // 0x14C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkRate;                                          // 0x14C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Run;                                               // 0x14CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DirectionMoveForward;                              // 0x14CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMoving_;                                         // 0x14CE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否攻击; // 0x14CF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAir_;                                            // 0x14D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Zombie_NewAnim(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_RightFoot();
	void AnimNotify_LeftFoot();
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Zombie_NewAnim_AnimGraphNode_TransitionResult_B6AC30BD42B323CB5FD609A860CC3102();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Zombie_NewAnim_AnimGraphNode_TransitionResult_B46327014848546DEA8D9BB0FC3EC1EB();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Zombie_NewAnim_C">();
	}
	static class UZombie_NewAnim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UZombie_NewAnim_C>();
	}
};
static_assert(alignof(UZombie_NewAnim_C) == 0x000010, "Wrong alignment on UZombie_NewAnim_C");
static_assert(sizeof(UZombie_NewAnim_C) == 0x0014E0, "Wrong size on UZombie_NewAnim_C");
static_assert(offsetof(UZombie_NewAnim_C, UberGraphFrame) == 0x0002C0, "Member 'UZombie_NewAnim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_6) == 0x0002C8, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_8) == 0x0002F0, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_7) == 0x000370, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_UseCachedPose_2) == 0x0003A0, "Member 'UZombie_NewAnim_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_6) == 0x0003C8, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateMachine_2) == 0x0003F8, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SaveCachedPose_2) == 0x0004A8, "Member 'UZombie_NewAnim_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_5) == 0x000600, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_4) == 0x000628, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_7) == 0x000650, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_5) == 0x0006D0, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_UseCachedPose_1) == 0x000700, "Member 'UZombie_NewAnim_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_4) == 0x000728, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateMachine_1) == 0x000758, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SaveCachedPose_1) == 0x000808, "Member 'UZombie_NewAnim_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_UseCachedPose) == 0x000960, "Member 'UZombie_NewAnim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SaveCachedPose) == 0x000988, "Member 'UZombie_NewAnim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_3) == 0x000AE0, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_2) == 0x000B08, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult_1) == 0x000B30, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_TransitionResult) == 0x000B58, "Member 'UZombie_NewAnim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_6) == 0x000B80, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_3) == 0x000C00, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_5) == 0x000C30, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_2) == 0x000CB0, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_4) == 0x000CE0, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult_1) == 0x000D60, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_BlendListByBool_3) == 0x000D90, "Member 'UZombie_NewAnim_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_BlendSpacePlayer) == 0x000E30, "Member 'UZombie_NewAnim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_BlendListByBool_2) == 0x000F18, "Member 'UZombie_NewAnim_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_BlendListByBool_1) == 0x000FB8, "Member 'UZombie_NewAnim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_BlendListByBool) == 0x001058, "Member 'UZombie_NewAnim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_3) == 0x0010F8, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_2) == 0x001178, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer_1) == 0x0011F8, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_SequencePlayer) == 0x001278, "Member 'UZombie_NewAnim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateResult) == 0x0012F8, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_StateMachine) == 0x001328, "Member 'UZombie_NewAnim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_Slot) == 0x0013D8, "Member 'UZombie_NewAnim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AnimGraphNode_Root) == 0x001420, "Member 'UZombie_NewAnim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Speed) == 0x001450, "Member 'UZombie_NewAnim_C::Speed' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, StartPosition) == 0x001454, "Member 'UZombie_NewAnim_C::StartPosition' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, ZombieRef) == 0x001458, "Member 'UZombie_NewAnim_C::ZombieRef' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Hit) == 0x001460, "Member 'UZombie_NewAnim_C::Hit' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, RunRate) == 0x001464, "Member 'UZombie_NewAnim_C::RunRate' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Dead_) == 0x001468, "Member 'UZombie_NewAnim_C::Dead_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, ChaseAnim) == 0x001470, "Member 'UZombie_NewAnim_C::ChaseAnim' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, WalkAnim) == 0x001478, "Member 'UZombie_NewAnim_C::WalkAnim' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, IdleAnim) == 0x001480, "Member 'UZombie_NewAnim_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Chase_) == 0x001488, "Member 'UZombie_NewAnim_C::Chase_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Idle_) == 0x001489, "Member 'UZombie_NewAnim_C::Idle_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AttackAnim) == 0x001490, "Member 'UZombie_NewAnim_C::AttackAnim' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, AttackPlay_Rate) == 0x001498, "Member 'UZombie_NewAnim_C::AttackPlay_Rate' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, HitDirection) == 0x00149C, "Member 'UZombie_NewAnim_C::HitDirection' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, ZombieMovement) == 0x0014A0, "Member 'UZombie_NewAnim_C::ZombieMovement' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, HearAnim) == 0x0014A8, "Member 'UZombie_NewAnim_C::HearAnim' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Crouch_) == 0x0014B0, "Member 'UZombie_NewAnim_C::Crouch_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, OffDutyState) == 0x0014B1, "Member 'UZombie_NewAnim_C::OffDutyState' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, OffDutyAnimaiton) == 0x0014B8, "Member 'UZombie_NewAnim_C::OffDutyAnimaiton' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Hear_) == 0x0014C0, "Member 'UZombie_NewAnim_C::Hear_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Direction) == 0x0014C4, "Member 'UZombie_NewAnim_C::Direction' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, WalkRate) == 0x0014C8, "Member 'UZombie_NewAnim_C::WalkRate' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, Run) == 0x0014CC, "Member 'UZombie_NewAnim_C::Run' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, DirectionMoveForward) == 0x0014CD, "Member 'UZombie_NewAnim_C::DirectionMoveForward' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, IsMoving_) == 0x0014CE, "Member 'UZombie_NewAnim_C::IsMoving_' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, 是否攻击) == 0x0014CF, "Member 'UZombie_NewAnim_C::是否攻击' has a wrong offset!");
static_assert(offsetof(UZombie_NewAnim_C, IsAir_) == 0x0014D0, "Member 'UZombie_NewAnim_C::IsAir_' has a wrong offset!");

}

