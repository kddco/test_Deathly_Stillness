#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomDamage

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CustomDamage.CustomDamage_C.DamageHit
// 0x0090 (0x0090 - 0x0000)
struct CustomDamage_C_DamageHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isMelee_;                                          // 0x008C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CustomDamage_C_DamageHit) == 0x000004, "Wrong alignment on CustomDamage_C_DamageHit");
static_assert(sizeof(CustomDamage_C_DamageHit) == 0x000090, "Wrong size on CustomDamage_C_DamageHit");
static_assert(offsetof(CustomDamage_C_DamageHit, Hit) == 0x000000, "Member 'CustomDamage_C_DamageHit::Hit' has a wrong offset!");
static_assert(offsetof(CustomDamage_C_DamageHit, Damage) == 0x000088, "Member 'CustomDamage_C_DamageHit::Damage' has a wrong offset!");
static_assert(offsetof(CustomDamage_C_DamageHit, isMelee_) == 0x00008C, "Member 'CustomDamage_C_DamageHit::isMelee_' has a wrong offset!");

}

