#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RandomMove

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RandomMove.RandomMove_C.ExecuteUbergraph_RandomMove
// 0x0040 (0x0040 - 0x0000)
struct RandomMove_C_ExecuteUbergraph_RandomMove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RandomMove_C_ExecuteUbergraph_RandomMove) == 0x000008, "Wrong alignment on RandomMove_C_ExecuteUbergraph_RandomMove");
static_assert(sizeof(RandomMove_C_ExecuteUbergraph_RandomMove) == 0x000040, "Wrong size on RandomMove_C_ExecuteUbergraph_RandomMove");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, EntryPoint) == 0x000000, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::EntryPoint' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, K2Node_Event_OwnerController) == 0x000008, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, K2Node_Event_ControlledPawn) == 0x000010, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, K2Node_DynamicCast_AsZombie_BP) == 0x000018, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000030, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ExecuteUbergraph_RandomMove, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x00003C, "Member 'RandomMove_C_ExecuteUbergraph_RandomMove::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");

// Function RandomMove.RandomMove_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct RandomMove_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RandomMove_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on RandomMove_C_ReceiveExecuteAI");
static_assert(sizeof(RandomMove_C_ReceiveExecuteAI) == 0x000010, "Wrong size on RandomMove_C_ReceiveExecuteAI");
static_assert(offsetof(RandomMove_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'RandomMove_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(RandomMove_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'RandomMove_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

