#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingSlotUMG

#include "Basic.hpp"

#include "SettingSlotUMG_classes.hpp"
#include "SettingSlotUMG_parameters.hpp"


namespace SDK
{

// Function SettingSlotUMG.SettingSlotUMG_C.ExecuteUbergraph_SettingSlotUMG
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::ExecuteUbergraph_SettingSlotUMG(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "ExecuteUbergraph_SettingSlotUMG");

	Params::SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingSlotUMG_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "PreConstruct");

	Params::SettingSlotUMG_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void USettingSlotUMG_C::BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.BndEvt__Button_188_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void USettingSlotUMG_C::BndEvt__Button_188_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "BndEvt__Button_188_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USettingSlotUMG_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "OnMouseLeave");

	Params::SettingSlotUMG_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USettingSlotUMG_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "OnMouseEnter");

	Params::SettingSlotUMG_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingSlotUMG_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.CustomMappingCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionKeyMapping&    InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FInputAxisKeyMapping&      InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingSlotUMG_C::CustomMappingCheck(const struct FInputActionKeyMapping& InputAction, const struct FInputAxisKeyMapping& InputAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "CustomMappingCheck");

	Params::SettingSlotUMG_C_CustomMappingCheck Parms{};

	Parms.InputAction = std::move(InputAction);
	Parms.InputAxis = std::move(InputAxis);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.initializeSetting
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::initializeSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "initializeSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.SettingDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      标题(BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      详情(BlueprintVisible, BlueprintReadOnly, Parm)

void USettingSlotUMG_C::SettingDetails(const class FText& 标题, const class FText& 详情)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "SettingDetails");

	Params::SettingSlotUMG_C_SettingDetails Parms{};

	Parms.标题 = std::move(标题);
	Parms.详情 = std::move(详情);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply USettingSlotUMG_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "OnMouseButtonDown");

	Params::SettingSlotUMG_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingSlotUMG.SettingSlotUMG_C.进入选中模式
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::进入选中模式()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "进入选中模式");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.更改分辨率
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::更改分辨率()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "更改分辨率");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存Fov设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存Fov设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存Fov设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.选项更改
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32&                                  Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ___0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 USettingSlotUMG_C::选项更改(int32& Index_0, int32 ___0, int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "选项更改");

	Params::SettingSlotUMG_C_选项更改 Parms{};

	Parms.Index_0 = Index_0;
	Parms.___0 = ___0;
	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	Index_0 = Parms.Index_0;

	return Parms.ReturnValue;
}


// Function SettingSlotUMG.SettingSlotUMG_C.画质文字设置
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::画质文字设置(int32 Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "画质文字设置");

	Params::SettingSlotUMG_C_画质文字设置 Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.FOV文字设置
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::FOV文字设置(int32 Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "FOV文字设置");

	Params::SettingSlotUMG_C_FOV文字设置 Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存ShowFps设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存ShowFps设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存ShowFps设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存反转鼠标Y轴设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存反转鼠标Y轴设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存反转鼠标Y轴设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.全屏模式文字更改
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::全屏模式文字更改(int32 Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "全屏模式文字更改");

	Params::SettingSlotUMG_C_全屏模式文字更改 Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存语言设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存语言设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存语言设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存长按瞄准设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存长按瞄准设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存长按瞄准设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存开启机瞄设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存开启机瞄设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存开启机瞄设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存第一人称设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存第一人称设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存第一人称设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存镜头晃动设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存镜头晃动设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存镜头晃动设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存击杀提示设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存击杀提示设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存击杀提示设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存游戏难度设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存游戏难度设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存游戏难度设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.GetScreenResolution
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText USettingSlotUMG_C::GetScreenResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "GetScreenResolution");

	Params::SettingSlotUMG_C_GetScreenResolution Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存无敌设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存无敌设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存无敌设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.读档
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPlayerStateSetting_C**           Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::读档(class UPlayerStateSetting_C** Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "读档");

	Params::SettingSlotUMG_C_读档 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存无限子弹设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存无限子弹设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存无限子弹设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存超级跳设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存超级跳设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存超级跳设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存闪电侠设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存闪电侠设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存闪电侠设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存聆听设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存聆听设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存聆听设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存子弹时间设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存子弹时间设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存子弹时间设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存巨大化设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存巨大化设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存巨大化设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存无后坐力设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存无后坐力设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存无后坐力设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存兔女郎丧尸设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存兔女郎丧尸设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存兔女郎丧尸设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存无重力设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存无重力设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存无重力设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存自动瞄准设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存自动瞄准设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存自动瞄准设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存丧尸下班设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存丧尸下班设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存丧尸下班设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.保存抗锯齿方法设置
// (Public, BlueprintCallable, BlueprintEvent)

void USettingSlotUMG_C::保存抗锯齿方法设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "保存抗锯齿方法设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingSlotUMG.SettingSlotUMG_C.设置无边框全屏
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   全屏模式(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          分辨率设置(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingSlotUMG_C::设置无边框全屏(uint8 全屏模式, class UWidget* 分辨率设置)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingSlotUMG_C", "设置无边框全屏");

	Params::SettingSlotUMG_C_设置无边框全屏 Parms{};

	Parms.全屏模式 = 全屏模式;
	Parms.分辨率设置 = 分辨率设置;

	UObject::ProcessEvent(Func, &Parms);
}

}

