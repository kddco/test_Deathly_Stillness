#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Location_BP

#include "Basic.hpp"

#include "QuestType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "MapType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Location_BP.Location_BP_C
// 0x0038 (0x0258 - 0x0220)
class ALocation_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot1;                                 // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       拾取提示; // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDestination_UMG_C*                     Location_UMG;                                      // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestType                                    QuestType;                                         // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Start;                                             // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EMapType                                      MapType;                                           // 0x024A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             PickupImage;                                       // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Location_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void PlayerInteration(class AActor* Player);
	void BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void 创建目标点提示();
	void ReceiveTick(float DeltaSeconds);
	void BreakInteration();
	void RenderDeepClose();
	void RenderDeepOpen();
	class FText 获取经纬度(const class FText& 任务内容);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Location_BP_C">();
	}
	static class ALocation_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALocation_BP_C>();
	}
};
static_assert(alignof(ALocation_BP_C) == 0x000008, "Wrong alignment on ALocation_BP_C");
static_assert(sizeof(ALocation_BP_C) == 0x000258, "Wrong size on ALocation_BP_C");
static_assert(offsetof(ALocation_BP_C, UberGraphFrame) == 0x000220, "Member 'ALocation_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, Box) == 0x000228, "Member 'ALocation_BP_C::Box' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, DefaultSceneRoot1) == 0x000230, "Member 'ALocation_BP_C::DefaultSceneRoot1' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, 拾取提示) == 0x000238, "Member 'ALocation_BP_C::拾取提示' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, Location_UMG) == 0x000240, "Member 'ALocation_BP_C::Location_UMG' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, QuestType) == 0x000248, "Member 'ALocation_BP_C::QuestType' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, Start) == 0x000249, "Member 'ALocation_BP_C::Start' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, MapType) == 0x00024A, "Member 'ALocation_BP_C::MapType' has a wrong offset!");
static_assert(offsetof(ALocation_BP_C, PickupImage) == 0x000250, "Member 'ALocation_BP_C::PickupImage' has a wrong offset!");

}

