#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonFunction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CommonFunction.CommonFunction_C.HitZombie
// 0x0148 (0x0148 - 0x0000)
struct CommonFunction_C_HitZombie final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonFunction_C_HitZombie) == 0x000008, "Wrong alignment on CommonFunction_C_HitZombie");
static_assert(sizeof(CommonFunction_C_HitZombie) == 0x000148, "Wrong size on CommonFunction_C_HitZombie");
static_assert(offsetof(CommonFunction_C_HitZombie, Hit) == 0x000000, "Member 'CommonFunction_C_HitZombie::Hit' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, __WorldContext) == 0x000088, "Member 'CommonFunction_C_HitZombie::__WorldContext' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_ElementIndex) == 0x0000F4, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_FaceIndex) == 0x0000F8, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_TraceStart) == 0x0000FC, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_BreakHitResult_TraceEnd) == 0x000108, "Member 'CommonFunction_C_HitZombie::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000114, "Member 'CommonFunction_C_HitZombie::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000120, "Member 'CommonFunction_C_HitZombie::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000130, "Member 'CommonFunction_C_HitZombie::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_SpawnDecalAttached_ReturnValue) == 0x000138, "Member 'CommonFunction_C_HitZombie::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonFunction_C_HitZombie, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000140, "Member 'CommonFunction_C_HitZombie::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");

}

