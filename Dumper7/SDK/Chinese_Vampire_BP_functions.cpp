#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Chinese_Vampire_BP

#include "Basic.hpp"

#include "Chinese_Vampire_BP_classes.hpp"
#include "Chinese_Vampire_BP_parameters.hpp"


namespace SDK
{

// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.ExecuteUbergraph_Chinese_Vampire_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChinese_Vampire_BP_C::ExecuteUbergraph_Chinese_Vampire_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "ExecuteUbergraph_Chinese_Vampire_BP");

	Params::Chinese_Vampire_BP_C_ExecuteUbergraph_Chinese_Vampire_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.UISettingApply
// (Public, BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::UISettingApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "UISettingApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.DamageHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMelee_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AChinese_Vampire_BP_C::DamageHit(const struct FHitResult& Hit_0, float Damage, bool isMelee_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "DamageHit");

	Params::Chinese_Vampire_BP_C_DamageHit Parms{};

	Parms.Hit_0 = std::move(Hit_0);
	Parms.Damage = Damage;
	Parms.isMelee_ = isMelee_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AChinese_Vampire_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.关闭被击退状态
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::关闭被击退状态()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "关闭被击退状态");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.击退
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::击退()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "击退");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.RightFootSound
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::RightFootSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "RightFootSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.leftFootSound
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::leftFootSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "leftFootSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.僵尸攻击范围
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::僵尸攻击范围()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "僵尸攻击范围");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.ResetAttack
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::ResetAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "ResetAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChinese_Vampire_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "ReceiveTick");

	Params::Chinese_Vampire_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.ChangeLightColor
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::ChangeLightColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "ChangeLightColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.原地不动时间
// (BlueprintCallable, BlueprintEvent)

void AChinese_Vampire_BP_C::原地不动时间()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "原地不动时间");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.OnSuccess_2180E67C465A2F1B00043781C4893172
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChinese_Vampire_BP_C::OnSuccess_2180E67C465A2F1B00043781C4893172(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "OnSuccess_2180E67C465A2F1B00043781C4893172");

	Params::Chinese_Vampire_BP_C_OnSuccess_2180E67C465A2F1B00043781C4893172 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.OnFail_2180E67C465A2F1B00043781C4893172
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChinese_Vampire_BP_C::OnFail_2180E67C465A2F1B00043781C4893172(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "OnFail_2180E67C465A2F1B00043781C4893172");

	Params::Chinese_Vampire_BP_C_OnFail_2180E67C465A2F1B00043781C4893172 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.时间轴_0__UpdateFunc
// (BlueprintEvent)

void AChinese_Vampire_BP_C::时间轴_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "时间轴_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.时间轴_0__FinishedFunc
// (BlueprintEvent)

void AChinese_Vampire_BP_C::时间轴_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "时间轴_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.脚步声检测
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  目标(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChinese_Vampire_BP_C::脚步声检测(class USceneComponent* 目标)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "脚步声检测");

	Params::Chinese_Vampire_BP_C_脚步声检测 Parms{};

	Parms.目标 = 目标;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Chinese_Vampire_BP.Chinese_Vampire_BP_C.更改控制旋转模式
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    将旋转朝向运动(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    使用控制器所需的旋转(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    使用控制器旋转Yaw(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AChinese_Vampire_BP_C::更改控制旋转模式(bool 将旋转朝向运动, bool 使用控制器所需的旋转, bool 使用控制器旋转Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Chinese_Vampire_BP_C", "更改控制旋转模式");

	Params::Chinese_Vampire_BP_C_更改控制旋转模式 Parms{};

	Parms.将旋转朝向运动 = 将旋转朝向运动;
	Parms.使用控制器所需的旋转 = 使用控制器所需的旋转;
	Parms.使用控制器旋转Yaw = 使用控制器旋转Yaw;

	UObject::ProcessEvent(Func, &Parms);
}

}

