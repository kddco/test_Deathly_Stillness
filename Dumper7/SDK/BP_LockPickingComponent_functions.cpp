#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockPickingComponent

#include "Basic.hpp"

#include "BP_LockPickingComponent_classes.hpp"
#include "BP_LockPickingComponent_parameters.hpp"


namespace SDK
{

// Function BP_LockPickingComponent.BP_LockPickingComponent_C.ExecuteUbergraph_BP_LockPickingComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LockPickingComponent_C::ExecuteUbergraph_BP_LockPickingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LockPickingComponent_C", "ExecuteUbergraph_BP_LockPickingComponent");

	Params::BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LockPickingComponent.BP_LockPickingComponent_C.PickLock
// (BlueprintCallable, BlueprintEvent)

void UBP_LockPickingComponent_C::PickLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LockPickingComponent_C", "PickLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LockPickingComponent.BP_LockPickingComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_LockPickingComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LockPickingComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LockPickingComponent.BP_LockPickingComponent_C.CheckForLock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_上锁的门_C*要开的门1(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LockPickingComponent_C::CheckForLock(class ABP_上锁的门_C* 要开的门1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LockPickingComponent_C", "CheckForLock");

	Params::BP_LockPickingComponent_C_CheckForLock Parms{};

	Parms.要开的门1 = 要开的门1;

	UObject::ProcessEvent(Func, &Parms);
}

}

