#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomDamage

#include "Basic.hpp"

#include "CustomDamage_classes.hpp"
#include "CustomDamage_parameters.hpp"


namespace SDK
{

// Function CustomDamage.CustomDamage_C.DamageHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMelee_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ICustomDamage_C::DamageHit(const struct FHitResult& Hit, float Damage, bool isMelee_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("CustomDamage_C", "DamageHit");

	Params::CustomDamage_C_DamageHit Parms{};

	Parms.Hit = std::move(Hit);
	Parms.Damage = Damage;
	Parms.isMelee_ = isMelee_;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

