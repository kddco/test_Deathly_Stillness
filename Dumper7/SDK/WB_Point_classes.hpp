#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Point

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Point.WB_Point_C
// 0x0070 (0x02D0 - 0x0260)
class UWB_Point_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_41;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_69;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UActorComponent*                        OwnerComponent;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMINIMAP_UMG_C*                         MiniMap;                                           // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x02A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Details;                                           // 0x02B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_WB_Point(int32 EntryPoint);
	void Destruct();
	void Construct();
	void BndEvt__WB_Point_Button_41_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WB_Point_Button_41_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void GetDegress(float X, float Y, float* Degress);
	void GetCoordinate(float Degress, float R, struct FVector2D* NewCoordinate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Point_C">();
	}
	static class UWB_Point_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Point_C>();
	}
};
static_assert(alignof(UWB_Point_C) == 0x000008, "Wrong alignment on UWB_Point_C");
static_assert(sizeof(UWB_Point_C) == 0x0002D0, "Wrong size on UWB_Point_C");
static_assert(offsetof(UWB_Point_C, UberGraphFrame) == 0x000260, "Member 'UWB_Point_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, NewAnimation) == 0x000268, "Member 'UWB_Point_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, Button_41) == 0x000270, "Member 'UWB_Point_C::Button_41' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, Icon) == 0x000278, "Member 'UWB_Point_C::Icon' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, TextBlock_69) == 0x000280, "Member 'UWB_Point_C::TextBlock_69' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, OwnerComponent) == 0x000288, "Member 'UWB_Point_C::OwnerComponent' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, MiniMap) == 0x000290, "Member 'UWB_Point_C::MiniMap' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, IconTexture) == 0x000298, "Member 'UWB_Point_C::IconTexture' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, Name_0) == 0x0002A0, "Member 'UWB_Point_C::Name_0' has a wrong offset!");
static_assert(offsetof(UWB_Point_C, Details) == 0x0002B8, "Member 'UWB_Point_C::Details' has a wrong offset!");

}

