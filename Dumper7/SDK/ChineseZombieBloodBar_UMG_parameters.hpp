#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChineseZombieBloodBar_UMG

#include "Basic.hpp"


namespace SDK::Params
{

// Function ChineseZombieBloodBar_UMG.ChineseZombieBloodBar_UMG_C.ExecuteUbergraph_ChineseZombieBloodBar_UMG
// 0x0018 (0x0018 - 0x0000)
struct ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AChinese_Vampire_BP_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG) == 0x000008, "Wrong alignment on ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG");
static_assert(sizeof(ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG) == 0x000018, "Wrong size on ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG, EntryPoint) == 0x000000, "Member 'ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ChineseZombieBloodBar_UMG_C_ExecuteUbergraph_ChineseZombieBloodBar_UMG::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ChineseZombieBloodBar_UMG.ChineseZombieBloodBar_UMG_C.GetPercent_0
// 0x000C (0x000C - 0x0000)
struct ChineseZombieBloodBar_UMG_C_GetPercent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChineseZombieBloodBar_UMG_C_GetPercent_0) == 0x000004, "Wrong alignment on ChineseZombieBloodBar_UMG_C_GetPercent_0");
static_assert(sizeof(ChineseZombieBloodBar_UMG_C_GetPercent_0) == 0x00000C, "Wrong size on ChineseZombieBloodBar_UMG_C_GetPercent_0");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_GetPercent_0, ReturnValue) == 0x000000, "Member 'ChineseZombieBloodBar_UMG_C_GetPercent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_GetPercent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'ChineseZombieBloodBar_UMG_C_GetPercent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChineseZombieBloodBar_UMG_C_GetPercent_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'ChineseZombieBloodBar_UMG_C_GetPercent_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

