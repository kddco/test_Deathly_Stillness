#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 丧尸波数生成器_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ZombieWave_Enum_structs.hpp"


namespace SDK::Params
{

// Function 丧尸波数生成器_BP.丧尸波数生成器_BP_C.ExecuteUbergraph_丧尸波数生成器_BP
// 0x0130 (0x0130 - 0x0000)
struct 丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ___float_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_5;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieWave_Enum                              ___byte_Variable;                                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ___float_Variable_6;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_7;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_8;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_9;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_10;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_11;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieWave_Enum                              ___byte_Variable_1;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ___float_Variable_12;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_13;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_14;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_15;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_16;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_17;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieWave_Enum                              ___byte_Variable_2;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackroom_Quest_BP_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackroom警报声_BP_C*                CallFunc_GetActorOfClass_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class A丧尸波数生成点_BP_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B8(0x0010)(ReferenceParm)
	class A丧尸波数生成点_BP_C* CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0xB];                                       // 0x00D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmmoSpawner_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmmoSpawner_C*                         CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP) == 0x000010, "Wrong alignment on 丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP");
static_assert(sizeof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP) == 0x000130, "Wrong size on 丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, EntryPoint) == 0x000000, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_DynamicCast_AsPlayer_BP) == 0x000010, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable) == 0x00001C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_1) == 0x000020, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_2) == 0x000024, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_2' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_3) == 0x000028, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_3' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_4) == 0x00002C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_4' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_5) == 0x000030, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_5' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___byte_Variable) == 0x000034, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___byte_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_6) == 0x000038, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_6' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_7) == 0x00003C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_7' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_8) == 0x000040, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_8' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_9) == 0x000044, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_9' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_10) == 0x000048, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_10' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_11) == 0x00004C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_11' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___byte_Variable_1) == 0x000050, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___byte_Variable_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_12) == 0x000054, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_12' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_13) == 0x000058, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_13' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_14) == 0x00005C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_14' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_15) == 0x000060, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_15' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_16) == 0x000064, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_16' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___float_Variable_17) == 0x000068, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___float_Variable_17' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___int_Loop_Counter_Variable) == 0x00006C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___int_Array_Index_Variable) == 0x000078, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, ___byte_Variable_2) == 0x00007C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::___byte_Variable_2' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Add_ByteByte_ReturnValue) == 0x00007D, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_SwitchEnum_CmpSuccess) == 0x00007E, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_GetValidValue_ReturnValue) == 0x00007F, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_GetActorOfClass_ReturnValue) == 0x000080, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_Select_Default) == 0x000088, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_K2_SetTimer_ReturnValue) == 0x000090, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_Select_Default_1) == 0x000098, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, K2Node_Select_Default_2) == 0x00009C, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_FTrunc_ReturnValue) == 0x0000A0, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_FTrunc_ReturnValue_1) == 0x0000A4, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0000A8, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B8, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Array_Get_Item) == 0x0000C8, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000118, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000128, "Member '丧尸波数生成器_BP_C_ExecuteUbergraph_丧尸波数生成器_BP::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function 丧尸波数生成器_BP.丧尸波数生成器_BP_C.根据点位生成丧尸
// 0x00D0 (0x00D0 - 0x0000)
struct 丧尸波数生成器_BP_C_根据点位生成丧尸 final
{
public:
	int32                                         要生成的数量; // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AZombie_BP_C*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	TArray<class A丧尸波数生成点_BP_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0050(0x0010)(ReferenceParm)
	class A丧尸波数生成点_BP_C* CallFunc_Array_Random_OutItem;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_BP_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(丧尸波数生成器_BP_C_根据点位生成丧尸) == 0x000010, "Wrong alignment on 丧尸波数生成器_BP_C_根据点位生成丧尸");
static_assert(sizeof(丧尸波数生成器_BP_C_根据点位生成丧尸) == 0x0000D0, "Wrong size on 丧尸波数生成器_BP_C_根据点位生成丧尸");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, 要生成的数量) == 0x000000, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::要生成的数量' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, ___int_Array_Index_Variable) == 0x000004, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, ___int_Loop_Counter_Variable) == 0x000008, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, ___int_Variable) == 0x000010, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::___int_Variable' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Array_Get_Item) == 0x000030, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, K2Node_MakeArray_Array) == 0x000040, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000050, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Array_Random_OutItem) == 0x000060, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Array_Random_OutIndex) == 0x000068, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000080, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(丧尸波数生成器_BP_C_根据点位生成丧尸, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member '丧尸波数生成器_BP_C_根据点位生成丧尸::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

