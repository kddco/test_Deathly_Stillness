#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGamePlayerState

#include "Basic.hpp"

#include "InGamePlayerState_classes.hpp"
#include "InGamePlayerState_parameters.hpp"


namespace SDK
{

// Function InGamePlayerState.InGamePlayerState_C.ExecuteUbergraph_InGamePlayerState
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGamePlayerState_C::ExecuteUbergraph_InGamePlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "ExecuteUbergraph_InGamePlayerState");

	Params::InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGamePlayerState.InGamePlayerState_C.击杀丧尸计分
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   得分(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGamePlayerState_C::击杀丧尸计分(float 得分)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "击杀丧尸计分");

	Params::InGamePlayerState_C_击杀丧尸计分 Parms{};

	Parms.得分 = 得分;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InGamePlayerState.InGamePlayerState_C.打中丧尸子弹数量
// (BlueprintCallable, BlueprintEvent)

void AInGamePlayerState_C::打中丧尸子弹数量()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "打中丧尸子弹数量");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGamePlayerState.InGamePlayerState_C.射击总子弹数量
// (BlueprintCallable, BlueprintEvent)

void AInGamePlayerState_C::射击总子弹数量()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "射击总子弹数量");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGamePlayerState.InGamePlayerState_C.打中丧尸爆头子弹总数
// (BlueprintCallable, BlueprintEvent)

void AInGamePlayerState_C::打中丧尸爆头子弹总数()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "打中丧尸爆头子弹总数");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InGamePlayerState.InGamePlayerState_C.爆头率计算
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  爆头率_0(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGamePlayerState_C::爆头率计算(float* 爆头率_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "爆头率计算");

	Params::InGamePlayerState_C_爆头率计算 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (爆头率_0 != nullptr)
		*爆头率_0 = Parms.爆头率_0;
}


// Function InGamePlayerState.InGamePlayerState_C.命中率计算
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  命中率_0(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInGamePlayerState_C::命中率计算(float* 命中率_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InGamePlayerState_C", "命中率计算");

	Params::InGamePlayerState_C_命中率计算 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (命中率_0 != nullptr)
		*命中率_0 = Parms.命中率_0;
}

}

