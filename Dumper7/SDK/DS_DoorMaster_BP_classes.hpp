#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DS_DoorMaster_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DS_DoorMaster_BP.DS_DoorMaster_BP_C
// 0x00A0 (0x02C0 - 0x0220)
class ADS_DoorMaster_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere1;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   door;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       拾取提示; // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Swing_Closed_NewTrack_1_F19E210C4F42B709A0AB21B376AC9ACC; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Swing_Closed__Direction_F19E210C4F42B709A0AB21B376AC9ACC; // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Swing_Closed;                                      // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Swing_Open_NewTrack_0_FA1FFA3F4B6A3115A6E730BC28819E67; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Swing_Open__Direction_FA1FFA3F4B6A3115A6E730BC28819E67; // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Swing_Open;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open_direction;                                    // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsOpen_;                                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             DoorOpenSound;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            New_Mesh;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 目标; // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DS_DoorMaster_BP(int32 EntryPoint);
	void BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_cp02_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__DS_DoorMaster_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DoorOpenRest();
	void ZombieOpenDoor(class AActor* 目标_0);
	void ReceiveBeginPlay();
	void PlayerInteration(class AActor* Player);
	void RenderDeepClose();
	void RenderDeepOpen();
	void BreakInteration();
	void Swing_Closed__UpdateFunc();
	void Swing_Closed__FinishedFunc();
	void Swing_Open__UpdateFunc();
	void Swing_Open__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DS_DoorMaster_BP_C">();
	}
	static class ADS_DoorMaster_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADS_DoorMaster_BP_C>();
	}
};
static_assert(alignof(ADS_DoorMaster_BP_C) == 0x000008, "Wrong alignment on ADS_DoorMaster_BP_C");
static_assert(sizeof(ADS_DoorMaster_BP_C) == 0x0002C0, "Wrong size on ADS_DoorMaster_BP_C");
static_assert(offsetof(ADS_DoorMaster_BP_C, UberGraphFrame) == 0x000220, "Member 'ADS_DoorMaster_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Sphere1) == 0x000228, "Member 'ADS_DoorMaster_BP_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Box) == 0x000230, "Member 'ADS_DoorMaster_BP_C::Box' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, door) == 0x000238, "Member 'ADS_DoorMaster_BP_C::door' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Audio) == 0x000240, "Member 'ADS_DoorMaster_BP_C::Audio' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, 拾取提示) == 0x000248, "Member 'ADS_DoorMaster_BP_C::拾取提示' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Sphere) == 0x000250, "Member 'ADS_DoorMaster_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, DefaultSceneRoot) == 0x000258, "Member 'ADS_DoorMaster_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Closed_NewTrack_1_F19E210C4F42B709A0AB21B376AC9ACC) == 0x000260, "Member 'ADS_DoorMaster_BP_C::Swing_Closed_NewTrack_1_F19E210C4F42B709A0AB21B376AC9ACC' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Closed__Direction_F19E210C4F42B709A0AB21B376AC9ACC) == 0x000264, "Member 'ADS_DoorMaster_BP_C::Swing_Closed__Direction_F19E210C4F42B709A0AB21B376AC9ACC' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Closed) == 0x000268, "Member 'ADS_DoorMaster_BP_C::Swing_Closed' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Open_NewTrack_0_FA1FFA3F4B6A3115A6E730BC28819E67) == 0x000270, "Member 'ADS_DoorMaster_BP_C::Swing_Open_NewTrack_0_FA1FFA3F4B6A3115A6E730BC28819E67' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Open__Direction_FA1FFA3F4B6A3115A6E730BC28819E67) == 0x000274, "Member 'ADS_DoorMaster_BP_C::Swing_Open__Direction_FA1FFA3F4B6A3115A6E730BC28819E67' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Swing_Open) == 0x000278, "Member 'ADS_DoorMaster_BP_C::Swing_Open' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Open_direction) == 0x000280, "Member 'ADS_DoorMaster_BP_C::Open_direction' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, Text) == 0x000288, "Member 'ADS_DoorMaster_BP_C::Text' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, IsOpen_) == 0x0002A0, "Member 'ADS_DoorMaster_BP_C::IsOpen_' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, DoorOpenSound) == 0x0002A8, "Member 'ADS_DoorMaster_BP_C::DoorOpenSound' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, New_Mesh) == 0x0002B0, "Member 'ADS_DoorMaster_BP_C::New_Mesh' has a wrong offset!");
static_assert(offsetof(ADS_DoorMaster_BP_C, 目标) == 0x0002B8, "Member 'ADS_DoorMaster_BP_C::目标' has a wrong offset!");

}

