#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 计算周围是否有丧尸

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass 计算周围是否有丧尸.计算周围是否有丧尸_C
// 0x0040 (0x00D8 - 0x0098)
class U计算周围是否有丧尸_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          是否活着的丧尸; // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Zombie;                                            // 0x00A8(0x0028)(Edit, BlueprintVisible)
	class AZombie_BP_C*                           As_Zombie_BP;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_计算周围是否有丧尸(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"计算周围是否有丧尸_C">();
	}
	static class U计算周围是否有丧尸_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<U计算周围是否有丧尸_C>();
	}
};
static_assert(alignof(U计算周围是否有丧尸_C) == 0x000008, "Wrong alignment on U计算周围是否有丧尸_C");
static_assert(sizeof(U计算周围是否有丧尸_C) == 0x0000D8, "Wrong size on U计算周围是否有丧尸_C");
static_assert(offsetof(U计算周围是否有丧尸_C, UberGraphFrame) == 0x000098, "Member 'U计算周围是否有丧尸_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(U计算周围是否有丧尸_C, 是否活着的丧尸) == 0x0000A0, "Member 'U计算周围是否有丧尸_C::是否活着的丧尸' has a wrong offset!");
static_assert(offsetof(U计算周围是否有丧尸_C, Zombie) == 0x0000A8, "Member 'U计算周围是否有丧尸_C::Zombie' has a wrong offset!");
static_assert(offsetof(U计算周围是否有丧尸_C, As_Zombie_BP) == 0x0000D0, "Member 'U计算周围是否有丧尸_C::As_Zombie_BP' has a wrong offset!");

}

