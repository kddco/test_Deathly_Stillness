#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGamePlayerState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass InGamePlayerState.InGamePlayerState_C
// 0x0030 (0x0350 - 0x0320)
class AInGamePlayerState_C final : public APlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         命中率; // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         爆头率; // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         击杀得分; // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         通过时间; // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         射出的子弹总数; // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         打中丧尸的子弹总数; // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         打中丧尸头部的子弹总数; // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_InGamePlayerState(int32 EntryPoint);
	void 击杀丧尸计分(float 得分);
	void 打中丧尸子弹数量();
	void 射击总子弹数量();
	void 打中丧尸爆头子弹总数();
	void 爆头率计算(float* 爆头率_0);
	void 命中率计算(float* 命中率_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InGamePlayerState_C">();
	}
	static class AInGamePlayerState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInGamePlayerState_C>();
	}
};
static_assert(alignof(AInGamePlayerState_C) == 0x000008, "Wrong alignment on AInGamePlayerState_C");
static_assert(sizeof(AInGamePlayerState_C) == 0x000350, "Wrong size on AInGamePlayerState_C");
static_assert(offsetof(AInGamePlayerState_C, UberGraphFrame) == 0x000320, "Member 'AInGamePlayerState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, DefaultSceneRoot) == 0x000328, "Member 'AInGamePlayerState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 命中率) == 0x000330, "Member 'AInGamePlayerState_C::命中率' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 爆头率) == 0x000334, "Member 'AInGamePlayerState_C::爆头率' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 击杀得分) == 0x000338, "Member 'AInGamePlayerState_C::击杀得分' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 通过时间) == 0x00033C, "Member 'AInGamePlayerState_C::通过时间' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 射出的子弹总数) == 0x000340, "Member 'AInGamePlayerState_C::射出的子弹总数' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 打中丧尸的子弹总数) == 0x000344, "Member 'AInGamePlayerState_C::打中丧尸的子弹总数' has a wrong offset!");
static_assert(offsetof(AInGamePlayerState_C, 打中丧尸头部的子弹总数) == 0x000348, "Member 'AInGamePlayerState_C::打中丧尸头部的子弹总数' has a wrong offset!");

}

