#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Location_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Location_BP.Location_BP_C.ExecuteUbergraph_Location_BP
// 0x01E0 (0x01E0 - 0x0000)
struct Location_BP_C_ExecuteUbergraph_Location_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AChineseAlleyQuest_BP_C*                CallFunc_GetActorOfClass_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0088(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_1;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Player;                               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALocation_BP_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0160(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AChineseAlleyQuest_BP_C*                CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPickUpTips_C*                          K2Node_DynamicCast_AsPick_Up_Tips;                 // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestination_UMG_C*                     CallFunc_Create_ReturnValue;                       // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABackroom_Quest_BP_C*                   CallFunc_GetActorOfClass_ReturnValue_2;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMistyQuest_BP_C*                       CallFunc_GetActorOfClass_ReturnValue_3;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Location_BP_C_ExecuteUbergraph_Location_BP) == 0x000010, "Wrong alignment on Location_BP_C_ExecuteUbergraph_Location_BP");
static_assert(sizeof(Location_BP_C_ExecuteUbergraph_Location_BP) == 0x0001E0, "Wrong size on Location_BP_C_ExecuteUbergraph_Location_BP");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, EntryPoint) == 0x000000, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000052, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_1) == 0x000053, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_IsValid_ReturnValue_2) == 0x000054, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetActorOfClass_ReturnValue) == 0x000058, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_2) == 0x000060, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000068, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000070, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000078, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000080, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000084, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000088, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000110, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000118, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000120, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000128, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_AsPlayer_BP) == 0x000130, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_AsPlayer_BP_1) == 0x000140, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_AsPlayer_BP_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_Event_Player) == 0x000150, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_3) == 0x000158, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x000160, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_IsValid_ReturnValue_3) == 0x000170, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000180, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000188, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_4) == 0x000190, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_AsPick_Up_Tips) == 0x000198, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_AsPick_Up_Tips' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetPlayerController_ReturnValue) == 0x0001A8, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_Create_ReturnValue) == 0x0001B0, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_IsValid_ReturnValue_4) == 0x0001B8, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetActorOfClass_ReturnValue_2) == 0x0001C0, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetActorOfClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, CallFunc_GetActorOfClass_ReturnValue_3) == 0x0001C8, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::CallFunc_GetActorOfClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_5) == 0x0001D0, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(Location_BP_C_ExecuteUbergraph_Location_BP, K2Node_SwitchEnum_CmpSuccess_6) == 0x0001D1, "Member 'Location_BP_C_ExecuteUbergraph_Location_BP::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");

// Function Location_BP.Location_BP_C.PlayerInteration
// 0x0008 (0x0008 - 0x0000)
struct Location_BP_C_PlayerInteration final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Location_BP_C_PlayerInteration) == 0x000008, "Wrong alignment on Location_BP_C_PlayerInteration");
static_assert(sizeof(Location_BP_C_PlayerInteration) == 0x000008, "Wrong size on Location_BP_C_PlayerInteration");
static_assert(offsetof(Location_BP_C_PlayerInteration, Player) == 0x000000, "Member 'Location_BP_C_PlayerInteration::Player' has a wrong offset!");

// Function Location_BP.Location_BP_C.BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Location_BP.Location_BP_C.BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Location_BP_C_BndEvt__Location_BP_Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Location_BP.Location_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Location_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Location_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on Location_BP_C_ReceiveTick");
static_assert(sizeof(Location_BP_C_ReceiveTick) == 0x000004, "Wrong size on Location_BP_C_ReceiveTick");
static_assert(offsetof(Location_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Location_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Location_BP.Location_BP_C.获取经纬度
// 0x0030 (0x0030 - 0x0000)
struct Location_BP_C_获取经纬度 final
{
public:
	class FText                                   任务内容; // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(Location_BP_C_获取经纬度) == 0x000008, "Wrong alignment on Location_BP_C_获取经纬度");
static_assert(sizeof(Location_BP_C_获取经纬度) == 0x000030, "Wrong size on Location_BP_C_获取经纬度");
static_assert(offsetof(Location_BP_C_获取经纬度, 任务内容) == 0x000000, "Member 'Location_BP_C_获取经纬度::任务内容' has a wrong offset!");
static_assert(offsetof(Location_BP_C_获取经纬度, ReturnValue) == 0x000018, "Member 'Location_BP_C_获取经纬度::ReturnValue' has a wrong offset!");

}

