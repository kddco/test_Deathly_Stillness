#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DatasmithCore

#include "Basic.hpp"

#include "DatasmithCore_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class DatasmithCore.DatasmithMesh
// 0x0028 (0x0050 - 0x0028)
class UDatasmithMesh final : public UObject
{
public:
	class FString                                 MeshName;                                          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCollisionMesh;                                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDatasmithMeshSourceModel>      SourceModels;                                      // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DatasmithMesh">();
	}
	static class UDatasmithMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatasmithMesh>();
	}
};
static_assert(alignof(UDatasmithMesh) == 0x000008, "Wrong alignment on UDatasmithMesh");
static_assert(sizeof(UDatasmithMesh) == 0x000050, "Wrong size on UDatasmithMesh");
static_assert(offsetof(UDatasmithMesh, MeshName) == 0x000028, "Member 'UDatasmithMesh::MeshName' has a wrong offset!");
static_assert(offsetof(UDatasmithMesh, bIsCollisionMesh) == 0x000038, "Member 'UDatasmithMesh::bIsCollisionMesh' has a wrong offset!");
static_assert(offsetof(UDatasmithMesh, SourceModels) == 0x000040, "Member 'UDatasmithMesh::SourceModels' has a wrong offset!");

}

