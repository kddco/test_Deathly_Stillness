#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MinimapPoint.MinimapPoint_C
// 0x0060 (0x0280 - 0x0220)
class AMinimapPoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAC_MiniPoint_C*                        AC_MiniPoint;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          是否是任务指引; // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_Texture;                                      // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0250(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Details;                                           // 0x0268(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_MinimapPoint(int32 EntryPoint);
	void BndEvt__MinimapPoint_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MinimapPoint_C">();
	}
	static class AMinimapPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMinimapPoint_C>();
	}
};
static_assert(alignof(AMinimapPoint_C) == 0x000008, "Wrong alignment on AMinimapPoint_C");
static_assert(sizeof(AMinimapPoint_C) == 0x000280, "Wrong size on AMinimapPoint_C");
static_assert(offsetof(AMinimapPoint_C, UberGraphFrame) == 0x000220, "Member 'AMinimapPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, AC_MiniPoint) == 0x000228, "Member 'AMinimapPoint_C::AC_MiniPoint' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, Box) == 0x000230, "Member 'AMinimapPoint_C::Box' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, DefaultSceneRoot) == 0x000238, "Member 'AMinimapPoint_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, 是否是任务指引) == 0x000240, "Member 'AMinimapPoint_C::是否是任务指引' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, Icon_Texture) == 0x000248, "Member 'AMinimapPoint_C::Icon_Texture' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, Name_0) == 0x000250, "Member 'AMinimapPoint_C::Name_0' has a wrong offset!");
static_assert(offsetof(AMinimapPoint_C, Details) == 0x000268, "Member 'AMinimapPoint_C::Details' has a wrong offset!");

}

