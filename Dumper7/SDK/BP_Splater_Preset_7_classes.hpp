#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Splater_Preset_7

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Niagara_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Splater_Preset_7.BP_Splater_Preset_7_C
// 0x0080 (0x02A0 - 0x0220)
class ABP_Splater_Preset_7_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      DropletStyle_Niagara;                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Particle_Size;                                     // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Drops;                                         // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Droplets;                                      // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBasicParticleData>             Data;                                              // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             Splat_Materials;                                   // 0x0258(0x0010)(Edit, BlueprintVisible)
	float                                         SplatSize_Min;                                     // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplatSize_Max;                                     // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Burst_Style;                                       // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Splat_Duration;                                    // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Particle_Min_Distance;                             // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Particle_MaxDistance;                              // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Particle_LifeTime_Multiplier;                      // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity_Scale;                                     // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Splater_Preset_7(int32 EntryPoint);
	void SpawnDrops();
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data_0, class UNiagaraSystem* NiagaraSystem);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Splater_Preset_7_C">();
	}
	static class ABP_Splater_Preset_7_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Splater_Preset_7_C>();
	}
};
static_assert(alignof(ABP_Splater_Preset_7_C) == 0x000008, "Wrong alignment on ABP_Splater_Preset_7_C");
static_assert(sizeof(ABP_Splater_Preset_7_C) == 0x0002A0, "Wrong size on ABP_Splater_Preset_7_C");
static_assert(offsetof(ABP_Splater_Preset_7_C, UberGraphFrame) == 0x000220, "Member 'ABP_Splater_Preset_7_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, DropletStyle_Niagara) == 0x000228, "Member 'ABP_Splater_Preset_7_C::DropletStyle_Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Splater_Preset_7_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Particle_Size) == 0x000238, "Member 'ABP_Splater_Preset_7_C::Particle_Size' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Max_Drops) == 0x00023C, "Member 'ABP_Splater_Preset_7_C::Max_Drops' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Cur_Droplets) == 0x000240, "Member 'ABP_Splater_Preset_7_C::Cur_Droplets' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Data) == 0x000248, "Member 'ABP_Splater_Preset_7_C::Data' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Splat_Materials) == 0x000258, "Member 'ABP_Splater_Preset_7_C::Splat_Materials' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, SplatSize_Min) == 0x000268, "Member 'ABP_Splater_Preset_7_C::SplatSize_Min' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, SplatSize_Max) == 0x00026C, "Member 'ABP_Splater_Preset_7_C::SplatSize_Max' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Burst_Style) == 0x000270, "Member 'ABP_Splater_Preset_7_C::Burst_Style' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Color) == 0x000278, "Member 'ABP_Splater_Preset_7_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Splat_Duration) == 0x000288, "Member 'ABP_Splater_Preset_7_C::Splat_Duration' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Particle_Min_Distance) == 0x00028C, "Member 'ABP_Splater_Preset_7_C::Particle_Min_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Particle_MaxDistance) == 0x000290, "Member 'ABP_Splater_Preset_7_C::Particle_MaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Particle_LifeTime_Multiplier) == 0x000294, "Member 'ABP_Splater_Preset_7_C::Particle_LifeTime_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_Splater_Preset_7_C, Gravity_Scale) == 0x000298, "Member 'ABP_Splater_Preset_7_C::Gravity_Scale' has a wrong offset!");

}

