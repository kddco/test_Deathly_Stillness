#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmmoSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AmmoSpawner.AmmoSpawner_C
// 0x0020 (0x0240 - 0x0220)
class AAmmoSpawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         生成ammo的数量; // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 生成的类; // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AmmoSpawner(int32 EntryPoint);
	void 生成ammo();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AmmoSpawner_C">();
	}
	static class AAmmoSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmmoSpawner_C>();
	}
};
static_assert(alignof(AAmmoSpawner_C) == 0x000008, "Wrong alignment on AAmmoSpawner_C");
static_assert(sizeof(AAmmoSpawner_C) == 0x000240, "Wrong size on AAmmoSpawner_C");
static_assert(offsetof(AAmmoSpawner_C, UberGraphFrame) == 0x000220, "Member 'AAmmoSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAmmoSpawner_C, DefaultSceneRoot) == 0x000228, "Member 'AAmmoSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAmmoSpawner_C, 生成ammo的数量) == 0x000230, "Member 'AAmmoSpawner_C::生成ammo的数量' has a wrong offset!");
static_assert(offsetof(AAmmoSpawner_C, 生成的类) == 0x000238, "Member 'AAmmoSpawner_C::生成的类' has a wrong offset!");

}

