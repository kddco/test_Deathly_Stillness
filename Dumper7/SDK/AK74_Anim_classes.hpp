#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AK74_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AK74_Anim.AK74_Anim_C
// 0x0550 (0x0810 - 0x02C0)
class UAK74_Anim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0398(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0418(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0460(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0490(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0510(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0590(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0630(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0660(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0728(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0758(0x00B0)()
	bool                                          空仓换弹; // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Reloading;                                         // 0x0809(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Empty;                                             // 0x080A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AK74_Anim(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AK74_Anim_AnimGraphNode_TransitionResult_9995E553489DCB6794435A90B48B816A();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AK74_Anim_C">();
	}
	static class UAK74_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAK74_Anim_C>();
	}
};
static_assert(alignof(UAK74_Anim_C) == 0x000010, "Wrong alignment on UAK74_Anim_C");
static_assert(sizeof(UAK74_Anim_C) == 0x000810, "Wrong size on UAK74_Anim_C");
static_assert(offsetof(UAK74_Anim_C, UberGraphFrame) == 0x0002C0, "Member 'UAK74_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UAK74_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_TransitionResult_3) == 0x0002F8, "Member 'UAK74_Anim_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_TransitionResult_2) == 0x000320, "Member 'UAK74_Anim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_TransitionResult_1) == 0x000348, "Member 'UAK74_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_TransitionResult) == 0x000370, "Member 'UAK74_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x000398, "Member 'UAK74_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_Slot_1) == 0x000418, "Member 'UAK74_Anim_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_StateResult_2) == 0x000460, "Member 'UAK74_Anim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x000490, "Member 'UAK74_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000510, "Member 'UAK74_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_BlendListByBool) == 0x000590, "Member 'UAK74_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_StateResult_1) == 0x000630, "Member 'UAK74_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_SequencePlayer) == 0x000660, "Member 'UAK74_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_Slot) == 0x0006E0, "Member 'UAK74_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_StateResult) == 0x000728, "Member 'UAK74_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, AnimGraphNode_StateMachine) == 0x000758, "Member 'UAK74_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, 空仓换弹) == 0x000808, "Member 'UAK74_Anim_C::空仓换弹' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, Reloading) == 0x000809, "Member 'UAK74_Anim_C::Reloading' has a wrong offset!");
static_assert(offsetof(UAK74_Anim_C, Empty) == 0x00080A, "Member 'UAK74_Anim_C::Empty' has a wrong offset!");

}

