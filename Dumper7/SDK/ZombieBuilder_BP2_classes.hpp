#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZombieBuilder_BP2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ZombieBuilder_BP2.ZombieBuilder_BP2_C
// 0x0038 (0x0258 - 0x0220)
class AZombieBuilder_BP2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         生成丧尸的数量; // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         生成的丧尸; // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Random_Location;                                   // 0x0248(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ZombieBuilder_BP2(int32 EntryPoint);
	void ReceiveBeginPlay();
	void 生成丧尸();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ZombieBuilder_BP2_C">();
	}
	static class AZombieBuilder_BP2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZombieBuilder_BP2_C>();
	}
};
static_assert(alignof(AZombieBuilder_BP2_C) == 0x000008, "Wrong alignment on AZombieBuilder_BP2_C");
static_assert(sizeof(AZombieBuilder_BP2_C) == 0x000258, "Wrong size on AZombieBuilder_BP2_C");
static_assert(offsetof(AZombieBuilder_BP2_C, UberGraphFrame) == 0x000220, "Member 'AZombieBuilder_BP2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AZombieBuilder_BP2_C, DefaultSceneRoot) == 0x000228, "Member 'AZombieBuilder_BP2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AZombieBuilder_BP2_C, 生成丧尸的数量) == 0x000230, "Member 'AZombieBuilder_BP2_C::生成丧尸的数量' has a wrong offset!");
static_assert(offsetof(AZombieBuilder_BP2_C, 生成的丧尸) == 0x000238, "Member 'AZombieBuilder_BP2_C::生成的丧尸' has a wrong offset!");
static_assert(offsetof(AZombieBuilder_BP2_C, Random_Location) == 0x000248, "Member 'AZombieBuilder_BP2_C::Random_Location' has a wrong offset!");
static_assert(offsetof(AZombieBuilder_BP2_C, Index_0) == 0x000254, "Member 'AZombieBuilder_BP2_C::Index_0' has a wrong offset!");

}

