#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BackroomWeapon

#include "Basic.hpp"

#include "BackroomWeapon_classes.hpp"
#include "BackroomWeapon_parameters.hpp"


namespace SDK
{

// Function BackroomWeapon.BackroomWeapon_C.停止蒙太奇
// (Public, BlueprintCallable, BlueprintEvent)

void IBackroomWeapon_C::停止蒙太奇()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BackroomWeapon_C", "停止蒙太奇");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BackroomWeapon.BackroomWeapon_C.CheckChamber
// (Public, BlueprintCallable, BlueprintEvent)

void IBackroomWeapon_C::CheckChamber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BackroomWeapon_C", "CheckChamber");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BackroomWeapon.BackroomWeapon_C.CheckMagazine
// (Public, BlueprintCallable, BlueprintEvent)

void IBackroomWeapon_C::CheckMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BackroomWeapon_C", "CheckMagazine");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BackroomWeapon.BackroomWeapon_C.是否是空仓状态
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    空仓换弹(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBackroomWeapon_C::是否是空仓状态(bool 空仓换弹)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BackroomWeapon_C", "是否是空仓状态");

	Params::BackroomWeapon_C_是否是空仓状态 Parms{};

	Parms.空仓换弹 = 空仓换弹;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

