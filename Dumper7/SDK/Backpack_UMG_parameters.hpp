#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Backpack_UMG

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InventoryData_Struct_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Backpack_UMG.Backpack_UMG_C.ExecuteUbergraph_Backpack_UMG
// 0x0418 (0x0418 - 0x0000)
struct Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Backpack_Weapon_C*                  CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Backpack_Weapon_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInventoryData_Struct                  K2Node_Event_InventoryData_2;                      // 0x0028(0x0098)(HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ___text_Variable;                                  // 0x00E0(0x0018)(ConstParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInventoryData_Struct>          K2Node_Event_InventoryData_1;                      // 0x0110(0x0010)(ConstParm, ReferenceParm)
	class UInventorySystem_Component_C*           K2Node_Event_____;                                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             K2Node_Event_ItemDragUMG;                          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_Details_C*                    K2Node_Event_BackpackDetailsUMG;                   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInventoryData_Struct                  K2Node_Event_InventoryData;                        // 0x0138(0x0098)(HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryData_Struct                  CallFunc_Array_Get_Item;                           // 0x01D8(0x0098)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryData_Struct                  K2Node_MakeStruct_InventoryData_Struct;            // 0x0278(0x0098)(HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             CallFunc_Create_ReturnValue_2;                     // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             CallFunc_Array_Get_Item_1;                         // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_______;                               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon_Master_C*                       K2Node_Event_weapon;                               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_______;                         // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Backpack_Weapon_C*                  K2Node_Event_WeaponDragUMG;                        // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ___text_Variable_1;                                // 0x0350(0x0018)(ConstParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0380(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x03BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_角色模型捕捉_C* CallFunc_GetActorOfClass_ReturnValue;              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_Current;                              // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Target;                               // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG) == 0x000008, "Wrong alignment on Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG");
static_assert(sizeof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG) == 0x000418, "Wrong size on Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, EntryPoint) == 0x000000, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___int_Loop_Counter_Variable) == 0x000010, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___int_Array_Index_Variable) == 0x000018, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_InventoryData_2) == 0x000028, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_InventoryData_2' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_CustomEvent_PlayMode) == 0x0000C0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_CustomEvent_PlayMode' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_SwitchEnum_CmpSuccess) == 0x0000C1, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_PlayAnimation_ReturnValue) == 0x0000C8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___int_Variable) == 0x0000D8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___int_Variable' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___text_Variable) == 0x0000E0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___text_Variable' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000F8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_DynamicCast_AsPlayer_BP) == 0x000100, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_InventoryData_1) == 0x000110, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_InventoryData_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_____) == 0x000120, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_____' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_ItemDragUMG) == 0x000128, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_ItemDragUMG' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_BackpackDetailsUMG) == 0x000130, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_BackpackDetailsUMG' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_InventoryData) == 0x000138, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_InventoryData' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_Index) == 0x0001D0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Array_Length_ReturnValue) == 0x000270, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_MakeStruct_InventoryData_Struct) == 0x000278, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_MakeStruct_InventoryData_Struct' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Create_ReturnValue_2) == 0x000310, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Array_Get_Item_1) == 0x000318, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_Array_Add_ReturnValue) == 0x000320, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000328, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_______) == 0x000330, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_______' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_weapon) == 0x000338, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_weapon' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_CustomEvent_______) == 0x000340, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_CustomEvent_______' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_WeaponDragUMG) == 0x000348, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_WeaponDragUMG' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___text_Variable_1) == 0x000350, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___text_Variable_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_AddChild_ReturnValue) == 0x000368, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, ___int_Variable_1) == 0x000370, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_AddChild_ReturnValue_1) == 0x000378, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_MyGeometry) == 0x000380, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_InDeltaTime) == 0x0003B8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x0003BC, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_BreakVector2D_X) == 0x0003C4, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_BreakVector2D_Y) == 0x0003C8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_GetActorOfClass_ReturnValue) == 0x0003D0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_MapRangeClamped_ReturnValue) == 0x0003D8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_IsValid_ReturnValue) == 0x0003DC, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0003E0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_BreakRotator_Roll) == 0x0003EC, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_BreakRotator_Pitch) == 0x0003F0, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_BreakRotator_Yaw) == 0x0003F4, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_FInterpTo_ReturnValue) == 0x0003F8, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_MakeRotator_ReturnValue) == 0x0003FC, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_Current) == 0x000408, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_Current' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, K2Node_Event_Target) == 0x00040C, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000410, "Member 'Backpack_UMG_C_ExecuteUbergraph_Backpack_UMG::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.数据对调接口
// 0x0008 (0x0008 - 0x0000)
struct Backpack_UMG_C_数据对调接口 final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_数据对调接口) == 0x000004, "Wrong alignment on Backpack_UMG_C_数据对调接口");
static_assert(sizeof(Backpack_UMG_C_数据对调接口) == 0x000008, "Wrong size on Backpack_UMG_C_数据对调接口");
static_assert(offsetof(Backpack_UMG_C_数据对调接口, Current) == 0x000000, "Member 'Backpack_UMG_C_数据对调接口::Current' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_数据对调接口, Target) == 0x000004, "Member 'Backpack_UMG_C_数据对调接口::Target' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.Tick
// 0x003C (0x003C - 0x0000)
struct Backpack_UMG_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_Tick) == 0x000004, "Wrong alignment on Backpack_UMG_C_Tick");
static_assert(sizeof(Backpack_UMG_C_Tick) == 0x00003C, "Wrong size on Backpack_UMG_C_Tick");
static_assert(offsetof(Backpack_UMG_C_Tick, MyGeometry) == 0x000000, "Member 'Backpack_UMG_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_Tick, InDeltaTime) == 0x000038, "Member 'Backpack_UMG_C_Tick::InDeltaTime' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.添加空的武器插槽
// 0x0008 (0x0008 - 0x0000)
struct Backpack_UMG_C_添加空的武器插槽 final
{
public:
	class UWB_Backpack_Weapon_C*                  WeaponDragUMG_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_添加空的武器插槽) == 0x000008, "Wrong alignment on Backpack_UMG_C_添加空的武器插槽");
static_assert(sizeof(Backpack_UMG_C_添加空的武器插槽) == 0x000008, "Wrong size on Backpack_UMG_C_添加空的武器插槽");
static_assert(offsetof(Backpack_UMG_C_添加空的武器插槽, WeaponDragUMG_0) == 0x000000, "Member 'Backpack_UMG_C_添加空的武器插槽::WeaponDragUMG_0' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.丢弃武器
// 0x0001 (0x0001 - 0x0000)
struct Backpack_UMG_C_丢弃武器 final
{
public:
	bool                                          是否是主武器; // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Backpack_UMG_C_丢弃武器) == 0x000001, "Wrong alignment on Backpack_UMG_C_丢弃武器");
static_assert(sizeof(Backpack_UMG_C_丢弃武器) == 0x000001, "Wrong size on Backpack_UMG_C_丢弃武器");
static_assert(offsetof(Backpack_UMG_C_丢弃武器, 是否是主武器) == 0x000000, "Member 'Backpack_UMG_C_丢弃武器::是否是主武器' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.添加武器数据
// 0x0010 (0x0010 - 0x0000)
struct Backpack_UMG_C_添加武器数据 final
{
public:
	bool                                          是否是主武器; // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon_Master_C*                       weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_添加武器数据) == 0x000008, "Wrong alignment on Backpack_UMG_C_添加武器数据");
static_assert(sizeof(Backpack_UMG_C_添加武器数据) == 0x000010, "Wrong size on Backpack_UMG_C_添加武器数据");
static_assert(offsetof(Backpack_UMG_C_添加武器数据, 是否是主武器) == 0x000000, "Member 'Backpack_UMG_C_添加武器数据::是否是主武器' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_添加武器数据, weapon) == 0x000008, "Member 'Backpack_UMG_C_添加武器数据::weapon' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.刷新数据
// 0x00A0 (0x00A0 - 0x0000)
struct Backpack_UMG_C_刷新数据 final
{
public:
	struct FInventoryData_Struct                  InventoryData;                                     // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_刷新数据) == 0x000008, "Wrong alignment on Backpack_UMG_C_刷新数据");
static_assert(sizeof(Backpack_UMG_C_刷新数据) == 0x0000A0, "Wrong size on Backpack_UMG_C_刷新数据");
static_assert(offsetof(Backpack_UMG_C_刷新数据, InventoryData) == 0x000000, "Member 'Backpack_UMG_C_刷新数据::InventoryData' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_刷新数据, Index_0) == 0x000098, "Member 'Backpack_UMG_C_刷新数据::Index_0' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.添加空格子
// 0x0028 (0x0028 - 0x0000)
struct Backpack_UMG_C_添加空格子 final
{
public:
	TArray<struct FInventoryData_Struct>          InventoryData;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UInventorySystem_Component_C*           背包组件; // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             ItemDragUMG_0;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_Details_C*                    BackpackDetailsUMG_0;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_添加空格子) == 0x000008, "Wrong alignment on Backpack_UMG_C_添加空格子");
static_assert(sizeof(Backpack_UMG_C_添加空格子) == 0x000028, "Wrong size on Backpack_UMG_C_添加空格子");
static_assert(offsetof(Backpack_UMG_C_添加空格子, InventoryData) == 0x000000, "Member 'Backpack_UMG_C_添加空格子::InventoryData' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_添加空格子, 背包组件) == 0x000010, "Member 'Backpack_UMG_C_添加空格子::背包组件' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_添加空格子, ItemDragUMG_0) == 0x000018, "Member 'Backpack_UMG_C_添加空格子::ItemDragUMG_0' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_添加空格子, BackpackDetailsUMG_0) == 0x000020, "Member 'Backpack_UMG_C_添加空格子::BackpackDetailsUMG_0' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.显示背包
// 0x0001 (0x0001 - 0x0000)
struct Backpack_UMG_C_显示背包 final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_显示背包) == 0x000001, "Wrong alignment on Backpack_UMG_C_显示背包");
static_assert(sizeof(Backpack_UMG_C_显示背包) == 0x000001, "Wrong size on Backpack_UMG_C_显示背包");
static_assert(offsetof(Backpack_UMG_C_显示背包, PlayMode) == 0x000000, "Member 'Backpack_UMG_C_显示背包::PlayMode' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.拾取子弹
// 0x0098 (0x0098 - 0x0000)
struct Backpack_UMG_C_拾取子弹 final
{
public:
	struct FInventoryData_Struct                  InventoryData;                                     // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_拾取子弹) == 0x000008, "Wrong alignment on Backpack_UMG_C_拾取子弹");
static_assert(sizeof(Backpack_UMG_C_拾取子弹) == 0x000098, "Wrong size on Backpack_UMG_C_拾取子弹");
static_assert(offsetof(Backpack_UMG_C_拾取子弹, InventoryData) == 0x000000, "Member 'Backpack_UMG_C_拾取子弹::InventoryData' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct Backpack_UMG_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(Backpack_UMG_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on Backpack_UMG_C_OnMouseButtonUp");
static_assert(sizeof(Backpack_UMG_C_OnMouseButtonUp) == 0x000218, "Wrong size on Backpack_UMG_C_OnMouseButtonUp");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'Backpack_UMG_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'Backpack_UMG_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'Backpack_UMG_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'Backpack_UMG_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.OnMouseButtonDown_0
// 0x0220 (0x0220 - 0x0000)
struct Backpack_UMG_C_OnMouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Backpack_UMG_C_OnMouseButtonDown_0) == 0x000008, "Wrong alignment on Backpack_UMG_C_OnMouseButtonDown_0");
static_assert(sizeof(Backpack_UMG_C_OnMouseButtonDown_0) == 0x000220, "Wrong size on Backpack_UMG_C_OnMouseButtonDown_0");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonDown_0, MyGeometry) == 0x000000, "Member 'Backpack_UMG_C_OnMouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonDown_0, MouseEvent) == 0x000038, "Member 'Backpack_UMG_C_OnMouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'Backpack_UMG_C_OnMouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'Backpack_UMG_C_OnMouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Backpack_UMG_C_OnMouseButtonDown_0, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000218, "Member 'Backpack_UMG_C_OnMouseButtonDown_0::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");

// Function Backpack_UMG.Backpack_UMG_C.创建UI
// 0x0008 (0x0008 - 0x0000)
struct Backpack_UMG_C_创建UI final
{
public:
	class UWidget*                                创建的UI; // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Backpack_UMG_C_创建UI) == 0x000008, "Wrong alignment on Backpack_UMG_C_创建UI");
static_assert(sizeof(Backpack_UMG_C_创建UI) == 0x000008, "Wrong size on Backpack_UMG_C_创建UI");
static_assert(offsetof(Backpack_UMG_C_创建UI, 创建的UI) == 0x000000, "Member 'Backpack_UMG_C_创建UI::创建的UI' has a wrong offset!");

}

