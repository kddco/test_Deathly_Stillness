#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MINIMAP_UMG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MINIMAP_UMG.MINIMAP_UMG_C
// 0x0078 (0x02D8 - 0x0260)
class UMINIMAP_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_108;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_142;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Point;                                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_735;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture*                               Texture2D;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dimensions;                                        // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zoom;                                              // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Player;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PointDetail_C*                      WB_PointDetails;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MINIMAP_UMG(int32 EntryPoint);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void AddPOI_(class UWidget* Content);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MINIMAP_UMG_C">();
	}
	static class UMINIMAP_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMINIMAP_UMG_C>();
	}
};
static_assert(alignof(UMINIMAP_UMG_C) == 0x000008, "Wrong alignment on UMINIMAP_UMG_C");
static_assert(sizeof(UMINIMAP_UMG_C) == 0x0002D8, "Wrong size on UMINIMAP_UMG_C");
static_assert(offsetof(UMINIMAP_UMG_C, UberGraphFrame) == 0x000260, "Member 'UMINIMAP_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, NewAnimation) == 0x000268, "Member 'UMINIMAP_UMG_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image) == 0x000270, "Member 'UMINIMAP_UMG_C::Image' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image_0) == 0x000278, "Member 'UMINIMAP_UMG_C::Image_0' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image_1) == 0x000280, "Member 'UMINIMAP_UMG_C::Image_1' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image_2) == 0x000288, "Member 'UMINIMAP_UMG_C::Image_2' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image_108) == 0x000290, "Member 'UMINIMAP_UMG_C::Image_108' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Image_142) == 0x000298, "Member 'UMINIMAP_UMG_C::Image_142' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Overlay_0) == 0x0002A0, "Member 'UMINIMAP_UMG_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Point) == 0x0002A8, "Member 'UMINIMAP_UMG_C::Point' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, TextBlock_735) == 0x0002B0, "Member 'UMINIMAP_UMG_C::TextBlock_735' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Texture2D) == 0x0002B8, "Member 'UMINIMAP_UMG_C::Texture2D' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Dimensions) == 0x0002C0, "Member 'UMINIMAP_UMG_C::Dimensions' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Zoom) == 0x0002C4, "Member 'UMINIMAP_UMG_C::Zoom' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, Player) == 0x0002C8, "Member 'UMINIMAP_UMG_C::Player' has a wrong offset!");
static_assert(offsetof(UMINIMAP_UMG_C, WB_PointDetails) == 0x0002D0, "Member 'UMINIMAP_UMG_C::WB_PointDetails' has a wrong offset!");

}

