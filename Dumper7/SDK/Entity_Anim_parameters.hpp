#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Entity_Anim.Entity_Anim_C.ExecuteUbergraph_Entity_Anim
// 0x0030 (0x0030 - 0x0000)
struct Entity_Anim_C_ExecuteUbergraph_Entity_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim) == 0x000008, "Wrong alignment on Entity_Anim_C_ExecuteUbergraph_Entity_Anim");
static_assert(sizeof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim) == 0x000030, "Wrong size on Entity_Anim_C_ExecuteUbergraph_Entity_Anim");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, EntryPoint) == 0x000000, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, CallFunc_GetVelocity_ReturnValue) == 0x000014, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, K2Node_Event_DeltaTimeX) == 0x000024, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Entity_Anim_C_ExecuteUbergraph_Entity_Anim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'Entity_Anim_C_ExecuteUbergraph_Entity_Anim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Entity_Anim.Entity_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Entity_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Entity_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Entity_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(Entity_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Entity_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(Entity_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Entity_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Entity_Anim.Entity_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Entity_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Entity_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on Entity_Anim_C_AnimGraph");
static_assert(sizeof(Entity_Anim_C_AnimGraph) == 0x000010, "Wrong size on Entity_Anim_C_AnimGraph");
static_assert(offsetof(Entity_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Entity_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

