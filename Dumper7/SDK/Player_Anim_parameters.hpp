#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Player_Anim.Player_Anim_C.ExecuteUbergraph_Player_Anim
// 0x0240 (0x0240 - 0x0000)
struct Player_Anim_C_ExecuteUbergraph_Player_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_4;    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_5;    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_______ReturnValue;                        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_5;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_ExecuteUbergraph_Player_Anim) == 0x000010, "Wrong alignment on Player_Anim_C_ExecuteUbergraph_Player_Anim");
static_assert(sizeof(Player_Anim_C_ExecuteUbergraph_Player_Anim) == 0x000240, "Wrong size on Player_Anim_C_ExecuteUbergraph_Player_Anim");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, EntryPoint) == 0x000000, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue_2) == 0x000024, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00002B, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue_1) == 0x00002C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00002E, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000030, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue_3) == 0x000034, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue_2) == 0x000040, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeRotator_ReturnValue_1) == 0x000048, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue_2) == 0x000057, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000058, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanAND_ReturnValue_1) == 0x00005C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000060, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeRotator_ReturnValue_2) == 0x000064, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000070, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000074, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000075, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000076, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue_3) == 0x000077, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue_3) == 0x000078, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanAND_ReturnValue_2) == 0x000079, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue_4) == 0x00007A, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00007C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Not_PreBool_ReturnValue_5) == 0x000080, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000084, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanAND_ReturnValue_3) == 0x000088, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeRotator_ReturnValue_3) == 0x00008C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00009C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x0000A0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000A4, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0000A8, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue_4) == 0x0000AC, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x0000B0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0000B4, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0000B5, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectVector_ReturnValue) == 0x0000B8, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue_4) == 0x000100, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectVector_ReturnValue_1) == 0x000104, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeTransform_ReturnValue_1) == 0x000110, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue_4) == 0x000140, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BooleanOR_ReturnValue_5) == 0x000141, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, K2Node_Event_DeltaTimeX) == 0x000144, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000148, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GreaterEqual_FloatFloat_ReturnValue_5) == 0x000151, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GreaterEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, K2Node_DynamicCast_AsPlayer_BP) == 0x000158, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000168, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetMovementComponent_ReturnValue) == 0x000170, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_IsCrouching_ReturnValue) == 0x000178, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_IsFalling_ReturnValue) == 0x000179, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x00017C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000180, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000188, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetTransform_ReturnValue) == 0x000190, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_InverseTransformLocation_ReturnValue) == 0x0001C0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_X) == 0x0001CC, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Y) == 0x0001D0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Z) == 0x0001D4, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x0001D8, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetVelocity_ReturnValue) == 0x0001E0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_X_1) == 0x0001EC, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Y_1) == 0x0001F0, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Z_1) == 0x0001F4, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_______ReturnValue) == 0x0001F8, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_______ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_Abs_ReturnValue) == 0x0001FC, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000200, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_TryGetPawnOwner_ReturnValue_5) == 0x000208, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_TryGetPawnOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_GetVelocity_ReturnValue_1) == 0x000210, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_X_2) == 0x00021C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Y_2) == 0x000220, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_BreakVector_Z_2) == 0x000224, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_MakeVector_ReturnValue) == 0x000228, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000234, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_VSize_ReturnValue) == 0x000238, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_ExecuteUbergraph_Player_Anim, CallFunc_SelectFloat_ReturnValue_5) == 0x00023C, "Member 'Player_Anim_C_ExecuteUbergraph_Player_Anim::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Player_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Player_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(Player_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Player_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(Player_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Player_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.Spine Pitch
// 0x0040 (0x0040 - 0x0000)
struct Player_Anim_C_Spine_Pitch final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_Anim_C_Spine_Pitch) == 0x000008, "Wrong alignment on Player_Anim_C_Spine_Pitch");
static_assert(sizeof(Player_Anim_C_Spine_Pitch) == 0x000040, "Wrong size on Player_Anim_C_Spine_Pitch");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_GetControlRotation_ReturnValue) == 0x000008, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_ComposeRotators_ReturnValue) == 0x000014, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Spine_Pitch, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'Player_Anim_C_Spine_Pitch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.DeltaCaculate
// 0x0060 (0x0060 - 0x0000)
struct Player_Anim_C_DeltaCaculate final
{
public:
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_Anim_C_DeltaCaculate) == 0x000008, "Wrong alignment on Player_Anim_C_DeltaCaculate");
static_assert(sizeof(Player_Anim_C_DeltaCaculate) == 0x000060, "Wrong size on Player_Anim_C_DeltaCaculate");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_DeltaTimeCaculate_ReturnValue) == 0x000000, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_DeltaTimeCaculate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x000018, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x000024, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000030, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaCaculate, CallFunc_RLerp_ReturnValue) == 0x000054, "Member 'Player_Anim_C_DeltaCaculate::CallFunc_RLerp_ReturnValue' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.Interpolate
// 0x0084 (0x0084 - 0x0000)
struct Player_Anim_C_Interpolate final
{
public:
	bool                                          ___bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue_2;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue_3;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_2;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_3;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_Anim_C_Interpolate) == 0x000004, "Wrong alignment on Player_Anim_C_Interpolate");
static_assert(sizeof(Player_Anim_C_Interpolate) == 0x000084, "Wrong size on Player_Anim_C_Interpolate");
static_assert(offsetof(Player_Anim_C_Interpolate, ___bool_Variable) == 0x000000, "Member 'Player_Anim_C_Interpolate::___bool_Variable' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'Player_Anim_C_Interpolate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'Player_Anim_C_Interpolate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'Player_Anim_C_Interpolate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'Player_Anim_C_Interpolate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'Player_Anim_C_Interpolate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'Player_Anim_C_Interpolate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, K2Node_Select_Default) == 0x000024, "Member 'Player_Anim_C_Interpolate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_MakeRotator_ReturnValue_1) == 0x000028, "Member 'Player_Anim_C_Interpolate::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_DeltaTimeCaculate_ReturnValue) == 0x000034, "Member 'Player_Anim_C_Interpolate::CallFunc_DeltaTimeCaculate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_DeltaTimeCaculate_ReturnValue_1) == 0x000038, "Member 'Player_Anim_C_Interpolate::CallFunc_DeltaTimeCaculate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_DeltaTimeCaculate_ReturnValue_2) == 0x00003C, "Member 'Player_Anim_C_Interpolate::CallFunc_DeltaTimeCaculate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_RInterpTo_ReturnValue) == 0x000040, "Member 'Player_Anim_C_Interpolate::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_DeltaTimeCaculate_ReturnValue_3) == 0x00004C, "Member 'Player_Anim_C_Interpolate::CallFunc_DeltaTimeCaculate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_RInterpTo_ReturnValue_1) == 0x000050, "Member 'Player_Anim_C_Interpolate::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'Player_Anim_C_Interpolate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_MakeRotator_ReturnValue_2) == 0x000060, "Member 'Player_Anim_C_Interpolate::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_RInterpTo_ReturnValue_2) == 0x00006C, "Member 'Player_Anim_C_Interpolate::CallFunc_RInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_Interpolate, CallFunc_RInterpTo_ReturnValue_3) == 0x000078, "Member 'Player_Anim_C_Interpolate::CallFunc_RInterpTo_ReturnValue_3' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.DeltaTimeCaculate
// 0x0008 (0x0008 - 0x0000)
struct Player_Anim_C_DeltaTimeCaculate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_DeltaTimeCaculate) == 0x000004, "Wrong alignment on Player_Anim_C_DeltaTimeCaculate");
static_assert(sizeof(Player_Anim_C_DeltaTimeCaculate) == 0x000008, "Wrong size on Player_Anim_C_DeltaTimeCaculate");
static_assert(offsetof(Player_Anim_C_DeltaTimeCaculate, ReturnValue) == 0x000000, "Member 'Player_Anim_C_DeltaTimeCaculate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_DeltaTimeCaculate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'Player_Anim_C_DeltaTimeCaculate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.IK_Alpha
// 0x0010 (0x0010 - 0x0000)
struct Player_Anim_C_IK_Alpha final
{
public:
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_IK_Alpha) == 0x000004, "Wrong alignment on Player_Anim_C_IK_Alpha");
static_assert(sizeof(Player_Anim_C_IK_Alpha) == 0x000010, "Wrong size on Player_Anim_C_IK_Alpha");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_DeltaTimeCaculate_ReturnValue) == 0x000000, "Member 'Player_Anim_C_IK_Alpha::CallFunc_DeltaTimeCaculate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'Player_Anim_C_IK_Alpha::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'Player_Anim_C_IK_Alpha::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'Player_Anim_C_IK_Alpha::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Player_Anim_C_IK_Alpha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_IK_Alpha, CallFunc_FInterpTo_ReturnValue) == 0x00000C, "Member 'Player_Anim_C_IK_Alpha::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.瞄准偏移计算
// 0x0090 (0x0090 - 0x0000)
struct Player_Anim_C_瞄准偏移计算 final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DeltaTimeCaculate_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_瞄准偏移计算) == 0x000008, "Wrong alignment on Player_Anim_C_瞄准偏移计算");
static_assert(sizeof(Player_Anim_C_瞄准偏移计算) == 0x000090, "Wrong size on Player_Anim_C_瞄准偏移计算");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, Pawn) == 0x000000, "Member 'Player_Anim_C_瞄准偏移计算::Pawn' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_DeltaTimeCaculate_ReturnValue) == 0x000008, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_DeltaTimeCaculate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_GetControlRotation_ReturnValue) == 0x000018, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000024, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_Abs_ReturnValue) == 0x00003C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_ClampAngle_ReturnValue) == 0x000050, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_DeltaTimeCaculate_ReturnValue_1) == 0x000054, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_DeltaTimeCaculate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_SelectFloat_ReturnValue_1) == 0x00005C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_FInterpTo_ReturnValue) == 0x000060, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_ClampAngle_ReturnValue_1) == 0x000068, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_MakeRotator_ReturnValue_1) == 0x00006C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_RInterpTo_ReturnValue) == 0x000078, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Roll_1) == 0x000084, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Pitch_1) == 0x000088, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_瞄准偏移计算, CallFunc_BreakRotator_Yaw_1) == 0x00008C, "Member 'Player_Anim_C_瞄准偏移计算::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.方向的计算
// 0x0048 (0x0048 - 0x0000)
struct Player_Anim_C_方向的计算 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Anim_C_方向的计算) == 0x000008, "Wrong alignment on Player_Anim_C_方向的计算");
static_assert(sizeof(Player_Anim_C_方向的计算) == 0x000048, "Wrong size on Player_Anim_C_方向的计算");
static_assert(offsetof(Player_Anim_C_方向的计算, ReturnValue) == 0x000000, "Member 'Player_Anim_C_方向的计算::ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Player_Anim_C_方向的计算::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'Player_Anim_C_方向的计算::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_GetVelocity_ReturnValue) == 0x00001C, "Member 'Player_Anim_C_方向的计算::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_BreakVector_X) == 0x000028, "Member 'Player_Anim_C_方向的计算::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_BreakVector_Y) == 0x00002C, "Member 'Player_Anim_C_方向的计算::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_BreakVector_Z) == 0x000030, "Member 'Player_Anim_C_方向的计算::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'Player_Anim_C_方向的计算::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_Anim_C_方向的计算, CallFunc_CalculateDirection_ReturnValue) == 0x000040, "Member 'Player_Anim_C_方向的计算::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");

// Function Player_Anim.Player_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Player_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on Player_Anim_C_AnimGraph");
static_assert(sizeof(Player_Anim_C_AnimGraph) == 0x000010, "Wrong size on Player_Anim_C_AnimGraph");
static_assert(offsetof(Player_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Player_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

