#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingSlotUMG

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SettingSlotUMG.SettingSlotUMG_C.ExecuteUbergraph_SettingSlotUMG
// 0x0A08 (0x0A08 - 0x0000)
struct SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_4;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_5;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_6;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_7;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_8;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_9;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_10;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_11;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_12;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_13;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_14;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_15;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_16;                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_17;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_18;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_19;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_20;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_21;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_22;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_23;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_24;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_25;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_26;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_27;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_28;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_29;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_30;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_31;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_32;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_33;                // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_34;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_35;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_36;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_37;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_38;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_39;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_40;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_41;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x00A8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x00C0(0x0018)()
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_4;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_4;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_42;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_5;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_43;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_5;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_44;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_6;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_6;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_7;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event___;                                   // 0x0128(0x0018)()
	class FText                                   K2Node_Event____1;                                 // 0x0140(0x0018)()
	struct FInputActionKeyMapping                 K2Node_Event_InputAction;                          // 0x0158(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_Event_InputAxis;                            // 0x0180(0x0028)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A8(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x01E0(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0250(0x0070)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x02C0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x02E8(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313[0x1];                                      // 0x0313(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue;                         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_1;                       // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_2;                       // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_3;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_4;                       // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_5;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_6;                       // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_7;                    // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_7;                       // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_1;        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_2;        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue_1;          // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_8;                       // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_9;                       // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_3;        // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPostProcessingQuality_ReturnValue;     // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_4;        // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_5;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureQuality_ReturnValue;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_6;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFoliageQuality_ReturnValue;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_7;        // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_8;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadingQuality_ReturnValue;            // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_10;                      // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_11;                      // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_12;                      // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_13;                      // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_14;                      // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_15;                      // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_16;                      // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_17;                      // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_9;        // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewDistanceQuality_ReturnValue;       // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_18;                      // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_19;                      // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_20;                      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_10;       // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_21;                      // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_22;                      // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_23;                      // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_45;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_24;                      // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_25;                      // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_8;                     // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_26;                      // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_27;                      // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDefaultLanguage_ReturnValue;           // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x2];                                      // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_28;                      // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_29;                      // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_30;                      // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_31;                      // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0460(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_32;                      // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_33;                      // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_34;                      // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_35;                      // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_8;                    // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_36;                      // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_37;                      // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_38;                      // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_39;                      // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3[0x1];                                      // 0x04B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_40;                      // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  CallFunc____Output_Get;                            // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_1;                          // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_41;                      // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_46;                // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE[0x2];                                      // 0x04CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_9;                     // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_42;                      // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_2;                          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_43;                      // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_3;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0510(0x0010)(ReferenceParm)
	int32                                         CallFunc______ReturnValue_44;                      // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_1;                         // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0538(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_2;                         // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_4;                          // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_9;                    // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_45;                      // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_575[0x3];                                      // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_5;                          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0588(0x0010)(ReferenceParm)
	int32                                         CallFunc______ReturnValue_46;                      // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_3;                         // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x05B0(0x0010)(ReferenceParm)
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_4;                         // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CD[0x3];                                      // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_6;                          // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_47;                      // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_48;                      // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_47;                // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x05E8(0x0010)(ReferenceParm)
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_5;          // 0x05F8(0x0010)(ReferenceParm)
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_5;                         // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_6;                         // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_48;                // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_623[0x5];                                      // 0x0623(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_7;                          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_8;                          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_49;                // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_49;                      // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_9;                          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_50;                      // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_10;                         // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_51;                      // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_50;                // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_6;          // 0x0668(0x0010)(ReferenceParm)
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_7;                         // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_51;                // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_BP_C*>                   CallFunc_GetAllActorsOfClass_OutActors_7;          // 0x0688(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           CallFunc_Array_Get_Item_8;                         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AD[0x3];                                      // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc____Output_Get_11;                         // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_52;                // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_1;                                 // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_53;                // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_1;                  // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_1;           // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_1;          // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_1;       // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_2;           // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_2;          // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_2;       // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_3;           // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_3;          // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_3;       // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_4;           // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_4;          // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_4;       // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_5;           // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_5;          // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_5;       // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_6;           // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_6;          // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_6;       // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_7;           // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_7;          // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_7;       // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_8;           // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_8;          // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_8;       // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_9;           // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_9;          // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_9;       // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance_1;           // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance_2;           // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_10;          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_10;         // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting_10;      // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_11;         // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882[0x2];                                      // 0x0882(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_52;                      // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_53;                      // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88C[0x4];                                      // 0x088C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_11;       // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899[0x3];                                      // 0x0899(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______ReturnValue_54;                      // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______ReturnValue_55;                      // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      CallFunc_GetSupportedFullscreenResolutions_Resolutions; // 0x08A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSupportedFullscreenResolutions_ReturnValue; // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BA[0x2];                                      // 0x08BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_9;                         // 0x08BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x08E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0900(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_54;                // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x3];                                      // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_55;                // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_919[0x7];                                      // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetScreenResolution_ReturnValue;          // 0x0920(0x0018)()
	class FText                                   CallFunc_GetScreenResolution_ReturnValue_1;        // 0x0938(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0960(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x097C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x097D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97E[0x2];                                      // 0x097E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_56;                // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_985[0x3];                                      // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_10;                        // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0998(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_11;                        // 0x09C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x09D8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x09F0(0x0018)()
};
static_assert(alignof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG) == 0x000008, "Wrong alignment on SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG");
static_assert(sizeof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG) == 0x000A08, "Wrong size on SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, EntryPoint) == 0x000000, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetFullscreenMode_ReturnValue) == 0x000010, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess) == 0x000012, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_1) == 0x000013, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_2) == 0x000014, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_3) == 0x000015, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_4) == 0x000016, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_5) == 0x000017, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_6) == 0x000018, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_7) == 0x000019, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_8) == 0x00001A, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_9) == 0x00001B, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_10) == 0x000020, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_11) == 0x000021, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_12) == 0x000022, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_12' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_13) == 0x000023, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_13' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_14) == 0x000024, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_14' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_15) == 0x000025, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_15' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_16) == 0x000026, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_16' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_17) == 0x000027, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_17' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_18) == 0x000028, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_18' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_19) == 0x000029, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_19' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_20) == 0x00002A, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_20' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_21) == 0x00002B, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_21' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_22) == 0x00002C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_22' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_23) == 0x00002D, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_23' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_24) == 0x00002E, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_24' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_25) == 0x00002F, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_25' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_26) == 0x000030, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_26' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_27) == 0x000031, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_27' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_28) == 0x000032, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_28' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_29) == 0x000033, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_29' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_30) == 0x000034, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_30' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_31) == 0x000035, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_31' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_32) == 0x000036, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_32' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_33) == 0x000037, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_33' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_34) == 0x000038, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_34' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_35) == 0x000039, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_35' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_36) == 0x00003A, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_36' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_37) == 0x00003B, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_37' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_38) == 0x00003C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_38' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable) == 0x000040, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_39) == 0x000044, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_39' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_40) == 0x000045, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_40' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable) == 0x000060, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_1) == 0x000068, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_1) == 0x00006C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_41) == 0x000074, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_41' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000078, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000090, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0000A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue_4) == 0x0000C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_2) == 0x0000D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_2) == 0x0000E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_3) == 0x0000E4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_3) == 0x0000EC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_4) == 0x0000F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_4) == 0x0000F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_42) == 0x0000FC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_42' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_5) == 0x000100, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_43) == 0x000104, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_43' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_5) == 0x000108, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_5) == 0x00010C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_44) == 0x000110, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_44' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_6) == 0x000114, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_6) == 0x000118, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_6) == 0x00011C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_7) == 0x000120, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event___) == 0x000128, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event___' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event____1) == 0x000140, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event____1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_InputAction) == 0x000158, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_InputAction' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_InputAxis) == 0x000180, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_InputAxis' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_MyGeometry) == 0x0001A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_MouseEvent_1) == 0x0001E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_MouseEvent) == 0x000250, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_MakeStruct_SlateColor) == 0x0002C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_MakeStruct_SlateColor_1) == 0x0002E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess_1) == 0x000310, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess_2) == 0x000311, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess_3) == 0x000312, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue) == 0x000314, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_1) == 0x000318, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_2) == 0x00031C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_3) == 0x000320, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_4) == 0x000324, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_5) == 0x000328, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_6) == 0x00032C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_7) == 0x000330, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_7) == 0x000334, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_7) == 0x000338, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_1) == 0x000340, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_2) == 0x000348, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetFullscreenMode_ReturnValue_1) == 0x000350, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetFullscreenMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x000354, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000358, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_Event_IsDesignTime) == 0x00035C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_8) == 0x000360, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_9) == 0x000364, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_3) == 0x000368, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetPostProcessingQuality_ReturnValue) == 0x000370, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetPostProcessingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_4) == 0x000378, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetShadowQuality_ReturnValue) == 0x000380, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_5) == 0x000388, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetTextureQuality_ReturnValue) == 0x000390, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetTextureQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_6) == 0x000398, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetFoliageQuality_ReturnValue) == 0x0003A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetFoliageQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_7) == 0x0003A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x0003B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_8) == 0x0003B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetShadingQuality_ReturnValue) == 0x0003C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetShadingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_10) == 0x0003C4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_11) == 0x0003C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_12) == 0x0003CC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_13) == 0x0003D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_13' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_14) == 0x0003D4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_14' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_15) == 0x0003D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_15' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_16) == 0x0003DC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_16' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_17) == 0x0003E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_17' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_9) == 0x0003E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetViewDistanceQuality_ReturnValue) == 0x0003F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetViewDistanceQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_18) == 0x0003F4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_18' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_19) == 0x0003F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_19' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_20) == 0x0003FC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_20' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_10) == 0x000400, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000408, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_FTrunc_ReturnValue) == 0x00040C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_21) == 0x000410, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_21' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_22) == 0x000414, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_22' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_23) == 0x000418, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_23' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_45) == 0x00041C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_45' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_24) == 0x000420, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_24' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_25) == 0x000424, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_25' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_8) == 0x000428, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_26) == 0x00042C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_26' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_27) == 0x000430, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_27' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetDefaultLanguage_ReturnValue) == 0x000438, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetDefaultLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Contains_ReturnValue) == 0x000448, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000449, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_28) == 0x00044C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_28' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_29) == 0x000450, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_29' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_30) == 0x000454, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_30' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_31) == 0x000458, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_31' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000460, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue) == 0x000470, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_32) == 0x000474, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_32' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_33) == 0x000478, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_33' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_34) == 0x00047C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_34' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_35) == 0x000480, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_35' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_8) == 0x000484, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_36) == 0x000488, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_36' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_8) == 0x00048C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_37) == 0x000490, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_37' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_38) == 0x000494, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_38' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_39) == 0x000498, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_39' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetPlayerPawn_ReturnValue) == 0x0004A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_BP) == 0x0004A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess) == 0x0004B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess_4) == 0x0004B1, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchEnum_CmpSuccess_5) == 0x0004B2, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_40) == 0x0004B4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_40' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get) == 0x0004B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_1) == 0x0004C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_41) == 0x0004C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_41' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_46) == 0x0004CC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_46' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_IsValid_ReturnValue) == 0x0004CD, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Array_Index_Variable_9) == 0x0004D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_42) == 0x0004D4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_42' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item) == 0x0004D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsUISetting_Interface) == 0x0004E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_1) == 0x0004F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_2) == 0x0004F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_43) == 0x000500, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_43' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_3) == 0x000508, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors) == 0x000510, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_44) == 0x000520, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_44' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_1) == 0x000528, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_1) == 0x000530, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000538, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue) == 0x000548, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_2) == 0x000550, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_2) == 0x000558, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_4) == 0x000560, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_1) == 0x000568, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Loop_Counter_Variable_9) == 0x00056C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_45) == 0x000570, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_45' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_2) == 0x000574, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_9) == 0x000578, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_5) == 0x000580, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000588, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_46) == 0x000598, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_46' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_3) == 0x0005A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_3) == 0x0005A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005AC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x0005B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_4) == 0x0005C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_4) == 0x0005C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005CC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_6) == 0x0005D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_47) == 0x0005D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_47' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_48) == 0x0005DC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_48' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_47) == 0x0005E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_47' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x0005E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_5) == 0x0005F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_5) == 0x000608, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_6) == 0x000610, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_5) == 0x000618, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_6) == 0x00061C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_5) == 0x000620, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_6) == 0x000621, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_48) == 0x000622, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_48' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_7) == 0x000628, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_8) == 0x000630, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_49) == 0x000638, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_49' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Variable) == 0x00063C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Variable' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_49) == 0x000640, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_49' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_9) == 0x000648, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_50) == 0x000650, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_50' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_10) == 0x000658, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_51) == 0x000660, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_51' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_50) == 0x000664, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_50' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_6) == 0x000668, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_7) == 0x000678, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_51) == 0x000680, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_51' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_7) == 0x000684, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetAllActorsOfClass_OutActors_7) == 0x000688, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetAllActorsOfClass_OutActors_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_7) == 0x000698, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_8) == 0x0006A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_8) == 0x0006A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_8) == 0x0006AC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc____Output_Get_11) == 0x0006B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc____Output_Get_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_52) == 0x0006B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_52' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, ___int_Variable_1) == 0x0006BC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_53) == 0x0006C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_53' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0006C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameInstance_ReturnValue) == 0x0006D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_BP_1) == 0x0006D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_BP_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_2) == 0x0006E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsMy_Game_Instance) == 0x0006E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_3) == 0x0006F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0006F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000700, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000708, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_4) == 0x000710, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_1) == 0x000718, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_1) == 0x000720, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_1) == 0x000728, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_5) == 0x000730, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_2) == 0x000738, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_2) == 0x000740, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_2) == 0x000748, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_6) == 0x000750, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_3) == 0x000758, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_3) == 0x000760, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_3) == 0x000768, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_3' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_7) == 0x000770, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_4) == 0x000778, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_4) == 0x000780, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_4) == 0x000788, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_4' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_8) == 0x000790, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_5) == 0x000798, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_5) == 0x0007A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_5) == 0x0007A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_5' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_9) == 0x0007B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_6) == 0x0007B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_6) == 0x0007C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_6) == 0x0007C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_6' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_10) == 0x0007D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_7) == 0x0007D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_7) == 0x0007E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_7) == 0x0007E8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_7' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_11) == 0x0007F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_8) == 0x0007F8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_8) == 0x000800, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_8) == 0x000808, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_8' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_12) == 0x000810, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_9) == 0x000818, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_9) == 0x000820, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_9) == 0x000828, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_13) == 0x000830, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameInstance_ReturnValue_1) == 0x000838, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameInstance_ReturnValue_2) == 0x000840, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsMy_Game_Instance_1) == 0x000848, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsMy_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_14) == 0x000850, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsMy_Game_Instance_2) == 0x000858, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsMy_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_15) == 0x000860, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_LoadGameFromSlot_ReturnValue_10) == 0x000868, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_LoadGameFromSlot_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_10) == 0x000870, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_AsPlayer_State_Setting_10) == 0x000878, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_AsPlayer_State_Setting_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_DynamicCast_bSuccess_16) == 0x000880, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_DoesSaveGameExist_ReturnValue_11) == 0x000881, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_DoesSaveGameExist_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_52) == 0x000884, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_52' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_53) == 0x000888, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_53' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetGameUserSettings_ReturnValue_11) == 0x000890, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetGameUserSettings_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_IsVSyncEnabled_ReturnValue) == 0x000898, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_54) == 0x00089C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_54' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_SelectInt_ReturnValue) == 0x0008A0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc______ReturnValue_55) == 0x0008A4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc______ReturnValue_55' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetSupportedFullscreenResolutions_Resolutions) == 0x0008A8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetSupportedFullscreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetSupportedFullscreenResolutions_ReturnValue) == 0x0008B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetSupportedFullscreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0008B9, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_9) == 0x0008BC, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_9) == 0x0008C4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_9) == 0x0008C8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToString_ReturnValue) == 0x0008D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0008E0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Concat_StrStr_ReturnValue) == 0x0008F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000900, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_54) == 0x000910, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_54' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Add_ReturnValue) == 0x000914, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_55) == 0x000918, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_55' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetScreenResolution_ReturnValue) == 0x000920, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_GetScreenResolution_ReturnValue_1) == 0x000938, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_GetScreenResolution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_TextToString_ReturnValue) == 0x000950, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000960, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Find_ReturnValue) == 0x000970, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Add_ReturnValue_1) == 0x000974, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_10) == 0x000978, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_10) == 0x00097C, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00097D, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Subtract_IntInt_ReturnValue) == 0x000980, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, K2Node_SwitchInteger_CmpSuccess_56) == 0x000984, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::K2Node_SwitchInteger_CmpSuccess_56' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_10) == 0x000988, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_StringToText_ReturnValue) == 0x000998, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Add_IntInt_ReturnValue_10) == 0x0009B0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Length_ReturnValue_11) == 0x0009B4, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0009B8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Array_Get_Item_11) == 0x0009C0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Less_IntInt_ReturnValue_11) == 0x0009D0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0009D8, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG, CallFunc_Conv_IntToText_ReturnValue_5) == 0x0009F0, "Member 'SettingSlotUMG_C_ExecuteUbergraph_SettingSlotUMG::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SettingSlotUMG_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_PreConstruct) == 0x000001, "Wrong alignment on SettingSlotUMG_C_PreConstruct");
static_assert(sizeof(SettingSlotUMG_C_PreConstruct) == 0x000001, "Wrong size on SettingSlotUMG_C_PreConstruct");
static_assert(offsetof(SettingSlotUMG_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SettingSlotUMG_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct SettingSlotUMG_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingSlotUMG_C_OnMouseLeave) == 0x000008, "Wrong alignment on SettingSlotUMG_C_OnMouseLeave");
static_assert(sizeof(SettingSlotUMG_C_OnMouseLeave) == 0x000070, "Wrong size on SettingSlotUMG_C_OnMouseLeave");
static_assert(offsetof(SettingSlotUMG_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'SettingSlotUMG_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct SettingSlotUMG_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingSlotUMG_C_OnMouseEnter) == 0x000008, "Wrong alignment on SettingSlotUMG_C_OnMouseEnter");
static_assert(sizeof(SettingSlotUMG_C_OnMouseEnter) == 0x0000A8, "Wrong size on SettingSlotUMG_C_OnMouseEnter");
static_assert(offsetof(SettingSlotUMG_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'SettingSlotUMG_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'SettingSlotUMG_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.CustomMappingCheck
// 0x0050 (0x0050 - 0x0000)
struct SettingSlotUMG_C_CustomMappingCheck final
{
public:
	struct FInputActionKeyMapping                 InputAction;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FInputAxisKeyMapping                   InputAxis;                                         // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SettingSlotUMG_C_CustomMappingCheck) == 0x000008, "Wrong alignment on SettingSlotUMG_C_CustomMappingCheck");
static_assert(sizeof(SettingSlotUMG_C_CustomMappingCheck) == 0x000050, "Wrong size on SettingSlotUMG_C_CustomMappingCheck");
static_assert(offsetof(SettingSlotUMG_C_CustomMappingCheck, InputAction) == 0x000000, "Member 'SettingSlotUMG_C_CustomMappingCheck::InputAction' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_CustomMappingCheck, InputAxis) == 0x000028, "Member 'SettingSlotUMG_C_CustomMappingCheck::InputAxis' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.SettingDetails
// 0x0030 (0x0030 - 0x0000)
struct SettingSlotUMG_C_SettingDetails final
{
public:
	class FText                                   标题; // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   详情; // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SettingSlotUMG_C_SettingDetails) == 0x000008, "Wrong alignment on SettingSlotUMG_C_SettingDetails");
static_assert(sizeof(SettingSlotUMG_C_SettingDetails) == 0x000030, "Wrong size on SettingSlotUMG_C_SettingDetails");
static_assert(offsetof(SettingSlotUMG_C_SettingDetails, 标题) == 0x000000, "Member 'SettingSlotUMG_C_SettingDetails::标题' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_SettingDetails, 详情) == 0x000018, "Member 'SettingSlotUMG_C_SettingDetails::详情' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct SettingSlotUMG_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0168(0x00B8)()
};
static_assert(alignof(SettingSlotUMG_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on SettingSlotUMG_C_OnMouseButtonDown");
static_assert(sizeof(SettingSlotUMG_C_OnMouseButtonDown) == 0x000220, "Wrong size on SettingSlotUMG_C_OnMouseButtonDown");
static_assert(offsetof(SettingSlotUMG_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'SettingSlotUMG_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'SettingSlotUMG_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'SettingSlotUMG_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000160, "Member 'SettingSlotUMG_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_OnMouseButtonDown, K2Node_MakeStruct_EventReply) == 0x000168, "Member 'SettingSlotUMG_C_OnMouseButtonDown::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.进入选中模式
// 0x0098 (0x0098 - 0x0000)
struct SettingSlotUMG_C_进入选中模式 final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0070(0x0028)()
};
static_assert(alignof(SettingSlotUMG_C_进入选中模式) == 0x000008, "Wrong alignment on SettingSlotUMG_C_进入选中模式");
static_assert(sizeof(SettingSlotUMG_C_进入选中模式) == 0x000098, "Wrong size on SettingSlotUMG_C_进入选中模式");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, ___int_Array_Index_Variable) == 0x000000, "Member 'SettingSlotUMG_C_进入选中模式::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, ___int_Loop_Counter_Variable) == 0x000004, "Member 'SettingSlotUMG_C_进入选中模式::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SettingSlotUMG_C_进入选中模式::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000010, "Member 'SettingSlotUMG_C_进入选中模式::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'SettingSlotUMG_C_进入选中模式::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, CallFunc_Array_Get_Item) == 0x000048, "Member 'SettingSlotUMG_C_进入选中模式::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'SettingSlotUMG_C_进入选中模式::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, K2Node_DynamicCast_AsUISetting_Interface) == 0x000058, "Member 'SettingSlotUMG_C_进入选中模式::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'SettingSlotUMG_C_进入选中模式::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'SettingSlotUMG_C_进入选中模式::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_进入选中模式, K2Node_MakeStruct_SlateColor_1) == 0x000070, "Member 'SettingSlotUMG_C_进入选中模式::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.更改分辨率
// 0x0050 (0x0050 - 0x0000)
struct SettingSlotUMG_C_更改分辨率 final
{
public:
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_更改分辨率) == 0x000008, "Wrong alignment on SettingSlotUMG_C_更改分辨率");
static_assert(sizeof(SettingSlotUMG_C_更改分辨率) == 0x000050, "Wrong size on SettingSlotUMG_C_更改分辨率");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Array_Get_Item) == 0x000008, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Split_LeftS) == 0x000018, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Split_RightS) == 0x000028, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Split_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Conv_StringToInt_ReturnValue) == 0x00003C, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000040, "Member 'SettingSlotUMG_C_更改分辨率::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_更改分辨率, K2Node_MakeStruct_IntPoint) == 0x000044, "Member 'SettingSlotUMG_C_更改分辨率::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存Fov设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存Fov设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存Fov设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存Fov设置");
static_assert(sizeof(SettingSlotUMG_C_保存Fov设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存Fov设置");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存Fov设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存Fov设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存Fov设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存Fov设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存Fov设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存Fov设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存Fov设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存Fov设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存Fov设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存Fov设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.选项更改
// 0x001C (0x001C - 0x0000)
struct SettingSlotUMG_C_选项更改 final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___0;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_选项更改) == 0x000004, "Wrong alignment on SettingSlotUMG_C_选项更改");
static_assert(sizeof(SettingSlotUMG_C_选项更改) == 0x00001C, "Wrong size on SettingSlotUMG_C_选项更改");
static_assert(offsetof(SettingSlotUMG_C_选项更改, Index_0) == 0x000000, "Member 'SettingSlotUMG_C_选项更改::Index_0' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, ___0) == 0x000004, "Member 'SettingSlotUMG_C_选项更改::___0' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, Min) == 0x000008, "Member 'SettingSlotUMG_C_选项更改::Min' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, Max) == 0x00000C, "Member 'SettingSlotUMG_C_选项更改::Max' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, ReturnValue) == 0x000010, "Member 'SettingSlotUMG_C_选项更改::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'SettingSlotUMG_C_选项更改::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_选项更改, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_选项更改::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.画质文字设置
// 0x0008 (0x0008 - 0x0000)
struct SettingSlotUMG_C_画质文字设置 final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_画质文字设置) == 0x000004, "Wrong alignment on SettingSlotUMG_C_画质文字设置");
static_assert(sizeof(SettingSlotUMG_C_画质文字设置) == 0x000008, "Wrong size on SettingSlotUMG_C_画质文字设置");
static_assert(offsetof(SettingSlotUMG_C_画质文字设置, Selection) == 0x000000, "Member 'SettingSlotUMG_C_画质文字设置::Selection' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_画质文字设置, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'SettingSlotUMG_C_画质文字设置::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.FOV文字设置
// 0x0008 (0x0008 - 0x0000)
struct SettingSlotUMG_C_FOV文字设置 final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_FOV文字设置) == 0x000004, "Wrong alignment on SettingSlotUMG_C_FOV文字设置");
static_assert(sizeof(SettingSlotUMG_C_FOV文字设置) == 0x000008, "Wrong size on SettingSlotUMG_C_FOV文字设置");
static_assert(offsetof(SettingSlotUMG_C_FOV文字设置, Selection) == 0x000000, "Member 'SettingSlotUMG_C_FOV文字设置::Selection' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_FOV文字设置, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'SettingSlotUMG_C_FOV文字设置::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存ShowFps设置
// 0x0040 (0x0040 - 0x0000)
struct SettingSlotUMG_C_保存ShowFps设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_保存ShowFps设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存ShowFps设置");
static_assert(sizeof(SettingSlotUMG_C_保存ShowFps设置) == 0x000040, "Wrong size on SettingSlotUMG_C_保存ShowFps设置");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存ShowFps设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存ShowFps设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存ShowFps设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存ShowFps设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存ShowFps设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存ShowFps设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存ShowFps设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000031, "Member 'SettingSlotUMG_C_保存ShowFps设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存ShowFps设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存ShowFps设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存反转鼠标Y轴设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存反转鼠标Y轴设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存反转鼠标Y轴设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存反转鼠标Y轴设置");
static_assert(sizeof(SettingSlotUMG_C_保存反转鼠标Y轴设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存反转鼠标Y轴设置");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存反转鼠标Y轴设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存反转鼠标Y轴设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.全屏模式文字更改
// 0x0008 (0x0008 - 0x0000)
struct SettingSlotUMG_C_全屏模式文字更改 final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_全屏模式文字更改) == 0x000004, "Wrong alignment on SettingSlotUMG_C_全屏模式文字更改");
static_assert(sizeof(SettingSlotUMG_C_全屏模式文字更改) == 0x000008, "Wrong size on SettingSlotUMG_C_全屏模式文字更改");
static_assert(offsetof(SettingSlotUMG_C_全屏模式文字更改, Selection) == 0x000000, "Member 'SettingSlotUMG_C_全屏模式文字更改::Selection' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_全屏模式文字更改, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'SettingSlotUMG_C_全屏模式文字更改::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存语言设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存语言设置 final
{
public:
	bool                                          CallFunc_SetCurrentLanguage_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentLanguage_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_保存语言设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存语言设置");
static_assert(sizeof(SettingSlotUMG_C_保存语言设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存语言设置");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_SetCurrentLanguage_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_SetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_SetCurrentLanguage_ReturnValue_1) == 0x000001, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_SetCurrentLanguage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000010, "Member 'SettingSlotUMG_C_保存语言设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SettingSlotUMG_C_保存语言设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, K2Node_SwitchInteger_CmpSuccess) == 0x000019, "Member 'SettingSlotUMG_C_保存语言设置::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000028, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000030, "Member 'SettingSlotUMG_C_保存语言设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'SettingSlotUMG_C_保存语言设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000039, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存语言设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存语言设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存长按瞄准设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存长按瞄准设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存长按瞄准设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存长按瞄准设置");
static_assert(sizeof(SettingSlotUMG_C_保存长按瞄准设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存长按瞄准设置");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存长按瞄准设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存长按瞄准设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存长按瞄准设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存长按瞄准设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存长按瞄准设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存长按瞄准设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存长按瞄准设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存长按瞄准设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存长按瞄准设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存长按瞄准设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存开启机瞄设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存开启机瞄设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存开启机瞄设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存开启机瞄设置");
static_assert(sizeof(SettingSlotUMG_C_保存开启机瞄设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存开启机瞄设置");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存开启机瞄设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存开启机瞄设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存开启机瞄设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存开启机瞄设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存开启机瞄设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存开启机瞄设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存开启机瞄设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存开启机瞄设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存开启机瞄设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存开启机瞄设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存第一人称设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存第一人称设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存第一人称设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存第一人称设置");
static_assert(sizeof(SettingSlotUMG_C_保存第一人称设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存第一人称设置");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存第一人称设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存第一人称设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存第一人称设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存第一人称设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存第一人称设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存第一人称设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存第一人称设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存第一人称设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存第一人称设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存第一人称设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存镜头晃动设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存镜头晃动设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存镜头晃动设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存镜头晃动设置");
static_assert(sizeof(SettingSlotUMG_C_保存镜头晃动设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存镜头晃动设置");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存镜头晃动设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存镜头晃动设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存镜头晃动设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存镜头晃动设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存镜头晃动设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存镜头晃动设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存镜头晃动设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存镜头晃动设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存镜头晃动设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存镜头晃动设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存击杀提示设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存击杀提示设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存击杀提示设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存击杀提示设置");
static_assert(sizeof(SettingSlotUMG_C_保存击杀提示设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存击杀提示设置");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存击杀提示设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存击杀提示设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存击杀提示设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存击杀提示设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存击杀提示设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存击杀提示设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存击杀提示设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存击杀提示设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存击杀提示设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存击杀提示设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存游戏难度设置
// 0x0038 (0x0038 - 0x0000)
struct SettingSlotUMG_C_保存游戏难度设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_保存游戏难度设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存游戏难度设置");
static_assert(sizeof(SettingSlotUMG_C_保存游戏难度设置) == 0x000038, "Wrong size on SettingSlotUMG_C_保存游戏难度设置");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存游戏难度设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存游戏难度设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_Conv_IntToByte_ReturnValue) == 0x000011, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_GetValidValue_ReturnValue) == 0x000012, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000020, "Member 'SettingSlotUMG_C_保存游戏难度设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'SettingSlotUMG_C_保存游戏难度设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000029, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x00002A, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存游戏难度设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000030, "Member 'SettingSlotUMG_C_保存游戏难度设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.GetScreenResolution
// 0x0080 (0x0080 - 0x0000)
struct SettingSlotUMG_C_GetScreenResolution final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
};
static_assert(alignof(SettingSlotUMG_C_GetScreenResolution) == 0x000008, "Wrong alignment on SettingSlotUMG_C_GetScreenResolution");
static_assert(sizeof(SettingSlotUMG_C_GetScreenResolution) == 0x000080, "Wrong size on SettingSlotUMG_C_GetScreenResolution");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_GetScreenResolution::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_GetScreenResolution_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_GetScreenResolution, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'SettingSlotUMG_C_GetScreenResolution::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存无敌设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存无敌设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存无敌设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存无敌设置");
static_assert(sizeof(SettingSlotUMG_C_保存无敌设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存无敌设置");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存无敌设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存无敌设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存无敌设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存无敌设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存无敌设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存无敌设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存无敌设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存无敌设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无敌设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存无敌设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.读档
// 0x0038 (0x0038 - 0x0000)
struct SettingSlotUMG_C_读档 final
{
public:
	class UPlayerStateSetting_C*                  Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_读档) == 0x000008, "Wrong alignment on SettingSlotUMG_C_读档");
static_assert(sizeof(SettingSlotUMG_C_读档) == 0x000038, "Wrong size on SettingSlotUMG_C_读档");
static_assert(offsetof(SettingSlotUMG_C_读档, Output_Get) == 0x000000, "Member 'SettingSlotUMG_C_读档::Output_Get' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'SettingSlotUMG_C_读档::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000010, "Member 'SettingSlotUMG_C_读档::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SettingSlotUMG_C_读档::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000019, "Member 'SettingSlotUMG_C_读档::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_读档::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_读档::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_读档, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_读档::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存无限子弹设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存无限子弹设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存无限子弹设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存无限子弹设置");
static_assert(sizeof(SettingSlotUMG_C_保存无限子弹设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存无限子弹设置");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存无限子弹设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存无限子弹设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存无限子弹设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存无限子弹设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存无限子弹设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存无限子弹设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存无限子弹设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存无限子弹设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无限子弹设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存无限子弹设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存超级跳设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存超级跳设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存超级跳设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存超级跳设置");
static_assert(sizeof(SettingSlotUMG_C_保存超级跳设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存超级跳设置");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存超级跳设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存超级跳设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存超级跳设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存超级跳设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存超级跳设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存超级跳设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存超级跳设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存超级跳设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存超级跳设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存超级跳设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存闪电侠设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存闪电侠设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存闪电侠设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存闪电侠设置");
static_assert(sizeof(SettingSlotUMG_C_保存闪电侠设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存闪电侠设置");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存闪电侠设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存闪电侠设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存闪电侠设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存闪电侠设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存闪电侠设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存闪电侠设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存闪电侠设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存闪电侠设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存闪电侠设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存闪电侠设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存聆听设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存聆听设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存聆听设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存聆听设置");
static_assert(sizeof(SettingSlotUMG_C_保存聆听设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存聆听设置");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存聆听设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存聆听设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存聆听设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存聆听设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存聆听设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存聆听设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存聆听设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存聆听设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存聆听设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存聆听设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存子弹时间设置
// 0x0040 (0x0040 - 0x0000)
struct SettingSlotUMG_C_保存子弹时间设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSlotUMG_C_保存子弹时间设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存子弹时间设置");
static_assert(sizeof(SettingSlotUMG_C_保存子弹时间设置) == 0x000040, "Wrong size on SettingSlotUMG_C_保存子弹时间设置");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存子弹时间设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存子弹时间设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存子弹时间设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000011, "Member 'SettingSlotUMG_C_保存子弹时间设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存子弹时间设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存子弹时间设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存子弹时间设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存子弹时间设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存子弹时间设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存子弹时间设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存巨大化设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存巨大化设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存巨大化设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存巨大化设置");
static_assert(sizeof(SettingSlotUMG_C_保存巨大化设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存巨大化设置");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存巨大化设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存巨大化设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存巨大化设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存巨大化设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存巨大化设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存巨大化设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存巨大化设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存巨大化设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存巨大化设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存巨大化设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存无后坐力设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存无后坐力设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存无后坐力设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存无后坐力设置");
static_assert(sizeof(SettingSlotUMG_C_保存无后坐力设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存无后坐力设置");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存无后坐力设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存无后坐力设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存无后坐力设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存无后坐力设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存无后坐力设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存无后坐力设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存无后坐力设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存无后坐力设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无后坐力设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存无后坐力设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存兔女郎丧尸设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存兔女郎丧尸设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存兔女郎丧尸设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存兔女郎丧尸设置");
static_assert(sizeof(SettingSlotUMG_C_保存兔女郎丧尸设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存兔女郎丧尸设置");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存兔女郎丧尸设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存兔女郎丧尸设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存无重力设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存无重力设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存无重力设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存无重力设置");
static_assert(sizeof(SettingSlotUMG_C_保存无重力设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存无重力设置");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存无重力设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存无重力设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存无重力设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存无重力设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存无重力设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存无重力设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存无重力设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存无重力设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存无重力设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存无重力设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存自动瞄准设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存自动瞄准设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存自动瞄准设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存自动瞄准设置");
static_assert(sizeof(SettingSlotUMG_C_保存自动瞄准设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存自动瞄准设置");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存自动瞄准设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存自动瞄准设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存自动瞄准设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存自动瞄准设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存自动瞄准设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存自动瞄准设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存自动瞄准设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存自动瞄准设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存自动瞄准设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存自动瞄准设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存丧尸下班设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存丧尸下班设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存丧尸下班设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存丧尸下班设置");
static_assert(sizeof(SettingSlotUMG_C_保存丧尸下班设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存丧尸下班设置");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存丧尸下班设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存丧尸下班设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存丧尸下班设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存丧尸下班设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSlotUMG_C_保存丧尸下班设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存丧尸下班设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存丧尸下班设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存丧尸下班设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存丧尸下班设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存丧尸下班设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.保存抗锯齿方法设置
// 0x0048 (0x0048 - 0x0000)
struct SettingSlotUMG_C_保存抗锯齿方法设置 final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_保存抗锯齿方法设置) == 0x000008, "Wrong alignment on SettingSlotUMG_C_保存抗锯齿方法设置");
static_assert(sizeof(SettingSlotUMG_C_保存抗锯齿方法设置) == 0x000048, "Wrong size on SettingSlotUMG_C_保存抗锯齿方法设置");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000031, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_保存抗锯齿方法设置, CallFunc_SaveGameToSlot_ReturnValue) == 0x000040, "Member 'SettingSlotUMG_C_保存抗锯齿方法设置::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function SettingSlotUMG.SettingSlotUMG_C.设置无边框全屏
// 0x0020 (0x0020 - 0x0000)
struct SettingSlotUMG_C_设置无边框全屏 final
{
public:
	uint8                                         全屏模式; // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                分辨率设置; // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSlotUMG_C_设置无边框全屏) == 0x000008, "Wrong alignment on SettingSlotUMG_C_设置无边框全屏");
static_assert(sizeof(SettingSlotUMG_C_设置无边框全屏) == 0x000020, "Wrong size on SettingSlotUMG_C_设置无边框全屏");
static_assert(offsetof(SettingSlotUMG_C_设置无边框全屏, 全屏模式) == 0x000000, "Member 'SettingSlotUMG_C_设置无边框全屏::全屏模式' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_设置无边框全屏, 分辨率设置) == 0x000008, "Member 'SettingSlotUMG_C_设置无边框全屏::分辨率设置' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_设置无边框全屏, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'SettingSlotUMG_C_设置无边框全屏::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_设置无边框全屏, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'SettingSlotUMG_C_设置无边框全屏::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSlotUMG_C_设置无边框全屏, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'SettingSlotUMG_C_设置无边框全屏::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

