#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 键盘密码按钮_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function 键盘密码按钮_BP.键盘密码按钮_BP_C.ExecuteUbergraph_键盘密码按钮_BP
// 0x00F8 (0x00F8 - 0x0000)
struct 键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_2;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_1;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_ButtonPressed;          // 0x0030(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class A第一道门_BP_C* CallFunc_GetActorOfClass_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP) == 0x000008, "Wrong alignment on 键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP");
static_assert(sizeof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP) == 0x0000F8, "Wrong size on 键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, EntryPoint) == 0x000000, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, K2Node_ComponentBoundEvent_TouchedComponent_2) == 0x000018, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::K2Node_ComponentBoundEvent_TouchedComponent_2' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, K2Node_ComponentBoundEvent_TouchedComponent_1) == 0x000020, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::K2Node_ComponentBoundEvent_TouchedComponent_1' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, K2Node_ComponentBoundEvent_TouchedComponent) == 0x000028, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::K2Node_ComponentBoundEvent_TouchedComponent' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, K2Node_ComponentBoundEvent_ButtonPressed) == 0x000030, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::K2Node_ComponentBoundEvent_ButtonPressed' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000048, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_GetActorOfClass_ReturnValue) == 0x0000D0, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_Array_Get_Item) == 0x0000D8, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E0, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000F0, "Member '键盘密码按钮_BP_C_ExecuteUbergraph_键盘密码按钮_BP::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");

// Function 键盘密码按钮_BP.键盘密码按钮_BP_C.BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   ButtonPressed;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature) == 0x000008, "Wrong alignment on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature");
static_assert(sizeof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature) == 0x000020, "Wrong size on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature");
static_assert(offsetof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member '键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature::TouchedComponent' has a wrong offset!");
static_assert(offsetof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature, ButtonPressed) == 0x000008, "Member '键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_2_ComponentOnClickedSignature__DelegateSignature::ButtonPressed' has a wrong offset!");

// Function 键盘密码按钮_BP.键盘密码按钮_BP_C.BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(sizeof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(offsetof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member '键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function 键盘密码按钮_BP.键盘密码按钮_BP_C.BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(sizeof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on 键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(offsetof(键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member '键盘密码按钮_BP_C_BndEvt__键盘密码按钮_BP_SM_Button1_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function 键盘密码按钮_BP.键盘密码按钮_BP_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct 键盘密码按钮_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(键盘密码按钮_BP_C_UserConstructionScript) == 0x000001, "Wrong alignment on 键盘密码按钮_BP_C_UserConstructionScript");
static_assert(sizeof(键盘密码按钮_BP_C_UserConstructionScript) == 0x000001, "Wrong size on 键盘密码按钮_BP_C_UserConstructionScript");
static_assert(offsetof(键盘密码按钮_BP_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member '键盘密码按钮_BP_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

