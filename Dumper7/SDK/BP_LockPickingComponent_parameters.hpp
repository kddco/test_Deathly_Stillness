#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockPickingComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InventoryData_Struct_structs.hpp"


namespace SDK::Params
{

// Function BP_LockPickingComponent.BP_LockPickingComponent_C.ExecuteUbergraph_BP_LockPickingComponent
// 0x0270 (0x0270 - 0x0000)
struct BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_LockpickingHUD_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          ___bool_True_if_break_was_hit_Variable_1;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Lockpicking_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryData_Struct                  CallFunc_Array_Get_Item;                           // 0x00F8(0x0098)(HasGetValueTypeHash)
	struct FInventoryData_Struct                  CallFunc_Array_Get_Item_1;                         // 0x0190(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0250(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent) == 0x000010, "Wrong alignment on BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent");
static_assert(sizeof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent) == 0x000270, "Wrong size on BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, EntryPoint) == 0x000000, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___int_Array_Index_Variable) == 0x000008, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetCameraRotation_ReturnValue) == 0x000028, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetInstigator_ReturnValue) == 0x000038, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetCameraLocation_ReturnValue) == 0x000040, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetActorForwardVector_ReturnValue) == 0x00004C, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___bool_True_if_break_was_hit_Variable_1) == 0x0000B0, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B8, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C0, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___int_Loop_Counter_Variable) == 0x0000CC, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___int_Array_Index_Variable_1) == 0x0000D0, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_PlayAnimation_ReturnValue) == 0x0000D8, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000E0, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, K2Node_DynamicCast_AsPlayer_BP) == 0x0000E8, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000228, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000229, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Array_Length_ReturnValue) == 0x00022C, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000230, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_BooleanAND_ReturnValue) == 0x000235, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_PlayAnimation_ReturnValue_1) == 0x000238, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, ___int_Loop_Counter_Variable_1) == 0x000240, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000244, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000248, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x00024C, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_Conv_IntToText_ReturnValue) == 0x000250, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000268, "Member 'BP_LockPickingComponent_C_ExecuteUbergraph_BP_LockPickingComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LockPickingComponent.BP_LockPickingComponent_C.CheckForLock
// 0x0010 (0x0010 - 0x0000)
struct BP_LockPickingComponent_C_CheckForLock final
{
public:
	class ABP_上锁的门_C* 要开的门1; // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LockPickingComponent_C_CheckForLock) == 0x000008, "Wrong alignment on BP_LockPickingComponent_C_CheckForLock");
static_assert(sizeof(BP_LockPickingComponent_C_CheckForLock) == 0x000010, "Wrong size on BP_LockPickingComponent_C_CheckForLock");
static_assert(offsetof(BP_LockPickingComponent_C_CheckForLock, 要开的门1) == 0x000000, "Member 'BP_LockPickingComponent_C_CheckForLock::要开的门1' has a wrong offset!");
static_assert(offsetof(BP_LockPickingComponent_C_CheckForLock, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_LockPickingComponent_C_CheckForLock::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

