#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Roller_door_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Roller_door_BP.Roller_door_BP_C
// 0x0030 (0x0250 - 0x0220)
class ARoller_door_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKM_Roller_door;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USKM_Roller_door_Anim_C*                As_SKM_Roller_Door_Anim;                           // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackroom_Quest_BP_C*                   BackroomQuestRef;                                  // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Roller_door_BP(int32 EntryPoint);
	void 彻底关闭卷帘门();
	void 关闭卷帘门();
	void 卷帘门完全开启();
	void 开启卷帘门();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Roller_door_BP_C">();
	}
	static class ARoller_door_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoller_door_BP_C>();
	}
};
static_assert(alignof(ARoller_door_BP_C) == 0x000008, "Wrong alignment on ARoller_door_BP_C");
static_assert(sizeof(ARoller_door_BP_C) == 0x000250, "Wrong size on ARoller_door_BP_C");
static_assert(offsetof(ARoller_door_BP_C, UberGraphFrame) == 0x000220, "Member 'ARoller_door_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARoller_door_BP_C, Box) == 0x000228, "Member 'ARoller_door_BP_C::Box' has a wrong offset!");
static_assert(offsetof(ARoller_door_BP_C, SKM_Roller_door) == 0x000230, "Member 'ARoller_door_BP_C::SKM_Roller_door' has a wrong offset!");
static_assert(offsetof(ARoller_door_BP_C, DefaultSceneRoot) == 0x000238, "Member 'ARoller_door_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ARoller_door_BP_C, As_SKM_Roller_Door_Anim) == 0x000240, "Member 'ARoller_door_BP_C::As_SKM_Roller_Door_Anim' has a wrong offset!");
static_assert(offsetof(ARoller_door_BP_C, BackroomQuestRef) == 0x000248, "Member 'ARoller_door_BP_C::BackroomQuestRef' has a wrong offset!");

}

