#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Clip_Master

#include "Basic.hpp"


namespace SDK::Params
{

// Function Clip_Master.Clip_Master_C.ExecuteUbergraph_Clip_Master
// 0x0028 (0x0028 - 0x0000)
struct Clip_Master_C_ExecuteUbergraph_Clip_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clip_Master_C_ExecuteUbergraph_Clip_Master) == 0x000008, "Wrong alignment on Clip_Master_C_ExecuteUbergraph_Clip_Master");
static_assert(sizeof(Clip_Master_C_ExecuteUbergraph_Clip_Master) == 0x000028, "Wrong size on Clip_Master_C_ExecuteUbergraph_Clip_Master");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, EntryPoint) == 0x000000, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000008, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, K2Node_DynamicCast_AsPlayer_BP) == 0x000018, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(Clip_Master_C_ExecuteUbergraph_Clip_Master, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Clip_Master_C_ExecuteUbergraph_Clip_Master::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

