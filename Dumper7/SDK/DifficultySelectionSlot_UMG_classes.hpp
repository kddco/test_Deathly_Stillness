#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySelectionSlot_UMG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameDifficultyEnum_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DifficultySelectionSlot_UMG.DifficultySelectionSlot_UMG_C
// 0x0060 (0x02C0 - 0x0260)
class UDifficultySelectionSlot_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       交互; // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_131;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_137;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0280(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	EGameDifficultyEnum                           游戏难度; // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  PlayerSetting;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   难度描述; // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_DifficultySelectionSlot_UMG(int32 EntryPoint);
	void BndEvt__难度选择按钮_Button_131_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_131_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_131_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DifficultySelectionSlot_UMG_C">();
	}
	static class UDifficultySelectionSlot_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDifficultySelectionSlot_UMG_C>();
	}
};
static_assert(alignof(UDifficultySelectionSlot_UMG_C) == 0x000008, "Wrong alignment on UDifficultySelectionSlot_UMG_C");
static_assert(sizeof(UDifficultySelectionSlot_UMG_C) == 0x0002C0, "Wrong size on UDifficultySelectionSlot_UMG_C");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, UberGraphFrame) == 0x000260, "Member 'UDifficultySelectionSlot_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, 交互) == 0x000268, "Member 'UDifficultySelectionSlot_UMG_C::交互' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, Button_131) == 0x000270, "Member 'UDifficultySelectionSlot_UMG_C::Button_131' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, TextBlock_137) == 0x000278, "Member 'UDifficultySelectionSlot_UMG_C::TextBlock_137' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, Name_0) == 0x000280, "Member 'UDifficultySelectionSlot_UMG_C::Name_0' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, 游戏难度) == 0x000298, "Member 'UDifficultySelectionSlot_UMG_C::游戏难度' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, PlayerSetting) == 0x0002A0, "Member 'UDifficultySelectionSlot_UMG_C::PlayerSetting' has a wrong offset!");
static_assert(offsetof(UDifficultySelectionSlot_UMG_C, 难度描述) == 0x0002A8, "Member 'UDifficultySelectionSlot_UMG_C::难度描述' has a wrong offset!");

}

