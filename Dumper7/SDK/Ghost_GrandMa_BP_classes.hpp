#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ghost_GrandMa_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ghost_GrandMa_BP.Ghost_GrandMa_BP_C
// 0x0140 (0x0600 - 0x04C0)
class AGhost_GrandMa_BP_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Dash_Banshee;                                   // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound;                                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ____0______0_D6E33A1A41F9C42355CB46AE7EB5D8E8;     // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____0__Direction_D6E33A1A41F9C42355CB46AE7EB5D8E8; // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     时间轴_0; // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否被攻击; // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否围绕玩家游走; // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGhost_GrandMa_Anim_C*                  As_Ghost_Grand_Ma_Anim;                            // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   攻击检测起始骨骼; // 0x0514(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   攻击检测终点骨骼; // 0x051C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitPlayer;                                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         攻击伤害; // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否可以攻击; // 0x0534(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ZombieSound;                                       // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_Result;                                        // 0x0540(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         应用伤害;                                      // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         当前血量; // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Montage_to_Play;                                   // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                IdleLocation;                                      // 0x05E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IdleTime;                                          // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Random_Location;                                   // 0x05F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ghost_GrandMa_BP(int32 EntryPoint);
	void 重新开始音效播放();
	void 随机移动();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void 攻击范围();
	void BndEvt__Ghost_GrandMa_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void 开始冲向玩家();
	void 准备下次攻击玩家();
	void 是否攻击玩家();
	void 播放音效();
	void 重置受到伤害游走();
	void DamageHit(const struct FHitResult& Hit, float Damage, bool isMelee_);
	void 原地不动时间();
	void OnSuccess_B550C7694B876E6C9AD7BBA73EE92D2B(EPathFollowingResult MovementResult);
	void OnFail_B550C7694B876E6C9AD7BBA73EE92D2B(EPathFollowingResult MovementResult);
	void OnSuccess_0899DE1C46488258DFB1A982F64217F0(EPathFollowingResult MovementResult);
	void OnFail_0899DE1C46488258DFB1A982F64217F0(EPathFollowingResult MovementResult);
	void OnCompleted_7F6598CF4A92C7D33E7365930E2923B1(class FName NotifyName);
	void OnBlendOut_7F6598CF4A92C7D33E7365930E2923B1(class FName NotifyName);
	void OnInterrupted_7F6598CF4A92C7D33E7365930E2923B1(class FName NotifyName);
	void OnNotifyBegin_7F6598CF4A92C7D33E7365930E2923B1(class FName NotifyName);
	void OnNotifyEnd_7F6598CF4A92C7D33E7365930E2923B1(class FName NotifyName);
	void 时间轴_0__UpdateFunc();
	void 时间轴_0__FinishedFunc();
	void 血液飞溅特效(const struct FVector& Location, const struct FVector& InVec);
	void 更换材质(int32 Condition);
	void 更改控制旋转模式(bool 将旋转朝向运动, bool 使用控制器旋转Yaw);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ghost_GrandMa_BP_C">();
	}
	static class AGhost_GrandMa_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGhost_GrandMa_BP_C>();
	}
};
static_assert(alignof(AGhost_GrandMa_BP_C) == 0x000010, "Wrong alignment on AGhost_GrandMa_BP_C");
static_assert(sizeof(AGhost_GrandMa_BP_C) == 0x000600, "Wrong size on AGhost_GrandMa_BP_C");
static_assert(offsetof(AGhost_GrandMa_BP_C, UberGraphFrame) == 0x0004C0, "Member 'AGhost_GrandMa_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Sphere) == 0x0004C8, "Member 'AGhost_GrandMa_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, NS_Dash_Banshee) == 0x0004D0, "Member 'AGhost_GrandMa_BP_C::NS_Dash_Banshee' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Sound) == 0x0004D8, "Member 'AGhost_GrandMa_BP_C::Sound' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, ____0______0_D6E33A1A41F9C42355CB46AE7EB5D8E8) == 0x0004E0, "Member 'AGhost_GrandMa_BP_C::____0______0_D6E33A1A41F9C42355CB46AE7EB5D8E8' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, ____0__Direction_D6E33A1A41F9C42355CB46AE7EB5D8E8) == 0x0004E4, "Member 'AGhost_GrandMa_BP_C::____0__Direction_D6E33A1A41F9C42355CB46AE7EB5D8E8' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 时间轴_0) == 0x0004E8, "Member 'AGhost_GrandMa_BP_C::时间轴_0' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 是否被攻击) == 0x0004F0, "Member 'AGhost_GrandMa_BP_C::是否被攻击' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, As_Player_BP) == 0x0004F8, "Member 'AGhost_GrandMa_BP_C::As_Player_BP' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 是否围绕玩家游走) == 0x000500, "Member 'AGhost_GrandMa_BP_C::是否围绕玩家游走' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, As_Ghost_Grand_Ma_Anim) == 0x000508, "Member 'AGhost_GrandMa_BP_C::As_Ghost_Grand_Ma_Anim' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Dead) == 0x000510, "Member 'AGhost_GrandMa_BP_C::Dead' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 攻击检测起始骨骼) == 0x000514, "Member 'AGhost_GrandMa_BP_C::攻击检测起始骨骼' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 攻击检测终点骨骼) == 0x00051C, "Member 'AGhost_GrandMa_BP_C::攻击检测终点骨骼' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, HitPlayer) == 0x000528, "Member 'AGhost_GrandMa_BP_C::HitPlayer' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 攻击伤害) == 0x000530, "Member 'AGhost_GrandMa_BP_C::攻击伤害' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 是否可以攻击) == 0x000534, "Member 'AGhost_GrandMa_BP_C::是否可以攻击' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, ZombieSound) == 0x000538, "Member 'AGhost_GrandMa_BP_C::ZombieSound' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Hit_Result) == 0x000540, "Member 'AGhost_GrandMa_BP_C::Hit_Result' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 应用伤害) == 0x0005C8, "Member 'AGhost_GrandMa_BP_C::应用伤害' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, 当前血量) == 0x0005CC, "Member 'AGhost_GrandMa_BP_C::当前血量' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Montage_to_Play) == 0x0005D0, "Member 'AGhost_GrandMa_BP_C::Montage_to_Play' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, IdleLocation) == 0x0005E0, "Member 'AGhost_GrandMa_BP_C::IdleLocation' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, IdleTime) == 0x0005EC, "Member 'AGhost_GrandMa_BP_C::IdleTime' has a wrong offset!");
static_assert(offsetof(AGhost_GrandMa_BP_C, Random_Location) == 0x0005F0, "Member 'AGhost_GrandMa_BP_C::Random_Location' has a wrong offset!");

}

