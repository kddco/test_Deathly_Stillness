#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zombie_Moveto

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Zombie_Moveto.Zombie_Moveto_C.ExecuteUbergraph_Zombie_Moveto
// 0x0068 (0x0068 - 0x0000)
struct Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          ___byte_Variable;                                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto) == 0x000008, "Wrong alignment on Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto");
static_assert(sizeof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto) == 0x000068, "Wrong size on Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, EntryPoint) == 0x000000, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::EntryPoint' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_CustomEvent_MovementResult_1) == 0x000004, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_CustomEvent_MovementResult) == 0x000018, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, ___byte_Variable) == 0x00002C, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::___byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_SwitchEnum_CmpSuccess) == 0x00002D, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_Event_OwnerController) == 0x000030, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_Event_ControlledPawn) == 0x000038, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_DynamicCast_AsZombie_BP) == 0x000040, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x00004C, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000058, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Zombie_Moveto_C_ExecuteUbergraph_Zombie_Moveto::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Zombie_Moveto.Zombie_Moveto_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Zombie_Moveto_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Moveto_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Zombie_Moveto_C_ReceiveExecuteAI");
static_assert(sizeof(Zombie_Moveto_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Zombie_Moveto_C_ReceiveExecuteAI");
static_assert(offsetof(Zombie_Moveto_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Zombie_Moveto_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Zombie_Moveto_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Zombie_Moveto_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Zombie_Moveto.Zombie_Moveto_C.OnSuccess_2BFCCD404763D3F5AA729698DDDE9597
// 0x0001 (0x0001 - 0x0000)
struct Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597) == 0x000001, "Wrong alignment on Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597");
static_assert(sizeof(Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597) == 0x000001, "Wrong size on Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597");
static_assert(offsetof(Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597, MovementResult) == 0x000000, "Member 'Zombie_Moveto_C_OnSuccess_2BFCCD404763D3F5AA729698DDDE9597::MovementResult' has a wrong offset!");

// Function Zombie_Moveto.Zombie_Moveto_C.OnFail_2BFCCD404763D3F5AA729698DDDE9597
// 0x0001 (0x0001 - 0x0000)
struct Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597) == 0x000001, "Wrong alignment on Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597");
static_assert(sizeof(Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597) == 0x000001, "Wrong size on Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597");
static_assert(offsetof(Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597, MovementResult) == 0x000000, "Member 'Zombie_Moveto_C_OnFail_2BFCCD404763D3F5AA729698DDDE9597::MovementResult' has a wrong offset!");

}

