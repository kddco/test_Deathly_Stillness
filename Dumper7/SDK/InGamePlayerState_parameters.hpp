#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGamePlayerState

#include "Basic.hpp"


namespace SDK::Params
{

// Function InGamePlayerState.InGamePlayerState_C.ExecuteUbergraph_InGamePlayerState
// 0x0024 (0x0024 - 0x0000)
struct InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent___;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState) == 0x000004, "Wrong alignment on InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState");
static_assert(sizeof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState) == 0x000024, "Wrong size on InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, EntryPoint) == 0x000000, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, K2Node_CustomEvent___) == 0x000004, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::K2Node_CustomEvent___' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, ___float_Variable) == 0x000008, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::___float_Variable' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, ___float_Variable_1) == 0x00000C, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::___float_Variable_1' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, ___float_Variable_2) == 0x000010, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::___float_Variable_2' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000018, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00001C, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000020, "Member 'InGamePlayerState_C_ExecuteUbergraph_InGamePlayerState::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function InGamePlayerState.InGamePlayerState_C.击杀丧尸计分
// 0x0004 (0x0004 - 0x0000)
struct InGamePlayerState_C_击杀丧尸计分 final
{
public:
	float                                         得分; // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGamePlayerState_C_击杀丧尸计分) == 0x000004, "Wrong alignment on InGamePlayerState_C_击杀丧尸计分");
static_assert(sizeof(InGamePlayerState_C_击杀丧尸计分) == 0x000004, "Wrong size on InGamePlayerState_C_击杀丧尸计分");
static_assert(offsetof(InGamePlayerState_C_击杀丧尸计分, 得分) == 0x000000, "Member 'InGamePlayerState_C_击杀丧尸计分::得分' has a wrong offset!");

// Function InGamePlayerState.InGamePlayerState_C.爆头率计算
// 0x0014 (0x0014 - 0x0000)
struct InGamePlayerState_C_爆头率计算 final
{
public:
	float                                         爆头率_0; // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGamePlayerState_C_爆头率计算) == 0x000004, "Wrong alignment on InGamePlayerState_C_爆头率计算");
static_assert(sizeof(InGamePlayerState_C_爆头率计算) == 0x000014, "Wrong size on InGamePlayerState_C_爆头率计算");
static_assert(offsetof(InGamePlayerState_C_爆头率计算, 爆头率_0) == 0x000000, "Member 'InGamePlayerState_C_爆头率计算::爆头率_0' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_爆头率计算, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'InGamePlayerState_C_爆头率计算::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_爆头率计算, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'InGamePlayerState_C_爆头率计算::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_爆头率计算, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'InGamePlayerState_C_爆头率计算::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_爆头率计算, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'InGamePlayerState_C_爆头率计算::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function InGamePlayerState.InGamePlayerState_C.命中率计算
// 0x0014 (0x0014 - 0x0000)
struct InGamePlayerState_C_命中率计算 final
{
public:
	float                                         命中率_0; // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGamePlayerState_C_命中率计算) == 0x000004, "Wrong alignment on InGamePlayerState_C_命中率计算");
static_assert(sizeof(InGamePlayerState_C_命中率计算) == 0x000014, "Wrong size on InGamePlayerState_C_命中率计算");
static_assert(offsetof(InGamePlayerState_C_命中率计算, 命中率_0) == 0x000000, "Member 'InGamePlayerState_C_命中率计算::命中率_0' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_命中率计算, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'InGamePlayerState_C_命中率计算::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_命中率计算, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'InGamePlayerState_C_命中率计算::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_命中率计算, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'InGamePlayerState_C_命中率计算::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGamePlayerState_C_命中率计算, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'InGamePlayerState_C_命中率计算::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

