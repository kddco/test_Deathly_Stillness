#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AccessoriesType_UMG

#include "Basic.hpp"

#include "WeaponType_structs.hpp"
#include "Engine_structs.hpp"
#include "AccessoriesType_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AccessoriesType_UMG.AccessoriesType_UMG_C
// 0x0060 (0x02C0 - 0x0260)
class UAccessoriesType_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       One;                                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_259;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_93;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_486;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_157;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             WeaponTexture;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EAccessoriesType                              AccessoriesType;                                   // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AccessoriesName;                                   // 0x02A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          是否被选中; // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponType                                   WeaponType;                                        // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AccessoriesType_UMG(int32 EntryPoint);
	void 关闭所有配件种类选择();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_259_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_259_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_259_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void 关闭所有配件详情选择();
	void 关闭所有武器选择();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AccessoriesType_UMG_C">();
	}
	static class UAccessoriesType_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAccessoriesType_UMG_C>();
	}
};
static_assert(alignof(UAccessoriesType_UMG_C) == 0x000008, "Wrong alignment on UAccessoriesType_UMG_C");
static_assert(sizeof(UAccessoriesType_UMG_C) == 0x0002C0, "Wrong size on UAccessoriesType_UMG_C");
static_assert(offsetof(UAccessoriesType_UMG_C, UberGraphFrame) == 0x000260, "Member 'UAccessoriesType_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, One) == 0x000268, "Member 'UAccessoriesType_UMG_C::One' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, Button_259) == 0x000270, "Member 'UAccessoriesType_UMG_C::Button_259' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, Image_93) == 0x000278, "Member 'UAccessoriesType_UMG_C::Image_93' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, Image_486) == 0x000280, "Member 'UAccessoriesType_UMG_C::Image_486' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, TextBlock_157) == 0x000288, "Member 'UAccessoriesType_UMG_C::TextBlock_157' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, WeaponTexture) == 0x000290, "Member 'UAccessoriesType_UMG_C::WeaponTexture' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, AccessoriesType) == 0x000298, "Member 'UAccessoriesType_UMG_C::AccessoriesType' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, AccessoriesName) == 0x0002A0, "Member 'UAccessoriesType_UMG_C::AccessoriesName' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, 是否被选中) == 0x0002B8, "Member 'UAccessoriesType_UMG_C::是否被选中' has a wrong offset!");
static_assert(offsetof(UAccessoriesType_UMG_C, WeaponType) == 0x0002B9, "Member 'UAccessoriesType_UMG_C::WeaponType' has a wrong offset!");

}

