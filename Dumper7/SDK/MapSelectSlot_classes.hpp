#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapSelectSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MapSelectSlot.MapSelectSlot_C
// 0x0080 (0x02E0 - 0x0260)
class UMapSelectSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       One;                                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_83;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_105;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_111;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_249;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_147;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             MapTexture;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMapSelect_UMG_C*                       选择地图界面UMG; // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Select_;                                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GameMap;                                           // 0x02B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   GameName;                                          // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          是否开启黑夜模式; // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MapSelectSlot(int32 EntryPoint);
	void BndEvt__MapSelectSlot_CheckBox_111_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void Reset();
	void BndEvt__Button_105_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_105_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_105_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void CustomMappingCheck(const struct FInputActionKeyMapping& InputAction, const struct FInputAxisKeyMapping& InputAxis);
	void initializeSetting();
	void SettingDetails(const class FText& 标题, const class FText& 详情);
	void 选中状态();
	void 关闭选中状态();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MapSelectSlot_C">();
	}
	static class UMapSelectSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapSelectSlot_C>();
	}
};
static_assert(alignof(UMapSelectSlot_C) == 0x000008, "Wrong alignment on UMapSelectSlot_C");
static_assert(sizeof(UMapSelectSlot_C) == 0x0002E0, "Wrong size on UMapSelectSlot_C");
static_assert(offsetof(UMapSelectSlot_C, UberGraphFrame) == 0x000260, "Member 'UMapSelectSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, One) == 0x000268, "Member 'UMapSelectSlot_C::One' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, Border_83) == 0x000270, "Member 'UMapSelectSlot_C::Border_83' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, Button_105) == 0x000278, "Member 'UMapSelectSlot_C::Button_105' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, CheckBox_111) == 0x000280, "Member 'UMapSelectSlot_C::CheckBox_111' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, HorizontalBox_0) == 0x000288, "Member 'UMapSelectSlot_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, Image_249) == 0x000290, "Member 'UMapSelectSlot_C::Image_249' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, TextBlock_147) == 0x000298, "Member 'UMapSelectSlot_C::TextBlock_147' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, MapTexture) == 0x0002A0, "Member 'UMapSelectSlot_C::MapTexture' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, 选择地图界面UMG) == 0x0002A8, "Member 'UMapSelectSlot_C::选择地图界面UMG' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, Select_) == 0x0002B0, "Member 'UMapSelectSlot_C::Select_' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, GameMap) == 0x0002B4, "Member 'UMapSelectSlot_C::GameMap' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, GameName) == 0x0002C0, "Member 'UMapSelectSlot_C::GameName' has a wrong offset!");
static_assert(offsetof(UMapSelectSlot_C, 是否开启黑夜模式) == 0x0002D8, "Member 'UMapSelectSlot_C::是否开启黑夜模式' has a wrong offset!");

}

