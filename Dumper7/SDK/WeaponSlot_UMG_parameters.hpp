#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponSlot_UMG

#include "Basic.hpp"


namespace SDK::Params
{

// Function WeaponSlot_UMG.WeaponSlot_UMG_C.ExecuteUbergraph_WeaponSlot_UMG
// 0x0078 (0x0078 - 0x0000)
struct WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUIWeapon_C>           K2Node_DynamicCast_AsUIWeapon;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCustomWeapon_UMG_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UCustomWeapon_UMG_C*                    CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG) == 0x000008, "Wrong alignment on WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG");
static_assert(sizeof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG) == 0x000078, "Wrong size on WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, EntryPoint) == 0x000000, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, ___int_Array_Index_Variable) == 0x000004, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, ___int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000028, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_Array_Get_Item) == 0x000038, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, K2Node_DynamicCast_AsUIWeapon) == 0x000048, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::K2Node_DynamicCast_AsUIWeapon' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000060, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'WeaponSlot_UMG_C_ExecuteUbergraph_WeaponSlot_UMG::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WeaponSlot_UMG.WeaponSlot_UMG_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WeaponSlot_UMG_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponSlot_UMG_C_PreConstruct) == 0x000001, "Wrong alignment on WeaponSlot_UMG_C_PreConstruct");
static_assert(sizeof(WeaponSlot_UMG_C_PreConstruct) == 0x000001, "Wrong size on WeaponSlot_UMG_C_PreConstruct");
static_assert(offsetof(WeaponSlot_UMG_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WeaponSlot_UMG_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

