#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpringArm_Anim

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CharacterModel_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SpringArm_Anim.SpringArm_Anim_C
// 0x0C40 (0x0F00 - 0x02C0)
class USpringArm_Anim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x02F8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x03E0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x04C8(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0568(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0650(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x0738(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x07D8(0x00A0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0878(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x08C0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0960(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0A00(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0AE8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0BD0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0CB8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0D58(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0DF8(0x00E8)()
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         速度; // 0x0EE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         方向; // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否蹲伏; // 0x0EF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否瞄准; // 0x0EF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否持枪; // 0x0EF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECharacterModel                               CharacterModel;                                    // 0x0EF3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SpringArm_Anim(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpringArm_Anim_AnimGraphNode_BlendListByBool_42FFC6244B648AD5DBA2C2AD1307EE06();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpringArm_Anim_AnimGraphNode_BlendListByBool_68F3A6DD4EFA7FD3E14F92ADE9D11268();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpringArm_Anim_C">();
	}
	static class USpringArm_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpringArm_Anim_C>();
	}
};
static_assert(alignof(USpringArm_Anim_C) == 0x000010, "Wrong alignment on USpringArm_Anim_C");
static_assert(sizeof(USpringArm_Anim_C) == 0x000F00, "Wrong size on USpringArm_Anim_C");
static_assert(offsetof(USpringArm_Anim_C, UberGraphFrame) == 0x0002C0, "Member 'USpringArm_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_Root) == 0x0002C8, "Member 'USpringArm_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_7) == 0x0002F8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_6) == 0x0003E0, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_6) == 0x0004C8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000568, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000650, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_5) == 0x000738, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_4) == 0x0007D8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_Slot) == 0x000878, "Member 'USpringArm_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_3) == 0x0008C0, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_2) == 0x000960, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000A00, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000AE8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000BD0, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool_1) == 0x000CB8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendListByBool) == 0x000D58, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x000DF8, "Member 'USpringArm_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, As_Player_BP) == 0x000EE0, "Member 'USpringArm_Anim_C::As_Player_BP' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, 速度) == 0x000EE8, "Member 'USpringArm_Anim_C::速度' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, 方向) == 0x000EEC, "Member 'USpringArm_Anim_C::方向' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, 是否蹲伏) == 0x000EF0, "Member 'USpringArm_Anim_C::是否蹲伏' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, 是否瞄准) == 0x000EF1, "Member 'USpringArm_Anim_C::是否瞄准' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, 是否持枪) == 0x000EF2, "Member 'USpringArm_Anim_C::是否持枪' has a wrong offset!");
static_assert(offsetof(USpringArm_Anim_C, CharacterModel) == 0x000EF3, "Member 'USpringArm_Anim_C::CharacterModel' has a wrong offset!");

}

