#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapSelect_UMG

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MapSelect_UMG.MapSelect_UMG_C.ExecuteUbergraph_MapSelect_UMG
// 0x00E0 (0x00E0 - 0x0000)
struct MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMainMenu_UMG_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_UMG_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UMainMenu_UMG_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainMenu_UMG_C*                        CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0084(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG) == 0x000008, "Wrong alignment on MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG");
static_assert(sizeof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG) == 0x0000E0, "Wrong size on MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, EntryPoint) == 0x000000, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, ___int_Array_Index_Variable) == 0x000004, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, ___int_Loop_Counter_Variable) == 0x000018, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Array_Get_Item) == 0x000020, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, K2Node_CustomEvent_PlayMode) == 0x00002C, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::K2Node_CustomEvent_PlayMode' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000038, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000048, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, K2Node_DynamicCast_AsUISetting_Interface) == 0x000068, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, K2Node_Event_MyGeometry) == 0x000084, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, K2Node_Event_InDeltaTime) == 0x0000BC, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x0000C0, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_BreakVector2D_X) == 0x0000C8, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_BreakVector2D_Y) == 0x0000CC, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0000D0, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000D8, "Member 'MapSelect_UMG_C_ExecuteUbergraph_MapSelect_UMG::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function MapSelect_UMG.MapSelect_UMG_C.Tick
// 0x003C (0x003C - 0x0000)
struct MapSelect_UMG_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapSelect_UMG_C_Tick) == 0x000004, "Wrong alignment on MapSelect_UMG_C_Tick");
static_assert(sizeof(MapSelect_UMG_C_Tick) == 0x00003C, "Wrong size on MapSelect_UMG_C_Tick");
static_assert(offsetof(MapSelect_UMG_C_Tick, MyGeometry) == 0x000000, "Member 'MapSelect_UMG_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_Tick, InDeltaTime) == 0x000038, "Member 'MapSelect_UMG_C_Tick::InDeltaTime' has a wrong offset!");

// Function MapSelect_UMG.MapSelect_UMG_C.BGVisibility
// 0x0001 (0x0001 - 0x0000)
struct MapSelect_UMG_C_BGVisibility final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapSelect_UMG_C_BGVisibility) == 0x000001, "Wrong alignment on MapSelect_UMG_C_BGVisibility");
static_assert(sizeof(MapSelect_UMG_C_BGVisibility) == 0x000001, "Wrong size on MapSelect_UMG_C_BGVisibility");
static_assert(offsetof(MapSelect_UMG_C_BGVisibility, PlayMode) == 0x000000, "Member 'MapSelect_UMG_C_BGVisibility::PlayMode' has a wrong offset!");

// Function MapSelect_UMG.MapSelect_UMG_C.GetVisibility_0
// 0x0002 (0x0002 - 0x0000)
struct MapSelect_UMG_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapSelect_UMG_C_GetVisibility_0) == 0x000001, "Wrong alignment on MapSelect_UMG_C_GetVisibility_0");
static_assert(sizeof(MapSelect_UMG_C_GetVisibility_0) == 0x000002, "Wrong size on MapSelect_UMG_C_GetVisibility_0");
static_assert(offsetof(MapSelect_UMG_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'MapSelect_UMG_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapSelect_UMG_C_GetVisibility_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000001, "Member 'MapSelect_UMG_C_GetVisibility_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

}

