#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LockComponent.BP_LockComponent_C
// 0x0028 (0x00D8 - 0x00B0)
class UBP_LockComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Locked_;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LockDifficulty;                                    // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ObjectName;                                        // 0x00C0(0x0018)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_LockComponent(int32 EntryPoint);
	void SetHUDInfo(class UUI_LockpickingHUD_C* HUD);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LockComponent_C">();
	}
	static class UBP_LockComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LockComponent_C>();
	}
};
static_assert(alignof(UBP_LockComponent_C) == 0x000008, "Wrong alignment on UBP_LockComponent_C");
static_assert(sizeof(UBP_LockComponent_C) == 0x0000D8, "Wrong size on UBP_LockComponent_C");
static_assert(offsetof(UBP_LockComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_LockComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LockComponent_C, Locked_) == 0x0000B8, "Member 'UBP_LockComponent_C::Locked_' has a wrong offset!");
static_assert(offsetof(UBP_LockComponent_C, LockDifficulty) == 0x0000BC, "Member 'UBP_LockComponent_C::LockDifficulty' has a wrong offset!");
static_assert(offsetof(UBP_LockComponent_C, ObjectName) == 0x0000C0, "Member 'UBP_LockComponent_C::ObjectName' has a wrong offset!");

}

