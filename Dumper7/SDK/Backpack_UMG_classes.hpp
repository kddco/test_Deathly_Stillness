#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Backpack_UMG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Backpack_UMG.Backpack_UMG_C
// 0x00B0 (0x0310 - 0x0260)
class UBackpack_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LootBorder;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_丢弃的范围_C* WB_丢弃的范围; // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBackpack_DragObject_UMG_C*>     Inventory;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         In_Row;                                            // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Column;                                         // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_Details_C*                    BackpackDetailsUMG;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBackpack_DragObject_UMG_C*             ItemDragUMG;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Backpack_Weapon_C*                  WeaponDragUMG;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          主武器插槽装备; // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          副武器插槽装备; // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Backpack_Weapon_C*                  主武器插槽; // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Backpack_Weapon_C*                  副武器插槽; // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRotator_;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Backpack_UMG(int32 EntryPoint);
	void 数据对调接口(int32 Current, int32 Target);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void 添加空的武器插槽(class UWB_Backpack_Weapon_C* WeaponDragUMG_0);
	void 丢弃武器(bool 是否是主武器);
	void 添加武器数据(bool 是否是主武器, class AWeapon_Master_C* weapon);
	void 刷新数据(const struct FInventoryData_Struct& InventoryData, int32 Index_0);
	void 添加空格子(const TArray<struct FInventoryData_Struct>& InventoryData, class UInventorySystem_Component_C* 背包组件, class UBackpack_DragObject_UMG_C* ItemDragUMG_0, class UBackpack_Details_C* BackpackDetailsUMG_0);
	void Construct();
	void 显示背包(EUMGSequencePlayMode PlayMode);
	void 拾取子弹(const struct FInventoryData_Struct& InventoryData);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void 创建UI(class UWidget** 创建的UI);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Backpack_UMG_C">();
	}
	static class UBackpack_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBackpack_UMG_C>();
	}
};
static_assert(alignof(UBackpack_UMG_C) == 0x000008, "Wrong alignment on UBackpack_UMG_C");
static_assert(sizeof(UBackpack_UMG_C) == 0x000310, "Wrong size on UBackpack_UMG_C");
static_assert(offsetof(UBackpack_UMG_C, UberGraphFrame) == 0x000260, "Member 'UBackpack_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, Appear) == 0x000268, "Member 'UBackpack_UMG_C::Appear' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, Image) == 0x000270, "Member 'UBackpack_UMG_C::Image' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, LootBorder) == 0x000278, "Member 'UBackpack_UMG_C::LootBorder' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, Overlay) == 0x000280, "Member 'UBackpack_UMG_C::Overlay' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, Overlay_0) == 0x000288, "Member 'UBackpack_UMG_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, TextBlock_1) == 0x000290, "Member 'UBackpack_UMG_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, TextBlock_2) == 0x000298, "Member 'UBackpack_UMG_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, TextBlock_3) == 0x0002A0, "Member 'UBackpack_UMG_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, UniformGridPanel) == 0x0002A8, "Member 'UBackpack_UMG_C::UniformGridPanel' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, WB_丢弃的范围) == 0x0002B0, "Member 'UBackpack_UMG_C::WB_丢弃的范围' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, Inventory) == 0x0002B8, "Member 'UBackpack_UMG_C::Inventory' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, In_Row) == 0x0002C8, "Member 'UBackpack_UMG_C::In_Row' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, In_Column) == 0x0002CC, "Member 'UBackpack_UMG_C::In_Column' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, BackpackDetailsUMG) == 0x0002D0, "Member 'UBackpack_UMG_C::BackpackDetailsUMG' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, As_Player_BP) == 0x0002D8, "Member 'UBackpack_UMG_C::As_Player_BP' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, ItemDragUMG) == 0x0002E0, "Member 'UBackpack_UMG_C::ItemDragUMG' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, WeaponDragUMG) == 0x0002E8, "Member 'UBackpack_UMG_C::WeaponDragUMG' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, 主武器插槽装备) == 0x0002F0, "Member 'UBackpack_UMG_C::主武器插槽装备' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, 副武器插槽装备) == 0x0002F1, "Member 'UBackpack_UMG_C::副武器插槽装备' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, 主武器插槽) == 0x0002F8, "Member 'UBackpack_UMG_C::主武器插槽' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, 副武器插槽) == 0x000300, "Member 'UBackpack_UMG_C::副武器插槽' has a wrong offset!");
static_assert(offsetof(UBackpack_UMG_C, CanRotator_) == 0x000308, "Member 'UBackpack_UMG_C::CanRotator_' has a wrong offset!");

}

