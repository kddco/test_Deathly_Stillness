#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PickUpMaster_BP

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "InventoryData_Struct_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PickUpMaster_BP.PickUpMaster_BP_C.ExecuteUbergraph_PickUpMaster_BP
// 0x0170 (0x0170 - 0x0000)
struct PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              ___byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ___byte_Variable_1;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Player;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_1;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           K2Node_DynamicCast_AsPlayer_BP_2;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPickUpKeyboardTips_C*                  K2Node_DynamicCast_AsPick_Up_Keyboard_Tips;        // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP");
static_assert(sizeof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP) == 0x000170, "Wrong size on PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, EntryPoint) == 0x000000, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, ___bool_Variable) == 0x000008, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::___bool_Variable' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, ___byte_Variable) == 0x000009, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::___byte_Variable' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, ___byte_Variable_1) == 0x00000A, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::___byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_Event_Player) == 0x000010, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_AsPlayer_BP) == 0x0000C8, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_AsPlayer_BP' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000D8, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_K2_SetTimer_ReturnValue) == 0x0000E0, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000E8, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F0, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F8, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000100, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_AsPlayer_BP_1) == 0x000108, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_AsPlayer_BP_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_GetPlayerPawn_ReturnValue) == 0x000118, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_AsPlayer_BP_2) == 0x000120, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_AsPlayer_BP_2' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00012C, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_BreakVector_X) == 0x000138, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_BreakVector_Y) == 0x00013C, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_BreakVector_Z) == 0x000140, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000144, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000148, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, CallFunc_MakeVector_ReturnValue) == 0x000150, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_AsPick_Up_Keyboard_Tips) == 0x000160, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_AsPick_Up_Keyboard_Tips' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP, K2Node_Select_Default) == 0x000169, "Member 'PickUpMaster_BP_C_ExecuteUbergraph_PickUpMaster_BP::K2Node_Select_Default' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PickUpMaster_BP_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.PlayerInteration
// 0x0008 (0x0008 - 0x0000)
struct PickUpMaster_BP_C_PlayerInteration final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickUpMaster_BP_C_PlayerInteration) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_PlayerInteration");
static_assert(sizeof(PickUpMaster_BP_C_PlayerInteration) == 0x000008, "Wrong size on PickUpMaster_BP_C_PlayerInteration");
static_assert(offsetof(PickUpMaster_BP_C_PlayerInteration, Player) == 0x000000, "Member 'PickUpMaster_BP_C_PlayerInteration::Player' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct PickUpMaster_BP_C_UserConstructionScript final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PickUpMaster_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on PickUpMaster_BP_C_UserConstructionScript");
static_assert(sizeof(PickUpMaster_BP_C_UserConstructionScript) == 0x000020, "Wrong size on PickUpMaster_BP_C_UserConstructionScript");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000000, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000004, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000008, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x00000C, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000010, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000014, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'PickUpMaster_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.初始化物品
// 0x00B8 (0x00B8 - 0x0000)
struct PickUpMaster_BP_C_初始化物品 final
{
public:
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryData_Struct                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PickUpMaster_BP_C_初始化物品) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_初始化物品");
static_assert(sizeof(PickUpMaster_BP_C_初始化物品) == 0x0000B8, "Wrong size on PickUpMaster_BP_C_初始化物品");
static_assert(offsetof(PickUpMaster_BP_C_初始化物品, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000000, "Member 'PickUpMaster_BP_C_初始化物品::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_初始化物品, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'PickUpMaster_BP_C_初始化物品::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_初始化物品, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'PickUpMaster_BP_C_初始化物品::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_初始化物品, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'PickUpMaster_BP_C_初始化物品::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function PickUpMaster_BP.PickUpMaster_BP_C.高亮开启和关闭
// 0x0060 (0x0060 - 0x0000)
struct PickUpMaster_BP_C_高亮开启和关闭 final
{
public:
	bool                                          模型是否高亮; // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Circle;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              keyboard;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_As____;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickUpKeyboardTips_C*                  K2Node_DynamicCast_AsPick_Up_Keyboard_Tips;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PickUpMaster_BP_C_高亮开启和关闭) == 0x000008, "Wrong alignment on PickUpMaster_BP_C_高亮开启和关闭");
static_assert(sizeof(PickUpMaster_BP_C_高亮开启和关闭) == 0x000060, "Wrong size on PickUpMaster_BP_C_高亮开启和关闭");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, 模型是否高亮) == 0x000000, "Member 'PickUpMaster_BP_C_高亮开启和关闭::模型是否高亮' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, Circle) == 0x000001, "Member 'PickUpMaster_BP_C_高亮开启和关闭::Circle' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, keyboard) == 0x000002, "Member 'PickUpMaster_BP_C_高亮开启和关闭::keyboard' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, ___int_Array_Index_Variable) == 0x000004, "Member 'PickUpMaster_BP_C_高亮开启和关闭::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_GetChildrenComponents_Children) == 0x000008, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_Array_Get_Item) == 0x000018, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, K2Node_DynamicCast_As____) == 0x000028, "Member 'PickUpMaster_BP_C_高亮开启和关闭::K2Node_DynamicCast_As____' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PickUpMaster_BP_C_高亮开启和关闭::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000038, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, K2Node_DynamicCast_AsPick_Up_Keyboard_Tips) == 0x000040, "Member 'PickUpMaster_BP_C_高亮开启和关闭::K2Node_DynamicCast_AsPick_Up_Keyboard_Tips' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'PickUpMaster_BP_C_高亮开启和关闭::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, ___int_Loop_Counter_Variable) == 0x00004C, "Member 'PickUpMaster_BP_C_高亮开启和关闭::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PickUpMaster_BP_C_高亮开启和关闭, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PickUpMaster_BP_C_高亮开启和关闭::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

