#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: P320_Anim

#include "Basic.hpp"

#include "P320_Anim_classes.hpp"
#include "P320_Anim_parameters.hpp"


namespace SDK
{

// Function P320_Anim.P320_Anim_C.ExecuteUbergraph_P320_Anim
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UP320_Anim_C::ExecuteUbergraph_P320_Anim(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P320_Anim_C", "ExecuteUbergraph_P320_Anim");

	Params::P320_Anim_C_ExecuteUbergraph_P320_Anim Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function P320_Anim.P320_Anim_C.EvaluateGraphExposedInputs_ExecuteUbergraph_P320_Anim_AnimGraphNode_TransitionResult_8E749F5C42B5EFC1ABF33391EFBE2D95
// (BlueprintEvent)

void UP320_Anim_C::EvaluateGraphExposedInputs_ExecuteUbergraph_P320_Anim_AnimGraphNode_TransitionResult_8E749F5C42B5EFC1ABF33391EFBE2D95()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P320_Anim_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_P320_Anim_AnimGraphNode_TransitionResult_8E749F5C42B5EFC1ABF33391EFBE2D95");

	UObject::ProcessEvent(Func, nullptr);
}


// Function P320_Anim.P320_Anim_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UP320_Anim_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("P320_Anim_C", "AnimGraph");

	Params::P320_Anim_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

