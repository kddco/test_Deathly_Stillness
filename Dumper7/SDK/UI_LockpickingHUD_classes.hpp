#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LockpickingHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_LockpickingHUD.UI_LockpickingHUD_C
// 0x0080 (0x02E0 - 0x0260)
class UUI_LockpickingHUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Notification;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             NotificationText;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PickingInfoBox;                                    // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_136;                                     // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   LockTypeText;                                      // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ObjectNameText;                                    // 0x02A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         LockDifficulty;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked_;                                         // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InfoBoxVisible_;                                   // 0x02BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LockPickingInfoVisible_;                           // 0x02BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF[0x1];                                      // 0x02BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LockPickingComponent_C*             LockPickingComponent;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LockPicks;                                         // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_LockpickingHUD(int32 EntryPoint);
	void Construct();
	ESlateVisibility SetLockPickBoxVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_LockpickingHUD_C">();
	}
	static class UUI_LockpickingHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_LockpickingHUD_C>();
	}
};
static_assert(alignof(UUI_LockpickingHUD_C) == 0x000008, "Wrong alignment on UUI_LockpickingHUD_C");
static_assert(sizeof(UUI_LockpickingHUD_C) == 0x0002E0, "Wrong size on UUI_LockpickingHUD_C");
static_assert(offsetof(UUI_LockpickingHUD_C, UberGraphFrame) == 0x000260, "Member 'UUI_LockpickingHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, Notification) == 0x000268, "Member 'UUI_LockpickingHUD_C::Notification' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, NotificationText) == 0x000270, "Member 'UUI_LockpickingHUD_C::NotificationText' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, PickingInfoBox) == 0x000278, "Member 'UUI_LockpickingHUD_C::PickingInfoBox' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, TextBlock_136) == 0x000280, "Member 'UUI_LockpickingHUD_C::TextBlock_136' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, LockTypeText) == 0x000288, "Member 'UUI_LockpickingHUD_C::LockTypeText' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, ObjectNameText) == 0x0002A0, "Member 'UUI_LockpickingHUD_C::ObjectNameText' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, LockDifficulty) == 0x0002B8, "Member 'UUI_LockpickingHUD_C::LockDifficulty' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, IsLocked_) == 0x0002BC, "Member 'UUI_LockpickingHUD_C::IsLocked_' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, InfoBoxVisible_) == 0x0002BD, "Member 'UUI_LockpickingHUD_C::InfoBoxVisible_' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, LockPickingInfoVisible_) == 0x0002BE, "Member 'UUI_LockpickingHUD_C::LockPickingInfoVisible_' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, LockPickingComponent) == 0x0002C0, "Member 'UUI_LockpickingHUD_C::LockPickingComponent' has a wrong offset!");
static_assert(offsetof(UUI_LockpickingHUD_C, LockPicks) == 0x0002C8, "Member 'UUI_LockpickingHUD_C::LockPicks' has a wrong offset!");

}

