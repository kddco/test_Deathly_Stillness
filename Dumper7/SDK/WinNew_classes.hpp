#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WinNew.WinNew_C
// 0x00C8 (0x0328 - 0x0260)
class UWinNew_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_4;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_7;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_235;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             命中率; // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             总分; // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             时间; // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             爆头率; // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             爆头量; // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomButton_UMG2_C*                   自定义按钮2; // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomButton_UMG2_C*                   自定义按钮2_1; // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   小时;                                            // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   分钟; // 0x02F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   秒; // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WinNew(int32 EntryPoint);
	void quit();
	void ReStart();
	void Construct();
	ESlateVisibility GetVisibility_0();
	void 通关时间计算(int32 Time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WinNew_C">();
	}
	static class UWinNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWinNew_C>();
	}
};
static_assert(alignof(UWinNew_C) == 0x000008, "Wrong alignment on UWinNew_C");
static_assert(sizeof(UWinNew_C) == 0x000328, "Wrong size on UWinNew_C");
static_assert(offsetof(UWinNew_C, UberGraphFrame) == 0x000260, "Member 'UWinNew_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWinNew_C, Appear) == 0x000268, "Member 'UWinNew_C::Appear' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock) == 0x000270, "Member 'UWinNew_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock_1) == 0x000278, "Member 'UWinNew_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock_3) == 0x000280, "Member 'UWinNew_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock_4) == 0x000288, "Member 'UWinNew_C::TextBlock_4' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock_7) == 0x000290, "Member 'UWinNew_C::TextBlock_7' has a wrong offset!");
static_assert(offsetof(UWinNew_C, TextBlock_235) == 0x000298, "Member 'UWinNew_C::TextBlock_235' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 命中率) == 0x0002A0, "Member 'UWinNew_C::命中率' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 总分) == 0x0002A8, "Member 'UWinNew_C::总分' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 时间) == 0x0002B0, "Member 'UWinNew_C::时间' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 爆头率) == 0x0002B8, "Member 'UWinNew_C::爆头率' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 爆头量) == 0x0002C0, "Member 'UWinNew_C::爆头量' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 自定义按钮2) == 0x0002C8, "Member 'UWinNew_C::自定义按钮2' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 自定义按钮2_1) == 0x0002D0, "Member 'UWinNew_C::自定义按钮2_1' has a wrong offset!");
static_assert(offsetof(UWinNew_C, As_Player_BP) == 0x0002D8, "Member 'UWinNew_C::As_Player_BP' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 小时) == 0x0002E0, "Member 'UWinNew_C::小时' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 分钟) == 0x0002F8, "Member 'UWinNew_C::分钟' has a wrong offset!");
static_assert(offsetof(UWinNew_C, 秒) == 0x000310, "Member 'UWinNew_C::秒' has a wrong offset!");

}

