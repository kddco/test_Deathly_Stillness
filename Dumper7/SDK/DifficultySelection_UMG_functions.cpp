#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySelection_UMG

#include "Basic.hpp"

#include "DifficultySelection_UMG_classes.hpp"
#include "DifficultySelection_UMG_parameters.hpp"


namespace SDK
{

// Function DifficultySelection_UMG.DifficultySelection_UMG_C.ExecuteUbergraph_DifficultySelection_UMG
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDifficultySelection_UMG_C::ExecuteUbergraph_DifficultySelection_UMG(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySelection_UMG_C", "ExecuteUbergraph_DifficultySelection_UMG");

	Params::DifficultySelection_UMG_C_ExecuteUbergraph_DifficultySelection_UMG Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DifficultySelection_UMG.DifficultySelection_UMG_C.关闭难度描述
// (BlueprintCallable, BlueprintEvent)

void UDifficultySelection_UMG_C::关闭难度描述()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySelection_UMG_C", "关闭难度描述");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DifficultySelection_UMG.DifficultySelection_UMG_C.设置难度描述
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UDifficultySelection_UMG_C::设置难度描述(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySelection_UMG_C", "设置难度描述");

	Params::DifficultySelection_UMG_C_设置难度描述 Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DifficultySelection_UMG.DifficultySelection_UMG_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDifficultySelection_UMG_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySelection_UMG_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DifficultySelection_UMG.DifficultySelection_UMG_C.GetVisibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UDifficultySelection_UMG_C::GetVisibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySelection_UMG_C", "GetVisibility_0");

	Params::DifficultySelection_UMG_C_GetVisibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

