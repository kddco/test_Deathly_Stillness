#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 选择自定义部位文字

#include "Basic.hpp"

#include "选择自定义部位文字_classes.hpp"
#include "选择自定义部位文字_parameters.hpp"


namespace SDK
{

// Function 选择自定义部位文字.选择自定义部位文字_C.ExecuteUbergraph_选择自定义部位文字
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void U选择自定义部位文字_C::ExecuteUbergraph_选择自定义部位文字(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "ExecuteUbergraph_选择自定义部位文字");

	Params::选择自定义部位文字_C_ExecuteUbergraph_选择自定义部位文字 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.SettingDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      标题(BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      详情(BlueprintVisible, BlueprintReadOnly, Parm)

void U选择自定义部位文字_C::SettingDetails(const class FText& 标题, const class FText& 详情)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "SettingDetails");

	Params::选择自定义部位文字_C_SettingDetails Parms{};

	Parms.标题 = std::move(标题);
	Parms.详情 = std::move(详情);

	UObject::ProcessEvent(Func, &Parms);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void U选择自定义部位文字_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.initializeSetting
// (Public, BlueprintCallable, BlueprintEvent)

void U选择自定义部位文字_C::initializeSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "initializeSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void U选择自定义部位文字_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "PreConstruct");

	Params::选择自定义部位文字_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.BndEvt__选择自定义部位文字_Button_73_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void U选择自定义部位文字_C::BndEvt__选择自定义部位文字_Button_73_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "BndEvt__选择自定义部位文字_Button_73_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.CustomMappingCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionKeyMapping&    InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FInputAxisKeyMapping&      InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void U选择自定义部位文字_C::CustomMappingCheck(const struct FInputActionKeyMapping& InputAction, const struct FInputAxisKeyMapping& InputAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "CustomMappingCheck");

	Params::选择自定义部位文字_C_CustomMappingCheck Parms{};

	Parms.InputAction = std::move(InputAction);
	Parms.InputAxis = std::move(InputAxis);

	UObject::ProcessEvent(Func, &Parms);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void U选择自定义部位文字_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void U选择自定义部位文字_C::BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void U选择自定义部位文字_C::BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "BndEvt__选择自定义部位_Button_73_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.选中状态
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void U选择自定义部位文字_C::选中状态()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "选中状态");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.刷新部位名字
// (Public, BlueprintCallable, BlueprintEvent)

void U选择自定义部位文字_C::刷新部位名字()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "刷新部位名字");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 选择自定义部位文字.选择自定义部位文字_C.单独视角设置
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool U选择自定义部位文字_C::单独视角设置(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("选择自定义部位文字_C", "单独视角设置");

	Params::选择自定义部位文字_C_单独视角设置 Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

