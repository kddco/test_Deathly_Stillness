#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Backpack_Weapon

#include "Basic.hpp"

#include "WeaponType_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Backpack_Weapon.WB_Backpack_Weapon_C
// 0x0058 (0x02B8 - 0x0260)
class UWB_Backpack_Weapon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_75;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_245;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          是否是主武器; // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon_Master_C*                       weapon;                                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   In_Text;                                           // 0x0298(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UWB_Backpack_Weapon_C*                  WeaponDragUMG;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Backpack_Weapon(int32 EntryPoint);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void 刷新武器数据(class AWeapon_Master_C* weapon_0);
	void OnDragCancelled(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Backpack_Weapon_C">();
	}
	static class UWB_Backpack_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Backpack_Weapon_C>();
	}
};
static_assert(alignof(UWB_Backpack_Weapon_C) == 0x000008, "Wrong alignment on UWB_Backpack_Weapon_C");
static_assert(sizeof(UWB_Backpack_Weapon_C) == 0x0002B8, "Wrong size on UWB_Backpack_Weapon_C");
static_assert(offsetof(UWB_Backpack_Weapon_C, UberGraphFrame) == 0x000260, "Member 'UWB_Backpack_Weapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, NewAnimation) == 0x000268, "Member 'UWB_Backpack_Weapon_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, Border) == 0x000270, "Member 'UWB_Backpack_Weapon_C::Border' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, Image_75) == 0x000278, "Member 'UWB_Backpack_Weapon_C::Image_75' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, TextBlock_245) == 0x000280, "Member 'UWB_Backpack_Weapon_C::TextBlock_245' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, 是否是主武器) == 0x000288, "Member 'UWB_Backpack_Weapon_C::是否是主武器' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, weapon) == 0x000290, "Member 'UWB_Backpack_Weapon_C::weapon' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, In_Text) == 0x000298, "Member 'UWB_Backpack_Weapon_C::In_Text' has a wrong offset!");
static_assert(offsetof(UWB_Backpack_Weapon_C, WeaponDragUMG) == 0x0002B0, "Member 'UWB_Backpack_Weapon_C::WeaponDragUMG' has a wrong offset!");

}

