#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySelection_UMG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DifficultySelection_UMG.DifficultySelection_UMG_C
// 0x0048 (0x02A8 - 0x0260)
class UDifficultySelection_UMG_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDifficultySelectionSlot_UMG_C*         easy;                                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficultySelectionSlot_UMG_C*         nightmare;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficultySelectionSlot_UMG_C*         Normal;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficultySelectionSlot_UMG_C*         Random;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficultySelectionSlot_UMG_C*         skillful;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_1;                                     // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             设置详情; // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DifficultySelection_UMG(int32 EntryPoint);
	void 关闭难度描述();
	void 设置难度描述(const class FText& InText);
	void Construct();
	ESlateVisibility GetVisibility_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DifficultySelection_UMG_C">();
	}
	static class UDifficultySelection_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDifficultySelection_UMG_C>();
	}
};
static_assert(alignof(UDifficultySelection_UMG_C) == 0x000008, "Wrong alignment on UDifficultySelection_UMG_C");
static_assert(sizeof(UDifficultySelection_UMG_C) == 0x0002A8, "Wrong size on UDifficultySelection_UMG_C");
static_assert(offsetof(UDifficultySelection_UMG_C, UberGraphFrame) == 0x000260, "Member 'UDifficultySelection_UMG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, Appear) == 0x000268, "Member 'UDifficultySelection_UMG_C::Appear' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, easy) == 0x000270, "Member 'UDifficultySelection_UMG_C::easy' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, nightmare) == 0x000278, "Member 'UDifficultySelection_UMG_C::nightmare' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, Normal) == 0x000280, "Member 'UDifficultySelection_UMG_C::Normal' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, Random) == 0x000288, "Member 'UDifficultySelection_UMG_C::Random' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, skillful) == 0x000290, "Member 'UDifficultySelection_UMG_C::skillful' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, VerticalBox_1) == 0x000298, "Member 'UDifficultySelection_UMG_C::VerticalBox_1' has a wrong offset!");
static_assert(offsetof(UDifficultySelection_UMG_C, 设置详情) == 0x0002A0, "Member 'UDifficultySelection_UMG_C::设置详情' has a wrong offset!");

}

