#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_SpawnActor

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_SpawnActor.AN_SpawnActor_C
// 0x0020 (0x0058 - 0x0038)
class UAN_SpawnActor_C final : public UAnimNotify
{
public:
	class UClass*                                 Actor;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Animation;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SimulatePhysics;                                   // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_SpawnActor_C">();
	}
	static class UAN_SpawnActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_SpawnActor_C>();
	}
};
static_assert(alignof(UAN_SpawnActor_C) == 0x000008, "Wrong alignment on UAN_SpawnActor_C");
static_assert(sizeof(UAN_SpawnActor_C) == 0x000058, "Wrong size on UAN_SpawnActor_C");
static_assert(offsetof(UAN_SpawnActor_C, Actor) == 0x000038, "Member 'UAN_SpawnActor_C::Actor' has a wrong offset!");
static_assert(offsetof(UAN_SpawnActor_C, Animation) == 0x000040, "Member 'UAN_SpawnActor_C::Animation' has a wrong offset!");
static_assert(offsetof(UAN_SpawnActor_C, Socket) == 0x000048, "Member 'UAN_SpawnActor_C::Socket' has a wrong offset!");
static_assert(offsetof(UAN_SpawnActor_C, SimulatePhysics) == 0x000050, "Member 'UAN_SpawnActor_C::SimulatePhysics' has a wrong offset!");
static_assert(offsetof(UAN_SpawnActor_C, Rate) == 0x000054, "Member 'UAN_SpawnActor_C::Rate' has a wrong offset!");

}

