#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: End1

#include "Basic.hpp"


namespace SDK::Params
{

// Function End1.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x0020 (0x0020 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADeadPlayer_BP_C*                       K2Node_CustomEvent_DeadPlayer_BP;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADeadPlayer_BP_C*                       K2Node_CustomEvent_DeadPlayer_BP_2;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADeadPlayer_BP_C*                       K2Node_CustomEvent_DeadPlayer_BP_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000020, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_DeadPlayer_BP) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_DeadPlayer_BP' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_DeadPlayer_BP_2) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_DeadPlayer_BP_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_DeadPlayer_BP_1) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_DeadPlayer_BP_1' has a wrong offset!");

// Function End1.SequenceDirector_C.DeadPlayer_BP_Event_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_DeadPlayer_BP_Event_2 final
{
public:
	class ADeadPlayer_BP_C*                       DeadPlayer_BP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_DeadPlayer_BP_Event_2) == 0x000008, "Wrong alignment on SequenceDirector_C_DeadPlayer_BP_Event_2");
static_assert(sizeof(SequenceDirector_C_DeadPlayer_BP_Event_2) == 0x000008, "Wrong size on SequenceDirector_C_DeadPlayer_BP_Event_2");
static_assert(offsetof(SequenceDirector_C_DeadPlayer_BP_Event_2, DeadPlayer_BP) == 0x000000, "Member 'SequenceDirector_C_DeadPlayer_BP_Event_2::DeadPlayer_BP' has a wrong offset!");

// Function End1.SequenceDirector_C.DeadPlayer_BP_Event_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_DeadPlayer_BP_Event_1 final
{
public:
	class ADeadPlayer_BP_C*                       DeadPlayer_BP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_DeadPlayer_BP_Event_1) == 0x000008, "Wrong alignment on SequenceDirector_C_DeadPlayer_BP_Event_1");
static_assert(sizeof(SequenceDirector_C_DeadPlayer_BP_Event_1) == 0x000008, "Wrong size on SequenceDirector_C_DeadPlayer_BP_Event_1");
static_assert(offsetof(SequenceDirector_C_DeadPlayer_BP_Event_1, DeadPlayer_BP) == 0x000000, "Member 'SequenceDirector_C_DeadPlayer_BP_Event_1::DeadPlayer_BP' has a wrong offset!");

// Function End1.SequenceDirector_C.DeadPlayer_BP_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_DeadPlayer_BP_Event_0 final
{
public:
	class ADeadPlayer_BP_C*                       DeadPlayer_BP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_DeadPlayer_BP_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_DeadPlayer_BP_Event_0");
static_assert(sizeof(SequenceDirector_C_DeadPlayer_BP_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_DeadPlayer_BP_Event_0");
static_assert(offsetof(SequenceDirector_C_DeadPlayer_BP_Event_0, DeadPlayer_BP) == 0x000000, "Member 'SequenceDirector_C_DeadPlayer_BP_Event_0::DeadPlayer_BP' has a wrong offset!");

// Function End1.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class ADeadPlayer_BP_C*                       DeadPlayer_BP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, DeadPlayer_BP) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::DeadPlayer_BP' has a wrong offset!");

// Function End1.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class ADeadPlayer_BP_C*                       DeadPlayer_BP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, DeadPlayer_BP) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::DeadPlayer_BP' has a wrong offset!");

}

