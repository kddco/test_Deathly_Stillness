#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Master

#include "Basic.hpp"

#include "Weapon_Master_classes.hpp"
#include "Weapon_Master_parameters.hpp"


namespace SDK
{

// Function Weapon_Master.Weapon_Master_C.ExecuteUbergraph_Weapon_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::ExecuteUbergraph_Weapon_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "ExecuteUbergraph_Weapon_Master");

	Params::Weapon_Master_C_ExecuteUbergraph_Weapon_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWeapon_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.后坐力抖动
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::后坐力抖动()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "后坐力抖动");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Recoil
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::Recoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Recoil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.空挂释放
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::空挂释放()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "空挂释放");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.FPP拔下弹夹
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::FPP拔下弹夹(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "FPP拔下弹夹");

	Params::Weapon_Master_C_FPP拔下弹夹 Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.弹夹自然掉落
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::弹夹自然掉落()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "弹夹自然掉落");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.换弹被打断_Event
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::换弹被打断_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "换弹被打断_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.拔下弹夹
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::拔下弹夹(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "拔下弹夹");

	Params::Weapon_Master_C_拔下弹夹 Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.生成新弹夹
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::生成新弹夹(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "生成新弹夹");

	Params::Weapon_Master_C_生成新弹夹 Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.换弹结束
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::换弹结束()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "换弹结束");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.武器子弹空仓动画
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::武器子弹空仓动画()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "武器子弹空仓动画");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.播放射击
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::播放射击()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "播放射击");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.SpawnCase
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::SpawnCase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "SpawnCase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.StopFire
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::StopFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "StopFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Shooting
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::Shooting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Shooting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Fire
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AWeapon_Master_C::Fire(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Fire");

	Params::Weapon_Master_C_Fire Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.后坐力状态
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    无后坐力_0(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_Master_C::后坐力状态(bool 无后坐力_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "后坐力状态");

	Params::Weapon_Master_C_后坐力状态 Parms{};

	Parms.无后坐力_0 = 无后坐力_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.关闭无限子弹
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::关闭无限子弹()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "关闭无限子弹");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.开启无限子弹
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::开启无限子弹()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "开启无限子弹");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.枪口结束变红
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::枪口结束变红()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "枪口结束变红");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.枪口开始变红
// (BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::枪口开始变红()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "枪口开始变红");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.PlayerInteration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::PlayerInteration(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "PlayerInteration");

	Params::Weapon_Master_C_PlayerInteration Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::Weapon_Master_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AWeapon_Master_C::BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Weapon_Master_C_BndEvt__PickUpMaster_BP_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.RenderDeepClose
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::RenderDeepClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "RenderDeepClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.RenderDeepOpen
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::RenderDeepOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "RenderDeepOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.是否是空仓状态
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    空仓换弹(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_Master_C::是否是空仓状态(bool 空仓换弹)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "是否是空仓状态");

	Params::Weapon_Master_C_是否是空仓状态 Parms{};

	Parms.空仓换弹 = 空仓换弹;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.CheckMagazine
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::CheckMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "CheckMagazine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.CheckChamber
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::CheckChamber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "CheckChamber");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.停止蒙太奇
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::停止蒙太奇()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "停止蒙太奇");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.BreakInteration
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::BreakInteration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "BreakInteration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void AWeapon_Master_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void AWeapon_Master_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.时间轴_0__UpdateFunc
// (BlueprintEvent)

void AWeapon_Master_C::时间轴_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "时间轴_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.时间轴_0__FinishedFunc
// (BlueprintEvent)

void AWeapon_Master_C::时间轴_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "时间轴_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AWeapon_Master_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AWeapon_Master_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.时间轴_1__UpdateFunc
// (BlueprintEvent)

void AWeapon_Master_C::时间轴_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "时间轴_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.时间轴_1__FinishedFunc
// (BlueprintEvent)

void AWeapon_Master_C::时间轴_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "时间轴_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.射击位置计算
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        ReturnValue1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FVector AWeapon_Master_C::射击位置计算(struct FRotator* ReturnValue1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "射击位置计算");

	Params::Weapon_Master_C_射击位置计算 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnValue1 != nullptr)
		*ReturnValue1 = std::move(Parms.ReturnValue1);

	return Parms.ReturnValue;
}


// Function Weapon_Master.Weapon_Master_C.当前子弹数量更改
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::当前子弹数量更改()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "当前子弹数量更改");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.背包子弹数量更改
// (Public, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::背包子弹数量更改()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "背包子弹数量更改");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.剩余子弹数量计算
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   背包中的子弹(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::剩余子弹数量计算(int32 背包中的子弹)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "剩余子弹数量计算");

	Params::Weapon_Master_C_剩余子弹数量计算 Parms{};

	Parms.背包中的子弹 = 背包中的子弹;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.设置玩家背包剩余子弹数量
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   剩余背包子弹(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::设置玩家背包剩余子弹数量(int32 剩余背包子弹)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "设置玩家背包剩余子弹数量");

	Params::Weapon_Master_C_设置玩家背包剩余子弹数量 Parms{};

	Parms.剩余背包子弹 = 剩余背包子弹;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.高亮开启和关闭
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    模型是否高亮(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESlateVisibility                        Circle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        keyboard                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::高亮开启和关闭(bool 模型是否高亮, ESlateVisibility Circle, ESlateVisibility keyboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "高亮开启和关闭");

	Params::Weapon_Master_C_高亮开启和关闭 Parms{};

	Parms.模型是否高亮 = 模型是否高亮;
	Parms.Circle = Circle;
	Parms.keyboard = keyboard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_Master.Weapon_Master_C.初始化物品
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWeapon_Master_C::初始化物品()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "初始化物品");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_Master.Weapon_Master_C.设置背包中的剩余子弹
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   计算的子弹规格(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_Master_C::设置背包中的剩余子弹(int32 计算的子弹规格)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_Master_C", "设置背包中的剩余子弹");

	Params::Weapon_Master_C_设置背包中的剩余子弹 Parms{};

	Parms.计算的子弹规格 = 计算的子弹规格;

	UObject::ProcessEvent(Func, &Parms);
}

}

