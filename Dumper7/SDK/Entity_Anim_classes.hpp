#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Entity_Anim.Entity_Anim_C
// 0x0FC0 (0x1280 - 0x02C0)
class UEntity_Anim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x02F8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0398(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0418(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0500(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0530(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x05E0(0x0158)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0738(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x07B8(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0858(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0880(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08A8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x08F0(0x00C0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x09B0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0AB8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0AD8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0AF8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0C00(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0D08(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0E10(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0F18(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1020(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1178(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x11A0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x11C8(0x00A0)()
	float                                         Speed;                                             // 0x1268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否攻击; // 0x126C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Crouch_;                                           // 0x126D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126E[0x2];                                     // 0x126E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         追逐速度;                                      // 0x1270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Entity_Anim(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_Anim_AnimGraphNode_BlendListByBool_2EFF006A47A63720EAD32FB2FB8061E9();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Entity_Anim_C">();
	}
	static class UEntity_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEntity_Anim_C>();
	}
};
static_assert(alignof(UEntity_Anim_C) == 0x000010, "Wrong alignment on UEntity_Anim_C");
static_assert(sizeof(UEntity_Anim_C) == 0x001280, "Wrong size on UEntity_Anim_C");
static_assert(offsetof(UEntity_Anim_C, UberGraphFrame) == 0x0002C0, "Member 'UEntity_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UEntity_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_BlendListByBool_2) == 0x0002F8, "Member 'UEntity_Anim_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000398, "Member 'UEntity_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x000418, "Member 'UEntity_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_StateResult) == 0x000500, "Member 'UEntity_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_StateMachine) == 0x000530, "Member 'UEntity_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_SaveCachedPose_1) == 0x0005E0, "Member 'UEntity_Anim_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_SequencePlayer) == 0x000738, "Member 'UEntity_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_BlendListByBool_1) == 0x0007B8, "Member 'UEntity_Anim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_UseCachedPose_3) == 0x000858, "Member 'UEntity_Anim_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_UseCachedPose_2) == 0x000880, "Member 'UEntity_Anim_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_Slot) == 0x0008A8, "Member 'UEntity_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_LayeredBoneBlend) == 0x0008F0, "Member 'UEntity_Anim_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone_5) == 0x0009B0, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_LocalToComponentSpace) == 0x000AB8, "Member 'UEntity_Anim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ComponentToLocalSpace) == 0x000AD8, "Member 'UEntity_Anim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone_4) == 0x000AF8, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone_3) == 0x000C00, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone_2) == 0x000D08, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone_1) == 0x000E10, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_ModifyBone) == 0x000F18, "Member 'UEntity_Anim_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_SaveCachedPose) == 0x001020, "Member 'UEntity_Anim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_UseCachedPose_1) == 0x001178, "Member 'UEntity_Anim_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_UseCachedPose) == 0x0011A0, "Member 'UEntity_Anim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, AnimGraphNode_BlendListByBool) == 0x0011C8, "Member 'UEntity_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, Speed) == 0x001268, "Member 'UEntity_Anim_C::Speed' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, 是否攻击) == 0x00126C, "Member 'UEntity_Anim_C::是否攻击' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, Crouch_) == 0x00126D, "Member 'UEntity_Anim_C::Crouch_' has a wrong offset!");
static_assert(offsetof(UEntity_Anim_C, 追逐速度) == 0x001270, "Member 'UEntity_Anim_C::追逐速度' has a wrong offset!");

}

