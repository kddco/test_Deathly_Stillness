#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Subtitles_UMG

#include "Basic.hpp"


namespace SDK::Params
{

// Function Subtitles_UMG.Subtitles_UMG_C.ExecuteUbergraph_Subtitles_UMG
// 0x0068 (0x0068 - 0x0000)
struct Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0038(0x0018)()
	class USoundBase*                             CallFunc_Array_Get_Item_2;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc______Output_Get;                          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG) == 0x000008, "Wrong alignment on Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG");
static_assert(sizeof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG) == 0x000068, "Wrong size on Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, EntryPoint) == 0x000000, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, ___int_Variable) == 0x000004, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::___int_Variable' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_Array_Get_Item) == 0x000020, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_Array_Get_Item_2) == 0x000050, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc______Output_Get) == 0x000058, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc______Output_Get' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Subtitles_UMG_C_ExecuteUbergraph_Subtitles_UMG::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Subtitles_UMG.Subtitles_UMG_C.剧情字幕
// 0x0058 (0x0058 - 0x0000)
struct Subtitles_UMG_C_剧情字幕 final
{
public:
	class USoundBase*                             Sound_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   谁说话_0;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InText;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         几段音频; // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Output_Get;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Subtitles_UMG_C_剧情字幕) == 0x000008, "Wrong alignment on Subtitles_UMG_C_剧情字幕");
static_assert(sizeof(Subtitles_UMG_C_剧情字幕) == 0x000058, "Wrong size on Subtitles_UMG_C_剧情字幕");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, Sound_0) == 0x000000, "Member 'Subtitles_UMG_C_剧情字幕::Sound_0' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, 谁说话_0) == 0x000008, "Member 'Subtitles_UMG_C_剧情字幕::谁说话_0' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, InText) == 0x000020, "Member 'Subtitles_UMG_C_剧情字幕::InText' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, 几段音频) == 0x000038, "Member 'Subtitles_UMG_C_剧情字幕::几段音频' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, Output_Get) == 0x000040, "Member 'Subtitles_UMG_C_剧情字幕::Output_Get' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, CallFunc_CreateSound2D_ReturnValue) == 0x000048, "Member 'Subtitles_UMG_C_剧情字幕::CallFunc_CreateSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Subtitles_UMG_C_剧情字幕, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'Subtitles_UMG_C_剧情字幕::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

