#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_丢弃的数量

#include "Basic.hpp"

#include "InventoryData_Struct_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_丢弃的数量.WB_丢弃的数量_C
// 0x00D8 (0x0338 - 0x0260)
class UWB_丢弃的数量_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_470;                                     // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                减; // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                加; // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomButton_UMG5_C*                   取消; // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomButton_UMG5_C*                   确认;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         要丢弃的当前数量; // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         要丢弃的最大数量; // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInventoryData_Struct                  DragData;                                          // 0x02A0(0x0098)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_丢弃的数量(int32 EntryPoint);
	void 关闭界面();
	void BndEvt__WB_丢弃的数量_取消_K2Node_ComponentBoundEvent_4_Click__DelegateSignature();
	void BndEvt__WB_丢弃的数量_确认_K2Node_ComponentBoundEvent_3_Click__DelegateSignature();
	void BndEvt__BackpackDrop_UMG_加_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BackpackDrop_UMG_减_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_丢弃的数量_C">();
	}
	static class UWB_丢弃的数量_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_丢弃的数量_C>();
	}
};
static_assert(alignof(UWB_丢弃的数量_C) == 0x000008, "Wrong alignment on UWB_丢弃的数量_C");
static_assert(sizeof(UWB_丢弃的数量_C) == 0x000338, "Wrong size on UWB_丢弃的数量_C");
static_assert(offsetof(UWB_丢弃的数量_C, UberGraphFrame) == 0x000260, "Member 'UWB_丢弃的数量_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, NewAnimation) == 0x000268, "Member 'UWB_丢弃的数量_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, TextBlock_470) == 0x000270, "Member 'UWB_丢弃的数量_C::TextBlock_470' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 减) == 0x000278, "Member 'UWB_丢弃的数量_C::减' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 加) == 0x000280, "Member 'UWB_丢弃的数量_C::加' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 取消) == 0x000288, "Member 'UWB_丢弃的数量_C::取消' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 确认) == 0x000290, "Member 'UWB_丢弃的数量_C::确认' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 要丢弃的当前数量) == 0x000298, "Member 'UWB_丢弃的数量_C::要丢弃的当前数量' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, 要丢弃的最大数量) == 0x00029C, "Member 'UWB_丢弃的数量_C::要丢弃的最大数量' has a wrong offset!");
static_assert(offsetof(UWB_丢弃的数量_C, DragData) == 0x0002A0, "Member 'UWB_丢弃的数量_C::DragData' has a wrong offset!");

}

