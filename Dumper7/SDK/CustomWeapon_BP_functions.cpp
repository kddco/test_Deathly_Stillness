#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomWeapon_BP

#include "Basic.hpp"

#include "CustomWeapon_BP_classes.hpp"
#include "CustomWeapon_BP_parameters.hpp"


namespace SDK
{

// Function CustomWeapon_BP.CustomWeapon_BP_C.ExecuteUbergraph_CustomWeapon_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACustomWeapon_BP_C::ExecuteUbergraph_CustomWeapon_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "ExecuteUbergraph_CustomWeapon_BP");

	Params::CustomWeapon_BP_C_ExecuteUbergraph_CustomWeapon_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.恢复默认设置
// (BlueprintCallable, BlueprintEvent)

void ACustomWeapon_BP_C::恢复默认设置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "恢复默认设置");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.更换枪口配件
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMuzzleType                             MuzzleType_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWeaponType                             WeaponType_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACustomWeapon_BP_C::更换枪口配件(EMuzzleType MuzzleType_0, EWeaponType WeaponType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "更换枪口配件");

	Params::CustomWeapon_BP_C_更换枪口配件 Parms{};

	Parms.MuzzleType_0 = MuzzleType_0;
	Parms.WeaponType_0 = WeaponType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.切换武器
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeaponType                             WeaponType_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACustomWeapon_BP_C::切换武器(EWeaponType WeaponType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "切换武器");

	Params::CustomWeapon_BP_C_切换武器 Parms{};

	Parms.WeaponType_0 = WeaponType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.更换倍镜
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeaponType                             WeaponType_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOptics_Enum                            OpticsType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACustomWeapon_BP_C::更换倍镜(EWeaponType WeaponType_0, EOptics_Enum OpticsType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "更换倍镜");

	Params::CustomWeapon_BP_C_更换倍镜 Parms{};

	Parms.WeaponType_0 = WeaponType_0;
	Parms.OpticsType = OpticsType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACustomWeapon_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.隐藏所有倍镜
// (Public, BlueprintCallable, BlueprintEvent)

void ACustomWeapon_BP_C::隐藏所有倍镜()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "隐藏所有倍镜");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.销毁HK416的附加组件
// (Public, BlueprintCallable, BlueprintEvent)

void ACustomWeapon_BP_C::销毁HK416的附加组件()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "销毁HK416的附加组件");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CustomWeapon_BP.CustomWeapon_BP_C.生成HK416的附加组件
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACustomWeapon_BP_C::生成HK416的附加组件()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomWeapon_BP_C", "生成HK416的附加组件");

	UObject::ProcessEvent(Func, nullptr);
}

}

