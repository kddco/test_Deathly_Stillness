#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIBulletMaster_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AIBulletMaster_BP.AIBulletMaster_BP_C.ExecuteUbergraph_AIBulletMaster_BP
// 0x0180 (0x0180 - 0x0000)
struct AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0060(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_BP_C*                           K2Node_DynamicCast_AsZombie_BP;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP) == 0x000008, "Wrong alignment on AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP");
static_assert(sizeof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP) == 0x000180, "Wrong size on AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, EntryPoint) == 0x000000, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_GetVelocity_ReturnValue) == 0x000004, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, ___bool_Has_Been_Initd_Variable) == 0x00001C, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, ___bool_IsClosed_Variable) == 0x00001D, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_MyComp) == 0x000020, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_Other) == 0x000028, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_OtherComp) == 0x000030, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_bSelfMoved) == 0x000038, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_HitLocation) == 0x00003C, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_HitNormal) == 0x000048, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_NormalImpulse) == 0x000054, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_Event_Hit) == 0x000060, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E8, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E9, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_Location) == 0x0000F4, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_ImpactPoint) == 0x000100, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_Normal) == 0x00010C, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_ImpactNormal) == 0x000118, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_ElementIndex) == 0x00014C, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_FaceIndex) == 0x000150, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_TraceStart) == 0x000154, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_BreakHitResult_TraceEnd) == 0x000160, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_IsValid_ReturnValue) == 0x00016C, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00016D, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_DynamicCast_AsZombie_BP) == 0x000170, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_DynamicCast_AsZombie_BP' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'AIBulletMaster_BP_C_ExecuteUbergraph_AIBulletMaster_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIBulletMaster_BP.AIBulletMaster_BP_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct AIBulletMaster_BP_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AIBulletMaster_BP_C_ReceiveHit) == 0x000008, "Wrong alignment on AIBulletMaster_BP_C_ReceiveHit");
static_assert(sizeof(AIBulletMaster_BP_C_ReceiveHit) == 0x0000C8, "Wrong size on AIBulletMaster_BP_C_ReceiveHit");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, MyComp) == 0x000000, "Member 'AIBulletMaster_BP_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, Other) == 0x000008, "Member 'AIBulletMaster_BP_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, OtherComp) == 0x000010, "Member 'AIBulletMaster_BP_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'AIBulletMaster_BP_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'AIBulletMaster_BP_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, HitNormal) == 0x000028, "Member 'AIBulletMaster_BP_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'AIBulletMaster_BP_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AIBulletMaster_BP_C_ReceiveHit, Hit) == 0x000040, "Member 'AIBulletMaster_BP_C_ReceiveHit::Hit' has a wrong offset!");

}

