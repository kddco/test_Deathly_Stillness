#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_上锁的门

#include "Basic.hpp"

#include "BP_上锁的门_classes.hpp"
#include "BP_上锁的门_parameters.hpp"


namespace SDK
{

// Function BP_上锁的门.BP_上锁的门_C.ExecuteUbergraph_BP_上锁的门
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_上锁的门_C::ExecuteUbergraph_BP_上锁的门(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "ExecuteUbergraph_BP_上锁的门");

	Params::BP_上锁的门_C_ExecuteUbergraph_BP_上锁的门 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_上锁的门.BP_上锁的门_C.有工具可以开锁
// (BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::有工具可以开锁()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "有工具可以开锁");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.没有撬锁工具
// (BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::没有撬锁工具()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "没有撬锁工具");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.门已解锁
// (BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::门已解锁()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "门已解锁");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_上锁的门_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.RenderDeepClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::RenderDeepClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "RenderDeepClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.RenderDeepOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::RenderDeepOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "RenderDeepOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.PlayerInteration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_上锁的门_C::PlayerInteration(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "PlayerInteration");

	Params::BP_上锁的门_C_PlayerInteration Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_上锁的门.BP_上锁的门_C.BreakInteration
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_上锁的门_C::BreakInteration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "BreakInteration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.时间轴_0__UpdateFunc
// (BlueprintEvent)

void ABP_上锁的门_C::时间轴_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "时间轴_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.时间轴_0__FinishedFunc
// (BlueprintEvent)

void ABP_上锁的门_C::时间轴_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "时间轴_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.Swing Closed__UpdateFunc
// (BlueprintEvent)

void ABP_上锁的门_C::Swing_Closed__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "Swing Closed__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.Swing Closed__FinishedFunc
// (BlueprintEvent)

void ABP_上锁的门_C::Swing_Closed__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "Swing Closed__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.Swing Open__UpdateFunc
// (BlueprintEvent)

void ABP_上锁的门_C::Swing_Open__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "Swing Open__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.Swing Open__FinishedFunc
// (BlueprintEvent)

void ABP_上锁的门_C::Swing_Open__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "Swing Open__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_上锁的门.BP_上锁的门_C.角色在门的哪面
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_上锁的门_C::角色在门的哪面()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_上锁的门_C", "角色在门的哪面");

	Params::BP_上锁的门_C_角色在门的哪面 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

