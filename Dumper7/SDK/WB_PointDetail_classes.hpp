#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PointDetail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PointDetail.WB_PointDetail_C
// 0x0028 (0x0288 - 0x0260)
class UWB_PointDetail_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Details;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Logo;                                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_0;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_PointDetail(int32 EntryPoint);
	void 设置详情(const class FText& Param_Name_0, const class FText& Details_0, class UTexture2D* 图标);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PointDetail_C">();
	}
	static class UWB_PointDetail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PointDetail_C>();
	}
};
static_assert(alignof(UWB_PointDetail_C) == 0x000008, "Wrong alignment on UWB_PointDetail_C");
static_assert(sizeof(UWB_PointDetail_C) == 0x000288, "Wrong size on UWB_PointDetail_C");
static_assert(offsetof(UWB_PointDetail_C, UberGraphFrame) == 0x000260, "Member 'UWB_PointDetail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PointDetail_C, NewAnimation) == 0x000268, "Member 'UWB_PointDetail_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UWB_PointDetail_C, Details) == 0x000270, "Member 'UWB_PointDetail_C::Details' has a wrong offset!");
static_assert(offsetof(UWB_PointDetail_C, Logo) == 0x000278, "Member 'UWB_PointDetail_C::Logo' has a wrong offset!");
static_assert(offsetof(UWB_PointDetail_C, Name_0) == 0x000280, "Member 'UWB_PointDetail_C::Name_0' has a wrong offset!");

}

