#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Backpack_DragObject_UMG

#include "Basic.hpp"

#include "Backpack_DragObject_UMG_classes.hpp"
#include "Backpack_DragObject_UMG_parameters.hpp"


namespace SDK
{

// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.ExecuteUbergraph_Backpack_DragObject_UMG
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::ExecuteUbergraph_Backpack_DragObject_UMG(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "ExecuteUbergraph_Backpack_DragObject_UMG");

	Params::Backpack_DragObject_UMG_C_ExecuteUbergraph_Backpack_DragObject_UMG Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBackpack_DragObject_UMG_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBackpack_DragObject_UMG_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.RefreshData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInventoryData_Struct&     InventoryData_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::RefreshData(const struct FInventoryData_Struct& InventoryData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "RefreshData");

	Params::Backpack_DragObject_UMG_C_RefreshData Parms{};

	Parms.InventoryData_0 = std::move(InventoryData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.更改成空格子
// (BlueprintCallable, BlueprintEvent)

void UBackpack_DragObject_UMG_C::更改成空格子()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "更改成空格子");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnDragLeave");

	Params::Backpack_DragObject_UMG_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnDragEnter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnDragEnter");

	Params::Backpack_DragObject_UMG_C_OnDragEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBackpack_DragObject_UMG_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnMouseLeave");

	Params::Backpack_DragObject_UMG_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBackpack_DragObject_UMG_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnMouseEnter");

	Params::Backpack_DragObject_UMG_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnDragCancelled
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::OnDragCancelled(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnDragCancelled");

	Params::Backpack_DragObject_UMG_C_OnDragCancelled Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBackpack_DragObject_UMG_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnMouseButtonDown");

	Params::Backpack_DragObject_UMG_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation**              Operation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnDragDetected");

	Params::Backpack_DragObject_UMG_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnMouseButtonDoubleClick
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 InMyGeometry                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             InMouseEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBackpack_DragObject_UMG_C::OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnMouseButtonDoubleClick");

	Params::Backpack_DragObject_UMG_C_OnMouseButtonDoubleClick Parms{};

	Parms.InMyGeometry = std::move(InMyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.UseObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBackpack_DragObject_UMG_C::UseObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "UseObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBackpack_DragObject_UMG_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "OnDrop");

	Params::Backpack_DragObject_UMG_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Backpack_DragObject_UMG.Backpack_DragObject_UMG_C.创建UI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget**                         创建的UI(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBackpack_DragObject_UMG_C::创建UI(class UWidget** 创建的UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Backpack_DragObject_UMG_C", "创建UI");

	Params::Backpack_DragObject_UMG_C_创建UI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (创建的UI != nullptr)
		*创建的UI = Parms.创建的UI;
}

}

