#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Point

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Point.WB_Point_C.ExecuteUbergraph_WB_Point
// 0x00F0 (0x00F0 - 0x0000)
struct WB_Point_C_ExecuteUbergraph_WB_Point final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_____;                        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDegress_Degress;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCoordinate_NewCoordinate;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Point_C_ExecuteUbergraph_WB_Point) == 0x000008, "Wrong alignment on WB_Point_C_ExecuteUbergraph_WB_Point");
static_assert(sizeof(WB_Point_C_ExecuteUbergraph_WB_Point) == 0x0000F0, "Wrong size on WB_Point_C_ExecuteUbergraph_WB_Point");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, EntryPoint) == 0x000000, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_X) == 0x000020, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_Y) == 0x000024, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_Z) == 0x000028, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, K2Node_DynamicCast_As_____) == 0x000030, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_MakeVector2D_ReturnValue) == 0x00003C, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_GetSize_ReturnValue) == 0x000044, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, K2Node_Event_MyGeometry) == 0x00005C, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, K2Node_Event_InDeltaTime) == 0x000094, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_X_1) == 0x0000AC, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_BreakVector_Z_1) == 0x0000B4, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_IsInViewport_ReturnValue) == 0x0000C4, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000CC, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D0, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_GetDegress_Degress) == 0x0000D8, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_GetDegress_Degress' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_VSize2D_ReturnValue) == 0x0000DC, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_GetCoordinate_NewCoordinate) == 0x0000E0, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_GetCoordinate_NewCoordinate' has a wrong offset!");
static_assert(offsetof(WB_Point_C_ExecuteUbergraph_WB_Point, CallFunc_PlayAnimation_ReturnValue) == 0x0000E8, "Member 'WB_Point_C_ExecuteUbergraph_WB_Point::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WB_Point.WB_Point_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Point_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Point_C_Tick) == 0x000004, "Wrong alignment on WB_Point_C_Tick");
static_assert(sizeof(WB_Point_C_Tick) == 0x00003C, "Wrong size on WB_Point_C_Tick");
static_assert(offsetof(WB_Point_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Point_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Point_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Point_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Point.WB_Point_C.GetDegress
// 0x0010 (0x0010 - 0x0000)
struct WB_Point_C_GetDegress final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degress;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Point_C_GetDegress) == 0x000004, "Wrong alignment on WB_Point_C_GetDegress");
static_assert(sizeof(WB_Point_C_GetDegress) == 0x000010, "Wrong size on WB_Point_C_GetDegress");
static_assert(offsetof(WB_Point_C_GetDegress, X) == 0x000000, "Member 'WB_Point_C_GetDegress::X' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetDegress, Y) == 0x000004, "Member 'WB_Point_C_GetDegress::Y' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetDegress, Degress) == 0x000008, "Member 'WB_Point_C_GetDegress::Degress' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetDegress, CallFunc_DegAtan2_ReturnValue) == 0x00000C, "Member 'WB_Point_C_GetDegress::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");

// Function WB_Point.WB_Point_C.GetCoordinate
// 0x0058 (0x0058 - 0x0000)
struct WB_Point_C_GetCoordinate final
{
public:
	float                                         Degress;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         R;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewCoordinate;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_____;                        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Point_C_GetCoordinate) == 0x000008, "Wrong alignment on WB_Point_C_GetCoordinate");
static_assert(sizeof(WB_Point_C_GetCoordinate) == 0x000058, "Wrong size on WB_Point_C_GetCoordinate");
static_assert(offsetof(WB_Point_C_GetCoordinate, Degress) == 0x000000, "Member 'WB_Point_C_GetCoordinate::Degress' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, R) == 0x000004, "Member 'WB_Point_C_GetCoordinate::R' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, NewCoordinate) == 0x000008, "Member 'WB_Point_C_GetCoordinate::NewCoordinate' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_DegSin_ReturnValue) == 0x000010, "Member 'WB_Point_C_GetCoordinate::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_DegCos_ReturnValue) == 0x000014, "Member 'WB_Point_C_GetCoordinate::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, K2Node_DynamicCast_As_____) == 0x000018, "Member 'WB_Point_C_GetCoordinate::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_Point_C_GetCoordinate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_GetSize_ReturnValue) == 0x000024, "Member 'WB_Point_C_GetCoordinate::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'WB_Point_C_GetCoordinate::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WB_Point_C_GetCoordinate::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'WB_Point_C_GetCoordinate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'WB_Point_C_GetCoordinate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'WB_Point_C_GetCoordinate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'WB_Point_C_GetCoordinate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000044, "Member 'WB_Point_C_GetCoordinate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000048, "Member 'WB_Point_C_GetCoordinate::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Point_C_GetCoordinate, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'WB_Point_C_GetCoordinate::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

