#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGame_Umg

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "BulletType_Enum_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InGame_Umg.InGame_Umg_C
// 0x0178 (0x03D8 - 0x0260)
class UInGame_Umg_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Backroom界面Fade; // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       准星Fade_0; // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ZombieDead;                                        // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       游戏中界面Fade; // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitHeadTip;                                        // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Dead;                                              // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Kick;                                              // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitMarkerAnimation;                                // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitMarkerAnimationHead;                            // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuestStart;                                        // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Quest;                                             // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ScreenDamage;                                      // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CrossHair;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DotCrosshair;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Down;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Health;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HitMarker;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_10;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_49;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_87;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_88;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_262;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Left;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               melee;                                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_185;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right;                                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_4;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_208;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_346;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_649;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Top;                                               // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             全自动半自动; // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             剩余丧尸数量; // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             剩余子弹; // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             当前子弹; // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             总共的丧尸数量; // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APlayer_BP_C*                           PlayerRef;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ZombieNum;                                         // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   章节名字; // 0x03B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          不计算丧尸数量; // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          是否开启丧尸数量提示; // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_InGame_Umg(int32 EntryPoint);
	void 枪口是否被阻挡(class UTexture2D* Texture);
	void 背包子弹数量更改();
	void 丧尸数量减少();
	void 半自动切换();
	void 全自动切换();
	void CrosshairFade_Event(EUMGSequencePlayMode PlayMode);
	void 丧尸死亡();
	void 游戏中界面Fade_Event(EUMGSequencePlayMode PlayMode);
	void 一击爆头音效();
	void 一击爆头();
	void 开启瞄准(ESlateVisibility 十字, ESlateVisibility DOT);
	void DeadScreen(EUMGSequencePlayMode PlayMode);
	void 大招(EUMGSequencePlayMode PlayMode);
	void HitZombie();
	void HitHead();
	void QuestTip_Evenet();
	void QuestStart_Event();
	void DamageEffect();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	float GetPercent_0();
	struct FLinearColor GetFillColorAndOpacity_0();
	float GetPercent_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InGame_Umg_C">();
	}
	static class UInGame_Umg_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGame_Umg_C>();
	}
};
static_assert(alignof(UInGame_Umg_C) == 0x000008, "Wrong alignment on UInGame_Umg_C");
static_assert(sizeof(UInGame_Umg_C) == 0x0003D8, "Wrong size on UInGame_Umg_C");
static_assert(offsetof(UInGame_Umg_C, UberGraphFrame) == 0x000260, "Member 'UInGame_Umg_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Backroom界面Fade) == 0x000268, "Member 'UInGame_Umg_C::Backroom界面Fade' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 准星Fade_0) == 0x000270, "Member 'UInGame_Umg_C::准星Fade_0' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, ZombieDead) == 0x000278, "Member 'UInGame_Umg_C::ZombieDead' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 游戏中界面Fade) == 0x000280, "Member 'UInGame_Umg_C::游戏中界面Fade' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, HitHeadTip) == 0x000288, "Member 'UInGame_Umg_C::HitHeadTip' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Dead) == 0x000290, "Member 'UInGame_Umg_C::Dead' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Kick) == 0x000298, "Member 'UInGame_Umg_C::Kick' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, HitMarkerAnimation) == 0x0002A0, "Member 'UInGame_Umg_C::HitMarkerAnimation' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, HitMarkerAnimationHead) == 0x0002A8, "Member 'UInGame_Umg_C::HitMarkerAnimationHead' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, QuestStart) == 0x0002B0, "Member 'UInGame_Umg_C::QuestStart' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Quest) == 0x0002B8, "Member 'UInGame_Umg_C::Quest' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, ScreenDamage) == 0x0002C0, "Member 'UInGame_Umg_C::ScreenDamage' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, CrossHair) == 0x0002C8, "Member 'UInGame_Umg_C::CrossHair' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, DotCrosshair) == 0x0002D0, "Member 'UInGame_Umg_C::DotCrosshair' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Down) == 0x0002D8, "Member 'UInGame_Umg_C::Down' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Health) == 0x0002E0, "Member 'UInGame_Umg_C::Health' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, HitMarker) == 0x0002E8, "Member 'UInGame_Umg_C::HitMarker' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image) == 0x0002F0, "Member 'UInGame_Umg_C::Image' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_0) == 0x0002F8, "Member 'UInGame_Umg_C::Image_0' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_10) == 0x000300, "Member 'UInGame_Umg_C::Image_10' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_49) == 0x000308, "Member 'UInGame_Umg_C::Image_49' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_87) == 0x000310, "Member 'UInGame_Umg_C::Image_87' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_88) == 0x000318, "Member 'UInGame_Umg_C::Image_88' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Image_262) == 0x000320, "Member 'UInGame_Umg_C::Image_262' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Left) == 0x000328, "Member 'UInGame_Umg_C::Left' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, melee) == 0x000330, "Member 'UInGame_Umg_C::melee' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, ProgressBar) == 0x000338, "Member 'UInGame_Umg_C::ProgressBar' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, ProgressBar_185) == 0x000340, "Member 'UInGame_Umg_C::ProgressBar_185' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Right) == 0x000348, "Member 'UInGame_Umg_C::Right' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, TextBlock_3) == 0x000350, "Member 'UInGame_Umg_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, TextBlock_4) == 0x000358, "Member 'UInGame_Umg_C::TextBlock_4' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, TextBlock_208) == 0x000360, "Member 'UInGame_Umg_C::TextBlock_208' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, TextBlock_346) == 0x000368, "Member 'UInGame_Umg_C::TextBlock_346' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, TextBlock_649) == 0x000370, "Member 'UInGame_Umg_C::TextBlock_649' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, Top) == 0x000378, "Member 'UInGame_Umg_C::Top' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 全自动半自动) == 0x000380, "Member 'UInGame_Umg_C::全自动半自动' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 剩余丧尸数量) == 0x000388, "Member 'UInGame_Umg_C::剩余丧尸数量' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 剩余子弹) == 0x000390, "Member 'UInGame_Umg_C::剩余子弹' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 当前子弹) == 0x000398, "Member 'UInGame_Umg_C::当前子弹' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 总共的丧尸数量) == 0x0003A0, "Member 'UInGame_Umg_C::总共的丧尸数量' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, PlayerRef) == 0x0003A8, "Member 'UInGame_Umg_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, ZombieNum) == 0x0003B0, "Member 'UInGame_Umg_C::ZombieNum' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 章节名字) == 0x0003B8, "Member 'UInGame_Umg_C::章节名字' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 不计算丧尸数量) == 0x0003D0, "Member 'UInGame_Umg_C::不计算丧尸数量' has a wrong offset!");
static_assert(offsetof(UInGame_Umg_C, 是否开启丧尸数量提示) == 0x0003D1, "Member 'UInGame_Umg_C::是否开启丧尸数量提示' has a wrong offset!");

}

