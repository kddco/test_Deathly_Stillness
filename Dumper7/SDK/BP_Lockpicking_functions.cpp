#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lockpicking

#include "Basic.hpp"

#include "BP_Lockpicking_classes.hpp"
#include "BP_Lockpicking_parameters.hpp"


namespace SDK
{

// Function BP_Lockpicking.BP_Lockpicking_C.ExecuteUbergraph_BP_Lockpicking
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lockpicking_C::ExecuteUbergraph_BP_Lockpicking(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "ExecuteUbergraph_BP_Lockpicking");

	Params::BP_Lockpicking_C_ExecuteUbergraph_BP_Lockpicking Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lockpicking_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.MovePickWithLock
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::MovePickWithLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "MovePickWithLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.QuitPicking
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::QuitPicking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "QuitPicking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.LockSetup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lockpicking_C::LockSetup(int32 Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "LockSetup");

	Params::BP_Lockpicking_C_LockSetup Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.TurnLockBackToOrigin
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::TurnLockBackToOrigin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "TurnLockBackToOrigin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lockpicking_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "ReceiveTick");

	Params::BP_Lockpicking_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.InpAxisEvt_TurnPick_K2Node_InputAxisEvent_7
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lockpicking_C::InpAxisEvt_TurnPick_K2Node_InputAxisEvent_7(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "InpAxisEvt_TurnPick_K2Node_InputAxisEvent_7");

	Params::BP_Lockpicking_C_InpAxisEvt_TurnPick_K2Node_InputAxisEvent_7 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.InpAxisEvt_TurnLock_K2Node_InputAxisEvent_4
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lockpicking_C::InpAxisEvt_TurnLock_K2Node_InputAxisEvent_4(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "InpAxisEvt_TurnLock_K2Node_InputAxisEvent_4");

	Params::BP_Lockpicking_C_InpAxisEvt_TurnLock_K2Node_InputAxisEvent_4 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.AddPickDamage
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::AddPickDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "AddPickDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.Wiggle
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::Wiggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "Wiggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.OpenLock
// (BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::OpenLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "OpenLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lockpicking.BP_Lockpicking_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Lockpicking_C::InpActEvt_Escape_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "InpActEvt_Escape_K2Node_InputKeyEvent_0");

	Params::BP_Lockpicking_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Lockpicking_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

