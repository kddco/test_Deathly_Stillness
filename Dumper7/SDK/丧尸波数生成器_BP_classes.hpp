#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: 丧尸波数生成器_BP

#include "Basic.hpp"

#include "ZombieWave_Enum_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass 丧尸波数生成器_BP.丧尸波数生成器_BP_C
// 0x0028 (0x0248 - 0x0220)
class A丧尸波数生成器_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Lots_of_zombies_03_Cue;                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EZombieWave_Enum                              丧尸波数枚举; // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_丧尸波数生成器_BP(int32 EntryPoint);
	void 休息时间();
	void 刷新丧尸波数();
	void ReceiveBeginPlay();
	void 根据点位生成丧尸(int32 要生成的数量);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"丧尸波数生成器_BP_C">();
	}
	static class A丧尸波数生成器_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<A丧尸波数生成器_BP_C>();
	}
};
static_assert(alignof(A丧尸波数生成器_BP_C) == 0x000008, "Wrong alignment on A丧尸波数生成器_BP_C");
static_assert(sizeof(A丧尸波数生成器_BP_C) == 0x000248, "Wrong size on A丧尸波数生成器_BP_C");
static_assert(offsetof(A丧尸波数生成器_BP_C, UberGraphFrame) == 0x000220, "Member 'A丧尸波数生成器_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(A丧尸波数生成器_BP_C, Lots_of_zombies_03_Cue) == 0x000228, "Member 'A丧尸波数生成器_BP_C::Lots_of_zombies_03_Cue' has a wrong offset!");
static_assert(offsetof(A丧尸波数生成器_BP_C, DefaultSceneRoot) == 0x000230, "Member 'A丧尸波数生成器_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(A丧尸波数生成器_BP_C, 丧尸波数枚举) == 0x000238, "Member 'A丧尸波数生成器_BP_C::丧尸波数枚举' has a wrong offset!");
static_assert(offsetof(A丧尸波数生成器_BP_C, As_Player_BP) == 0x000240, "Member 'A丧尸波数生成器_BP_C::As_Player_BP' has a wrong offset!");

}

