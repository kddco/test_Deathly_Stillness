#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FPS

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function FPS.FPS_C.ExecuteUbergraph_FPS
// 0x0098 (0x0098 - 0x0000)
struct FPS_C_ExecuteUbergraph_FPS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
};
static_assert(alignof(FPS_C_ExecuteUbergraph_FPS) == 0x000008, "Wrong alignment on FPS_C_ExecuteUbergraph_FPS");
static_assert(sizeof(FPS_C_ExecuteUbergraph_FPS) == 0x000098, "Wrong size on FPS_C_ExecuteUbergraph_FPS");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, EntryPoint) == 0x000000, "Member 'FPS_C_ExecuteUbergraph_FPS::EntryPoint' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, K2Node_Event_MyGeometry) == 0x00000C, "Member 'FPS_C_ExecuteUbergraph_FPS::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, K2Node_Event_InDeltaTime) == 0x000044, "Member 'FPS_C_ExecuteUbergraph_FPS::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_Conv_FloatToText_ReturnValue) == 0x000048, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPS_C_ExecuteUbergraph_FPS, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'FPS_C_ExecuteUbergraph_FPS::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function FPS.FPS_C.Tick
// 0x003C (0x003C - 0x0000)
struct FPS_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPS_C_Tick) == 0x000004, "Wrong alignment on FPS_C_Tick");
static_assert(sizeof(FPS_C_Tick) == 0x00003C, "Wrong size on FPS_C_Tick");
static_assert(offsetof(FPS_C_Tick, MyGeometry) == 0x000000, "Member 'FPS_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(FPS_C_Tick, InDeltaTime) == 0x000038, "Member 'FPS_C_Tick::InDeltaTime' has a wrong offset!");

}

