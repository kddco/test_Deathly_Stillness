#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vagrant_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Vagrant_BP.Vagrant_BP_C
// 0x0180 (0x0640 - 0x04C0)
class AVagrant_BP_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        beep_07_Cue;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mask1;                                             // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CineCamera;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        foot_r;                                            // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        foot_l;                                            // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mask;                                              // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ____0______0_9C0B31574B202AF3DF243E82093C67B0;     // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____0__Direction_9C0B31574B202AF3DF243E82093C67B0; // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     时间轴_0; // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_6EEAEF6A40F215F31124888963806821; // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_6EEAEF6A40F215F31124888963806821; // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayer_BP_C*                           As_Player_BP;                                      // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UDialogue_UMG_C*                        Talk_UMG;                                          // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackroom_Quest_BP_C*                   Quest;                                             // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           接到任务; // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           完成任务; // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                到达位置; // 0x0560(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          开始移动; // 0x056C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundBase*>                     接到流浪者的任务Sound; // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     完成流浪者的任务Sound; // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                第二道安全门的位置; // 0x0590(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           到达第一道安全门; // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           到达第二道安全门; // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     到达第一道安全门Sound; // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     到达第二道安全门Sound; // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           如何打开卷帘门; // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           逃离后室; // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     如何打开卷帘门Sound; // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     逃离后室Sound; // 0x0610(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UVagrant_AnimBlueprint_C*               As_Vagrant_Anim_Blueprint;                         // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVagrant_CBP_C*                         As_Vagrant_CBP;                                    // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVagranPistol_BP_C*                     PistolRef;                                         // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Vagrant_BP(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void RightFoot();
	void LeftFoot();
	void 触发对话();
	void 对话结束();
	void 计算玩家和流浪者的距离();
	void BndEvt__对话NPC_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AIMove();
	void 结束蹲伏();
	void 开始蹲伏();
	void 警报声开关(bool bNewActive);
	void 转向角色();
	void 切换持枪状态(bool 是否持枪);
	void 开始射击();
	void RefreshQuest();
	void EndTalk();
	void OnSuccess_192297AF4F12D8A376ED98BCF91FD502(EPathFollowingResult MovementResult);
	void OnFail_192297AF4F12D8A376ED98BCF91FD502(EPathFollowingResult MovementResult);
	void OnSuccess_93283AF746F361B54145F8AE9B49796C(EPathFollowingResult MovementResult);
	void OnFail_93283AF746F361B54145F8AE9B49796C(EPathFollowingResult MovementResult);
	void OnSuccess_EC15CE1A4CBAEE6125689F8BF9F83B17(EPathFollowingResult MovementResult);
	void OnFail_EC15CE1A4CBAEE6125689F8BF9F83B17(EPathFollowingResult MovementResult);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void 时间轴_0__UpdateFunc();
	void 时间轴_0__FinishedFunc();
	void UserConstructionScript();
	void 脚步声(class USceneComponent* Target, struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Vagrant_BP_C">();
	}
	static class AVagrant_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVagrant_BP_C>();
	}
};
static_assert(alignof(AVagrant_BP_C) == 0x000010, "Wrong alignment on AVagrant_BP_C");
static_assert(sizeof(AVagrant_BP_C) == 0x000640, "Wrong size on AVagrant_BP_C");
static_assert(offsetof(AVagrant_BP_C, UberGraphFrame) == 0x0004C0, "Member 'AVagrant_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, beep_07_Cue) == 0x0004C8, "Member 'AVagrant_BP_C::beep_07_Cue' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Mask1) == 0x0004D0, "Member 'AVagrant_BP_C::Mask1' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Sphere) == 0x0004D8, "Member 'AVagrant_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, CineCamera) == 0x0004E0, "Member 'AVagrant_BP_C::CineCamera' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, SpotLight) == 0x0004E8, "Member 'AVagrant_BP_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, foot_r) == 0x0004F0, "Member 'AVagrant_BP_C::foot_r' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, foot_l) == 0x0004F8, "Member 'AVagrant_BP_C::foot_l' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Mask) == 0x000500, "Member 'AVagrant_BP_C::Mask' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, ____0______0_9C0B31574B202AF3DF243E82093C67B0) == 0x000508, "Member 'AVagrant_BP_C::____0______0_9C0B31574B202AF3DF243E82093C67B0' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, ____0__Direction_9C0B31574B202AF3DF243E82093C67B0) == 0x00050C, "Member 'AVagrant_BP_C::____0__Direction_9C0B31574B202AF3DF243E82093C67B0' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 时间轴_0) == 0x000510, "Member 'AVagrant_BP_C::时间轴_0' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Timeline_0_NewTrack_0_6EEAEF6A40F215F31124888963806821) == 0x000518, "Member 'AVagrant_BP_C::Timeline_0_NewTrack_0_6EEAEF6A40F215F31124888963806821' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Timeline_0__Direction_6EEAEF6A40F215F31124888963806821) == 0x00051C, "Member 'AVagrant_BP_C::Timeline_0__Direction_6EEAEF6A40F215F31124888963806821' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Timeline_0) == 0x000520, "Member 'AVagrant_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, As_Player_BP) == 0x000528, "Member 'AVagrant_BP_C::As_Player_BP' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Talk_UMG) == 0x000530, "Member 'AVagrant_BP_C::Talk_UMG' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Quest) == 0x000538, "Member 'AVagrant_BP_C::Quest' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 接到任务) == 0x000540, "Member 'AVagrant_BP_C::接到任务' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 完成任务) == 0x000550, "Member 'AVagrant_BP_C::完成任务' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 到达位置) == 0x000560, "Member 'AVagrant_BP_C::到达位置' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 开始移动) == 0x00056C, "Member 'AVagrant_BP_C::开始移动' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 接到流浪者的任务Sound) == 0x000570, "Member 'AVagrant_BP_C::接到流浪者的任务Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 完成流浪者的任务Sound) == 0x000580, "Member 'AVagrant_BP_C::完成流浪者的任务Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 第二道安全门的位置) == 0x000590, "Member 'AVagrant_BP_C::第二道安全门的位置' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 到达第一道安全门) == 0x0005A0, "Member 'AVagrant_BP_C::到达第一道安全门' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 到达第二道安全门) == 0x0005B0, "Member 'AVagrant_BP_C::到达第二道安全门' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 到达第一道安全门Sound) == 0x0005C0, "Member 'AVagrant_BP_C::到达第一道安全门Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 到达第二道安全门Sound) == 0x0005D0, "Member 'AVagrant_BP_C::到达第二道安全门Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 如何打开卷帘门) == 0x0005E0, "Member 'AVagrant_BP_C::如何打开卷帘门' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 逃离后室) == 0x0005F0, "Member 'AVagrant_BP_C::逃离后室' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 如何打开卷帘门Sound) == 0x000600, "Member 'AVagrant_BP_C::如何打开卷帘门Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, 逃离后室Sound) == 0x000610, "Member 'AVagrant_BP_C::逃离后室Sound' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, As_Vagrant_Anim_Blueprint) == 0x000620, "Member 'AVagrant_BP_C::As_Vagrant_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, As_Vagrant_CBP) == 0x000628, "Member 'AVagrant_BP_C::As_Vagrant_CBP' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, Pitch) == 0x000630, "Member 'AVagrant_BP_C::Pitch' has a wrong offset!");
static_assert(offsetof(AVagrant_BP_C, PistolRef) == 0x000638, "Member 'AVagrant_BP_C::PistolRef' has a wrong offset!");

}

