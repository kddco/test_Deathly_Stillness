#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Entity_Pawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SCUE4_structs.hpp"
#include "GameDifficultyEnum_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Entity_Pawn.BP_Entity_Pawn_C
// 0x0170 (0x0630 - 0x04C0)
class ABP_Entity_Pawn_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Sound;                                             // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LeftFoot;                                          // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        RightFoot;                                         // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayer_BP_C*                           PlayerRef;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanScream_;                                        // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Scream_;                                           // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Aggressive;                                        // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Hit;                                               // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MeleeByPlayer_;                                    // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitPlayer;                                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   攻击检测起始骨骼; // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   攻击检测终点骨骼; // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         In_Play_Rate;                                      // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_Result;                                        // 0x0534(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ZombieSound;                                       // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSafeFloat                             应用伤害Safe;                                  // 0x05D0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UEntity_Anim_C*                         As_Entity_Anim;                                    // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAudioComponent*                        丧尸追逐音效; // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Walk_Speed;                                    // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         追逐速度;                                      // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameDifficultyEnum                           游戏难度; // 0x0624(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Entity_Pawn(int32 EntryPoint);
	void 关闭被击退状态();
	void 击退();
	void UISettingApply();
	void 重新开始音效播放();
	void ReceiveBeginPlay();
	void 攻击范围();
	void 是否攻击玩家();
	void 开始蹲伏();
	void 结束蹲伏();
	void 玩家死亡();
	void 播放音效();
	void 看到玩家();
	void 随机移动();
	void DamageHit(const struct FHitResult& Hit_0, float Damage, bool isMelee_);
	void ResetScream();
	void 重置尖叫();
	void OnSuccess_A575B2C740A89FE0D490E0A57BBC2713(EPathFollowingResult MovementResult);
	void OnFail_A575B2C740A89FE0D490E0A57BBC2713(EPathFollowingResult MovementResult);
	void 更改控制旋转模式(bool Orient_Rotation_to_Movement, bool Use_Controller_Rotation_Yaw, bool 使用控制器所需的旋转);
	void Simulate_Physics_for_Roar();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Entity_Pawn_C">();
	}
	static class ABP_Entity_Pawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Entity_Pawn_C>();
	}
};
static_assert(alignof(ABP_Entity_Pawn_C) == 0x000010, "Wrong alignment on ABP_Entity_Pawn_C");
static_assert(sizeof(ABP_Entity_Pawn_C) == 0x000630, "Wrong size on ABP_Entity_Pawn_C");
static_assert(offsetof(ABP_Entity_Pawn_C, UberGraphFrame) == 0x0004C0, "Member 'ABP_Entity_Pawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Sound) == 0x0004C8, "Member 'ABP_Entity_Pawn_C::Sound' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, LeftFoot) == 0x0004D0, "Member 'ABP_Entity_Pawn_C::LeftFoot' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, RightFoot) == 0x0004D8, "Member 'ABP_Entity_Pawn_C::RightFoot' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Dead) == 0x0004E0, "Member 'ABP_Entity_Pawn_C::Dead' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, PlayerRef) == 0x0004E8, "Member 'ABP_Entity_Pawn_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, CanScream_) == 0x0004F0, "Member 'ABP_Entity_Pawn_C::CanScream_' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Scream_) == 0x0004F1, "Member 'ABP_Entity_Pawn_C::Scream_' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Aggressive) == 0x0004F8, "Member 'ABP_Entity_Pawn_C::Aggressive' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Hit) == 0x000500, "Member 'ABP_Entity_Pawn_C::Hit' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, MeleeByPlayer_) == 0x000510, "Member 'ABP_Entity_Pawn_C::MeleeByPlayer_' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, HitPlayer) == 0x000518, "Member 'ABP_Entity_Pawn_C::HitPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 攻击检测起始骨骼) == 0x000520, "Member 'ABP_Entity_Pawn_C::攻击检测起始骨骼' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 攻击检测终点骨骼) == 0x000528, "Member 'ABP_Entity_Pawn_C::攻击检测终点骨骼' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, In_Play_Rate) == 0x000530, "Member 'ABP_Entity_Pawn_C::In_Play_Rate' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Hit_Result) == 0x000534, "Member 'ABP_Entity_Pawn_C::Hit_Result' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Montage) == 0x0005C0, "Member 'ABP_Entity_Pawn_C::Montage' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, ZombieSound) == 0x0005C8, "Member 'ABP_Entity_Pawn_C::ZombieSound' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 应用伤害Safe) == 0x0005D0, "Member 'ABP_Entity_Pawn_C::应用伤害Safe' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, As_Entity_Anim) == 0x000608, "Member 'ABP_Entity_Pawn_C::As_Entity_Anim' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 丧尸追逐音效) == 0x000610, "Member 'ABP_Entity_Pawn_C::丧尸追逐音效' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Health) == 0x000618, "Member 'ABP_Entity_Pawn_C::Health' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, Max_Walk_Speed) == 0x00061C, "Member 'ABP_Entity_Pawn_C::Max_Walk_Speed' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 追逐速度) == 0x000620, "Member 'ABP_Entity_Pawn_C::追逐速度' has a wrong offset!");
static_assert(offsetof(ABP_Entity_Pawn_C, 游戏难度) == 0x000624, "Member 'ABP_Entity_Pawn_C::游戏难度' has a wrong offset!");

}

