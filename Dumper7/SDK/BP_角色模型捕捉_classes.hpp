#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_角色模型捕捉

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CharacterModel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_角色模型捕捉.BP_角色模型捕捉_C
// 0x00E0 (0x0300 - 0x0220)
class ABP_角色模型捕捉_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HairSocket;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hat;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs;                                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hand;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Backpack_A;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Pants;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cloth;                                             // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shoes;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Belt;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ECharacterModel                               CharacterModel;                                    // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          BaseMesh;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          HeadMesh;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          HairMesh;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          ClothMesh;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          PantsMesh;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          HandMesh;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          LegsMesh;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          HatMesh;                                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          BeltMesh;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          New_Physics_Asset;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          ShoesMesh;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_角色模型捕捉(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void 应用读取的数据();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_角色模型捕捉_C">();
	}
	static class ABP_角色模型捕捉_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_角色模型捕捉_C>();
	}
};
static_assert(alignof(ABP_角色模型捕捉_C) == 0x000008, "Wrong alignment on ABP_角色模型捕捉_C");
static_assert(sizeof(ABP_角色模型捕捉_C) == 0x000300, "Wrong size on ABP_角色模型捕捉_C");
static_assert(offsetof(ABP_角色模型捕捉_C, UberGraphFrame) == 0x000220, "Member 'ABP_角色模型捕捉_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, PointLight) == 0x000228, "Member 'ABP_角色模型捕捉_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, PointLight1) == 0x000230, "Member 'ABP_角色模型捕捉_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Sphere) == 0x000238, "Member 'ABP_角色模型捕捉_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, HairSocket) == 0x000240, "Member 'ABP_角色模型捕捉_C::HairSocket' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Hat) == 0x000248, "Member 'ABP_角色模型捕捉_C::Hat' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Legs) == 0x000250, "Member 'ABP_角色模型捕捉_C::Legs' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Hand) == 0x000258, "Member 'ABP_角色模型捕捉_C::Hand' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, SK_Backpack_A) == 0x000260, "Member 'ABP_角色模型捕捉_C::SK_Backpack_A' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Pants) == 0x000268, "Member 'ABP_角色模型捕捉_C::Pants' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Head) == 0x000270, "Member 'ABP_角色模型捕捉_C::Head' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Cloth) == 0x000278, "Member 'ABP_角色模型捕捉_C::Cloth' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Shoes) == 0x000280, "Member 'ABP_角色模型捕捉_C::Shoes' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, Belt) == 0x000288, "Member 'ABP_角色模型捕捉_C::Belt' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, SkeletalMesh) == 0x000290, "Member 'ABP_角色模型捕捉_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_角色模型捕捉_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, CharacterModel) == 0x0002A0, "Member 'ABP_角色模型捕捉_C::CharacterModel' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, BaseMesh) == 0x0002A8, "Member 'ABP_角色模型捕捉_C::BaseMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, HeadMesh) == 0x0002B0, "Member 'ABP_角色模型捕捉_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, HairMesh) == 0x0002B8, "Member 'ABP_角色模型捕捉_C::HairMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, ClothMesh) == 0x0002C0, "Member 'ABP_角色模型捕捉_C::ClothMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, PantsMesh) == 0x0002C8, "Member 'ABP_角色模型捕捉_C::PantsMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, HandMesh) == 0x0002D0, "Member 'ABP_角色模型捕捉_C::HandMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, LegsMesh) == 0x0002D8, "Member 'ABP_角色模型捕捉_C::LegsMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, HatMesh) == 0x0002E0, "Member 'ABP_角色模型捕捉_C::HatMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, BeltMesh) == 0x0002E8, "Member 'ABP_角色模型捕捉_C::BeltMesh' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, New_Physics_Asset) == 0x0002F0, "Member 'ABP_角色模型捕捉_C::New_Physics_Asset' has a wrong offset!");
static_assert(offsetof(ABP_角色模型捕捉_C, ShoesMesh) == 0x0002F8, "Member 'ABP_角色模型捕捉_C::ShoesMesh' has a wrong offset!");

}

