#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingSliderSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SettingSliderSlot.SettingSliderSlot_C.ExecuteUbergraph_SettingSliderSlot
// 0x0280 (0x0280 - 0x0000)
struct SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event___;                                   // 0x0018(0x0018)()
	class FText                                   K2Node_Event____1;                                 // 0x0030(0x0018)()
	struct FInputActionKeyMapping                 K2Node_Event_InputAction;                          // 0x0048(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_Event_InputAxis;                            // 0x0070(0x0028)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00D0(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0140(0x0070)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x01B0(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot) == 0x000008, "Wrong alignment on SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot");
static_assert(sizeof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot) == 0x000280, "Wrong size on SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, EntryPoint) == 0x000000, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_ComponentBoundEvent_Value) == 0x000004, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, ___int_Array_Index_Variable) == 0x00000C, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event___) == 0x000018, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event___' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event____1) == 0x000030, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event____1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_InputAction) == 0x000048, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_InputAction' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_InputAxis) == 0x000070, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_InputAxis' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_MyGeometry) == 0x000098, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_MouseEvent_1) == 0x0000D0, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_MouseEvent) == 0x000140, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_MakeStruct_SlateColor) == 0x0001B0, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_SwitchEnum_CmpSuccess) == 0x0001D8, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001DC, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_Event_IsDesignTime) == 0x0001E0, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001E4, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, ___int_Loop_Counter_Variable) == 0x0001E8, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Add_IntInt_ReturnValue) == 0x0001EC, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x0001F0, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Array_Get_Item) == 0x000200, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_AsUISetting_Interface) == 0x000210, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000221, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_GetGameInstance_ReturnValue) == 0x000228, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000230, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000239, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000240, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000248, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, K2Node_DynamicCast_bSuccess_2) == 0x000250, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000254, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000258, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00025C, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000260, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000264, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000268, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00026C, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000270, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000274, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000278, "Member 'SettingSliderSlot_C_ExecuteUbergraph_SettingSliderSlot::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'SettingSliderSlot_C_BndEvt__SettingSliderSlot_Slider_100_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SettingSliderSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingSliderSlot_C_PreConstruct) == 0x000001, "Wrong alignment on SettingSliderSlot_C_PreConstruct");
static_assert(sizeof(SettingSliderSlot_C_PreConstruct) == 0x000001, "Wrong size on SettingSliderSlot_C_PreConstruct");
static_assert(offsetof(SettingSliderSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SettingSliderSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct SettingSliderSlot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingSliderSlot_C_OnMouseLeave) == 0x000008, "Wrong alignment on SettingSliderSlot_C_OnMouseLeave");
static_assert(sizeof(SettingSliderSlot_C_OnMouseLeave) == 0x000070, "Wrong size on SettingSliderSlot_C_OnMouseLeave");
static_assert(offsetof(SettingSliderSlot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'SettingSliderSlot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct SettingSliderSlot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingSliderSlot_C_OnMouseEnter) == 0x000008, "Wrong alignment on SettingSliderSlot_C_OnMouseEnter");
static_assert(sizeof(SettingSliderSlot_C_OnMouseEnter) == 0x0000A8, "Wrong size on SettingSliderSlot_C_OnMouseEnter");
static_assert(offsetof(SettingSliderSlot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'SettingSliderSlot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'SettingSliderSlot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.CustomMappingCheck
// 0x0050 (0x0050 - 0x0000)
struct SettingSliderSlot_C_CustomMappingCheck final
{
public:
	struct FInputActionKeyMapping                 InputAction;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FInputAxisKeyMapping                   InputAxis;                                         // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SettingSliderSlot_C_CustomMappingCheck) == 0x000008, "Wrong alignment on SettingSliderSlot_C_CustomMappingCheck");
static_assert(sizeof(SettingSliderSlot_C_CustomMappingCheck) == 0x000050, "Wrong size on SettingSliderSlot_C_CustomMappingCheck");
static_assert(offsetof(SettingSliderSlot_C_CustomMappingCheck, InputAction) == 0x000000, "Member 'SettingSliderSlot_C_CustomMappingCheck::InputAction' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_CustomMappingCheck, InputAxis) == 0x000028, "Member 'SettingSliderSlot_C_CustomMappingCheck::InputAxis' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.SettingDetails
// 0x0030 (0x0030 - 0x0000)
struct SettingSliderSlot_C_SettingDetails final
{
public:
	class FText                                   标题; // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   详情; // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SettingSliderSlot_C_SettingDetails) == 0x000008, "Wrong alignment on SettingSliderSlot_C_SettingDetails");
static_assert(sizeof(SettingSliderSlot_C_SettingDetails) == 0x000030, "Wrong size on SettingSliderSlot_C_SettingDetails");
static_assert(offsetof(SettingSliderSlot_C_SettingDetails, 标题) == 0x000000, "Member 'SettingSliderSlot_C_SettingDetails::标题' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_SettingDetails, 详情) == 0x000018, "Member 'SettingSliderSlot_C_SettingDetails::详情' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct SettingSliderSlot_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0168(0x00B8)()
};
static_assert(alignof(SettingSliderSlot_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on SettingSliderSlot_C_OnMouseButtonDown");
static_assert(sizeof(SettingSliderSlot_C_OnMouseButtonDown) == 0x000220, "Wrong size on SettingSliderSlot_C_OnMouseButtonDown");
static_assert(offsetof(SettingSliderSlot_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'SettingSliderSlot_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'SettingSliderSlot_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'SettingSliderSlot_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000160, "Member 'SettingSliderSlot_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_OnMouseButtonDown, K2Node_MakeStruct_EventReply) == 0x000168, "Member 'SettingSliderSlot_C_OnMouseButtonDown::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.GetPercent_0
// 0x0008 (0x0008 - 0x0000)
struct SettingSliderSlot_C_GetPercent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_GetPercent_0) == 0x000004, "Wrong alignment on SettingSliderSlot_C_GetPercent_0");
static_assert(sizeof(SettingSliderSlot_C_GetPercent_0) == 0x000008, "Wrong size on SettingSliderSlot_C_GetPercent_0");
static_assert(offsetof(SettingSliderSlot_C_GetPercent_0, ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_GetPercent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_GetPercent_0, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'SettingSliderSlot_C_GetPercent_0::CallFunc_GetValue_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.GetText_0
// 0x0050 (0x0050 - 0x0000)
struct SettingSliderSlot_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(SettingSliderSlot_C_GetText_0) == 0x000008, "Wrong alignment on SettingSliderSlot_C_GetText_0");
static_assert(sizeof(SettingSliderSlot_C_GetText_0) == 0x000050, "Wrong size on SettingSliderSlot_C_GetText_0");
static_assert(offsetof(SettingSliderSlot_C_GetText_0, ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_GetText_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_GetText_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_GetText_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'SettingSliderSlot_C_GetText_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_GetText_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'SettingSliderSlot_C_GetText_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.进入选中模式
// 0x0070 (0x0070 - 0x0000)
struct SettingSliderSlot_C_进入选中模式 final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUISettingInterface_C> K2Node_DynamicCast_AsUISetting_Interface;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
};
static_assert(alignof(SettingSliderSlot_C_进入选中模式) == 0x000008, "Wrong alignment on SettingSliderSlot_C_进入选中模式");
static_assert(sizeof(SettingSliderSlot_C_进入选中模式) == 0x000070, "Wrong size on SettingSliderSlot_C_进入选中模式");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, ___int_Array_Index_Variable) == 0x000000, "Member 'SettingSliderSlot_C_进入选中模式::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, ___int_Loop_Counter_Variable) == 0x000004, "Member 'SettingSliderSlot_C_进入选中模式::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SettingSliderSlot_C_进入选中模式::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000010, "Member 'SettingSliderSlot_C_进入选中模式::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, CallFunc_Array_Get_Item) == 0x000020, "Member 'SettingSliderSlot_C_进入选中模式::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'SettingSliderSlot_C_进入选中模式::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, K2Node_DynamicCast_AsUISetting_Interface) == 0x000030, "Member 'SettingSliderSlot_C_进入选中模式::K2Node_DynamicCast_AsUISetting_Interface' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SettingSliderSlot_C_进入选中模式::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'SettingSliderSlot_C_进入选中模式::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_进入选中模式, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'SettingSliderSlot_C_进入选中模式::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.MouseXSave
// 0x0040 (0x0040 - 0x0000)
struct SettingSliderSlot_C_MouseXSave final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_MouseXSave) == 0x000008, "Wrong alignment on SettingSliderSlot_C_MouseXSave");
static_assert(sizeof(SettingSliderSlot_C_MouseXSave) == 0x000040, "Wrong size on SettingSliderSlot_C_MouseXSave");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_MouseXSave::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSliderSlot_C_MouseXSave::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSliderSlot_C_MouseXSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, CallFunc_SaveGameToSlot_ReturnValue) == 0x000011, "Member 'SettingSliderSlot_C_MouseXSave::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_MouseXSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSliderSlot_C_MouseXSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSliderSlot_C_MouseXSave::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSliderSlot_C_MouseXSave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseXSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSliderSlot_C_MouseXSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.MouseYSave
// 0x0040 (0x0040 - 0x0000)
struct SettingSliderSlot_C_MouseYSave final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_MouseYSave) == 0x000008, "Wrong alignment on SettingSliderSlot_C_MouseYSave");
static_assert(sizeof(SettingSliderSlot_C_MouseYSave) == 0x000040, "Wrong size on SettingSliderSlot_C_MouseYSave");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_MouseYSave::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSliderSlot_C_MouseYSave::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSliderSlot_C_MouseYSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, CallFunc_SaveGameToSlot_ReturnValue) == 0x000011, "Member 'SettingSliderSlot_C_MouseYSave::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_MouseYSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000020, "Member 'SettingSliderSlot_C_MouseYSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSliderSlot_C_MouseYSave::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSliderSlot_C_MouseYSave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_MouseYSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSliderSlot_C_MouseYSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.背景音量Save
// 0x0040 (0x0040 - 0x0000)
struct SettingSliderSlot_C_背景音量Save final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_背景音量Save) == 0x000008, "Wrong alignment on SettingSliderSlot_C_背景音量Save");
static_assert(sizeof(SettingSliderSlot_C_背景音量Save) == 0x000040, "Wrong size on SettingSliderSlot_C_背景音量Save");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSliderSlot_C_背景音量Save::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSliderSlot_C_背景音量Save::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSliderSlot_C_背景音量Save::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSliderSlot_C_背景音量Save::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000031, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_SaveGameToSlot_ReturnValue) == 0x000032, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_背景音量Save, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSliderSlot_C_背景音量Save::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.音效音量Save
// 0x0040 (0x0040 - 0x0000)
struct SettingSliderSlot_C_音效音量Save final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_音效音量Save) == 0x000008, "Wrong alignment on SettingSliderSlot_C_音效音量Save");
static_assert(sizeof(SettingSliderSlot_C_音效音量Save) == 0x000040, "Wrong size on SettingSliderSlot_C_音效音量Save");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSliderSlot_C_音效音量Save::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSliderSlot_C_音效音量Save::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000028, "Member 'SettingSliderSlot_C_音效音量Save::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'SettingSliderSlot_C_音效音量Save::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000031, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_SaveGameToSlot_ReturnValue) == 0x000032, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_音效音量Save, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000038, "Member 'SettingSliderSlot_C_音效音量Save::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function SettingSliderSlot.SettingSliderSlot_C.屏幕百分比Save
// 0x0058 (0x0058 - 0x0000)
struct SettingSliderSlot_C_屏幕百分比Save final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMyGameInstance_C*                      K2Node_DynamicCast_AsMy_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStateSetting_C*                  K2Node_DynamicCast_AsPlayer_State_Setting;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingSliderSlot_C_屏幕百分比Save) == 0x000008, "Wrong alignment on SettingSliderSlot_C_屏幕百分比Save");
static_assert(sizeof(SettingSliderSlot_C_屏幕百分比Save) == 0x000058, "Wrong size on SettingSliderSlot_C_屏幕百分比Save");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, K2Node_DynamicCast_AsMy_Game_Instance) == 0x000008, "Member 'SettingSliderSlot_C_屏幕百分比Save::K2Node_DynamicCast_AsMy_Game_Instance' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SettingSliderSlot_C_屏幕百分比Save::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000018, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_SaveGameToSlot_ReturnValue) == 0x000020, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000030, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, K2Node_DynamicCast_AsPlayer_State_Setting) == 0x000038, "Member 'SettingSliderSlot_C_屏幕百分比Save::K2Node_DynamicCast_AsPlayer_State_Setting' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'SettingSliderSlot_C_屏幕百分比Save::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_GetGameUserSettings_ReturnValue) == 0x000048, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingSliderSlot_C_屏幕百分比Save, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000050, "Member 'SettingSliderSlot_C_屏幕百分比Save::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

