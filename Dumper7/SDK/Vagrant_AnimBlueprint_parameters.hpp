#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vagrant_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Vagrant_AnimBlueprint.Vagrant_AnimBlueprint_C.ExecuteUbergraph_Vagrant_AnimBlueprint
// 0x00C0 (0x00C0 - 0x0000)
struct Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVagrant_BP_C*                          K2Node_DynamicCast_AsVagrant_BP;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint) == 0x000008, "Wrong alignment on Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint");
static_assert(sizeof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint) == 0x0000C0, "Wrong size on Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, EntryPoint) == 0x000000, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::EntryPoint' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000004, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, K2Node_Event_DeltaTimeX) == 0x00000C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_GetControlRotation_ReturnValue) == 0x00001C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000034, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000040, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, K2Node_DynamicCast_AsVagrant_BP) == 0x000050, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::K2Node_DynamicCast_AsVagrant_BP' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Roll) == 0x00005C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Pitch) == 0x000060, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Yaw) == 0x000064, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_ClampAngle_ReturnValue) == 0x000068, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_ClampAngle_ReturnValue_1) == 0x00006C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_GetVelocity_ReturnValue) == 0x000070, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_MakeRotator_ReturnValue) == 0x00007C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_CalculateDirection_ReturnValue) == 0x000088, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_VSize_ReturnValue) == 0x00008C, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000094, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_MakeRotator_ReturnValue_1) == 0x000098, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_RInterpTo_ReturnValue) == 0x0000A4, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Roll_1) == 0x0000B0, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Pitch_1) == 0x0000B4, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint, CallFunc_BreakRotator_Yaw_1) == 0x0000B8, "Member 'Vagrant_AnimBlueprint_C_ExecuteUbergraph_Vagrant_AnimBlueprint::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");

// Function Vagrant_AnimBlueprint.Vagrant_AnimBlueprint_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(sizeof(Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(offsetof(Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Vagrant_AnimBlueprint_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Vagrant_AnimBlueprint.Vagrant_AnimBlueprint_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Vagrant_AnimBlueprint_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Vagrant_AnimBlueprint_C_AnimGraph) == 0x000008, "Wrong alignment on Vagrant_AnimBlueprint_C_AnimGraph");
static_assert(sizeof(Vagrant_AnimBlueprint_C_AnimGraph) == 0x000010, "Wrong size on Vagrant_AnimBlueprint_C_AnimGraph");
static_assert(offsetof(Vagrant_AnimBlueprint_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Vagrant_AnimBlueprint_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

