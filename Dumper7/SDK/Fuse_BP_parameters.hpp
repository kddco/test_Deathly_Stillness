#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Fuse_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Fuse_BP.Fuse_BP_C.ExecuteUbergraph_Fuse_BP
// 0x00A0 (0x00A0 - 0x0000)
struct Fuse_BP_C_ExecuteUbergraph_Fuse_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNewVisibility;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP) == 0x000004, "Wrong alignment on Fuse_BP_C_ExecuteUbergraph_Fuse_BP");
static_assert(sizeof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP) == 0x0000A0, "Wrong size on Fuse_BP_C_ExecuteUbergraph_Fuse_BP");
static_assert(offsetof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP, EntryPoint) == 0x000000, "Member 'Fuse_BP_C_ExecuteUbergraph_Fuse_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP, K2Node_CustomEvent_Pitch) == 0x000004, "Member 'Fuse_BP_C_ExecuteUbergraph_Fuse_BP::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'Fuse_BP_C_ExecuteUbergraph_Fuse_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP, K2Node_CustomEvent_bNewVisibility) == 0x000014, "Member 'Fuse_BP_C_ExecuteUbergraph_Fuse_BP::K2Node_CustomEvent_bNewVisibility' has a wrong offset!");
static_assert(offsetof(Fuse_BP_C_ExecuteUbergraph_Fuse_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000018, "Member 'Fuse_BP_C_ExecuteUbergraph_Fuse_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function Fuse_BP.Fuse_BP_C.开启提示
// 0x0001 (0x0001 - 0x0000)
struct Fuse_BP_C_开启提示 final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Fuse_BP_C_开启提示) == 0x000001, "Wrong alignment on Fuse_BP_C_开启提示");
static_assert(sizeof(Fuse_BP_C_开启提示) == 0x000001, "Wrong size on Fuse_BP_C_开启提示");
static_assert(offsetof(Fuse_BP_C_开启提示, bNewVisibility) == 0x000000, "Member 'Fuse_BP_C_开启提示::bNewVisibility' has a wrong offset!");

// Function Fuse_BP.Fuse_BP_C.更改旋转方向
// 0x0004 (0x0004 - 0x0000)
struct Fuse_BP_C_更改旋转方向 final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Fuse_BP_C_更改旋转方向) == 0x000004, "Wrong alignment on Fuse_BP_C_更改旋转方向");
static_assert(sizeof(Fuse_BP_C_更改旋转方向) == 0x000004, "Wrong size on Fuse_BP_C_更改旋转方向");
static_assert(offsetof(Fuse_BP_C_更改旋转方向, Pitch) == 0x000000, "Member 'Fuse_BP_C_更改旋转方向::Pitch' has a wrong offset!");

}

