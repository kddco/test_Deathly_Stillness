#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIOptimizer

#include "Basic.hpp"

#include "AIOptimizer_classes.hpp"
#include "AIOptimizer_parameters.hpp"


namespace SDK
{

// Function AIOptimizer.AIOptimizerSubsystem.DebugAIOptimizer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOptimizerSubsystem::DebugAIOptimizer(bool bDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "DebugAIOptimizer");

	Params::AIOptimizerSubsystem_DebugAIOptimizer Parms{};

	Parms.bDebug = bDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetCategorizedDebugSubjects
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FAIODebugSubjectData>&DebugSubjects                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<EAIODebugGroup, int32>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EAIODebugGroup, int32> UAIOptimizerSubsystem::GetCategorizedDebugSubjects(const TArray<struct FAIODebugSubjectData>& DebugSubjects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetCategorizedDebugSubjects");

	Params::AIOptimizerSubsystem_GetCategorizedDebugSubjects Parms{};

	Parms.DebugSubjects = std::move(DebugSubjects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetClosestInvokerLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   QuerierLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAIOptimizerSubsystem::GetClosestInvokerLocation(const struct FVector& QuerierLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetClosestInvokerLocation");

	Params::AIOptimizerSubsystem_GetClosestInvokerLocation Parms{};

	Parms.QuerierLocation = std::move(QuerierLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetDebugSubjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAIODebugSubjectData>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FAIODebugSubjectData> UAIOptimizerSubsystem::GetDebugSubjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetDebugSubjects");

	Params::AIOptimizerSubsystem_GetDebugSubjects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetDistanceToClosestInvokerSquared
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   QuerierLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIOptimizerSubsystem::GetDistanceToClosestInvokerSquared(const struct FVector& QuerierLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetDistanceToClosestInvokerSquared");

	Params::AIOptimizerSubsystem_GetDistanceToClosestInvokerSquared Parms{};

	Parms.QuerierLocation = std::move(QuerierLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetInvokerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOInvokerComponent*             Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOptimizerSubsystem::GetInvokerIndex(class UAIOInvokerComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetInvokerIndex");

	Params::AIOptimizerSubsystem_GetInvokerIndex Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.GetSubjectIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOSubjectComponent*             Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOptimizerSubsystem::GetSubjectIndex(class UAIOSubjectComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "GetSubjectIndex");

	Params::AIOptimizerSubsystem_GetSubjectIndex Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.K2_DespawnSubject
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAIOSubjectHandle*               SubjectHandle                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// EDespawnMethod                          Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIOSubjectComponent*             Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideSpawnRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRespawnOnlyByHandle                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::K2_DespawnSubject(struct FAIOSubjectHandle* SubjectHandle, EDespawnMethod Method, class UAIOSubjectComponent* Component, float OverrideSpawnRadius, bool bAllowRespawnOnlyByHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "K2_DespawnSubject");

	Params::AIOptimizerSubsystem_K2_DespawnSubject Parms{};

	Parms.Method = Method;
	Parms.Component = Component;
	Parms.OverrideSpawnRadius = OverrideSpawnRadius;
	Parms.bAllowRespawnOnlyByHandle = bAllowRespawnOnlyByHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SubjectHandle != nullptr)
		*SubjectHandle = std::move(Parms.SubjectHandle);

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.K2_DespawnSubjectByHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAIOSubjectHandle&               SubjectHandle                                          (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EDespawnMethod                          Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideSpawnRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRespawnOnlyByHandle                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::K2_DespawnSubjectByHandle(struct FAIOSubjectHandle& SubjectHandle, EDespawnMethod Method, float OverrideSpawnRadius, bool bAllowRespawnOnlyByHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "K2_DespawnSubjectByHandle");

	Params::AIOptimizerSubsystem_K2_DespawnSubjectByHandle Parms{};

	Parms.SubjectHandle = std::move(SubjectHandle);
	Parms.Method = Method;
	Parms.OverrideSpawnRadius = OverrideSpawnRadius;
	Parms.bAllowRespawnOnlyByHandle = bAllowRespawnOnlyByHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SubjectHandle = std::move(Parms.SubjectHandle);

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.K2_SpawnSubjectByHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EDespawnMethod                          Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIOSubjectHandle&         SubjectHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::K2_SpawnSubjectByHandle(EDespawnMethod Method, const struct FAIOSubjectHandle& SubjectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "K2_SpawnSubjectByHandle");

	Params::AIOptimizerSubsystem_K2_SpawnSubjectByHandle Parms{};

	Parms.Method = Method;
	Parms.SubjectHandle = std::move(SubjectHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.LoopPendingSubjects
// (Final, Native, Protected)

void UAIOptimizerSubsystem::LoopPendingSubjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "LoopPendingSubjects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOptimizerSubsystem.LoopSubjects
// (Final, Native, Protected)

void UAIOptimizerSubsystem::LoopSubjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "LoopSubjects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOptimizerSubsystem.RegisterInvoker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOInvokerComponent*             InvokerComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::RegisterInvoker(class UAIOInvokerComponent* InvokerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "RegisterInvoker");

	Params::AIOptimizerSubsystem_RegisterInvoker Parms{};

	Parms.InvokerComponent = InvokerComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.RegisterSubject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOSubjectComponent*             SubjectComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::RegisterSubject(class UAIOSubjectComponent* SubjectComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "RegisterSubject");

	Params::AIOptimizerSubsystem_RegisterSubject Parms{};

	Parms.SubjectComponent = SubjectComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.RemoveDespawnedSubjectByHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAIOSubjectHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::RemoveDespawnedSubjectByHandle(const struct FAIOSubjectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "RemoveDespawnedSubjectByHandle");

	Params::AIOptimizerSubsystem_RemoveDespawnedSubjectByHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.SetIsSystemEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOptimizerSubsystem::SetIsSystemEnabled(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "SetIsSystemEnabled");

	Params::AIOptimizerSubsystem_SetIsSystemEnabled Parms{};

	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOptimizerSubsystem.ShrinkArrays
// (Final, Native, Protected)

void UAIOptimizerSubsystem::ShrinkArrays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "ShrinkArrays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOptimizerSubsystem.UnregisterInvoker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOInvokerComponent*             InvokerComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::UnregisterInvoker(class UAIOInvokerComponent* InvokerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "UnregisterInvoker");

	Params::AIOptimizerSubsystem_UnregisterInvoker Parms{};

	Parms.InvokerComponent = InvokerComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOptimizerSubsystem.UnregisterSubject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAIOSubjectComponent*             SubjectComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOptimizerSubsystem::UnregisterSubject(class UAIOSubjectComponent* SubjectComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOptimizerSubsystem", "UnregisterSubject");

	Params::AIOptimizerSubsystem_UnregisterSubject Parms{};

	Parms.SubjectComponent = SubjectComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.AddUniqueHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAIOSubjectHandle>&       Array                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAIOSubjectHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOBPLibrary::AddUniqueHandle(TArray<struct FAIOSubjectHandle>& Array, const struct FAIOSubjectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "AddUniqueHandle");

	Params::AIOBPLibrary_AddUniqueHandle Parms{};

	Parms.Array = std::move(Array);
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Array = std::move(Parms.Array);

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.FindHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FAIOSubjectHandle>& Array                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAIOSubjectHandle&         HandleToFind                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOBPLibrary::FindHandle(const TArray<struct FAIOSubjectHandle>& Array, const struct FAIOSubjectHandle& HandleToFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "FindHandle");

	Params::AIOBPLibrary_FindHandle Parms{};

	Parms.Array = std::move(Array);
	Parms.HandleToFind = std::move(HandleToFind);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.GetInvokerTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UAIOBPLibrary::GetInvokerTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "GetInvokerTag");

	Params::AIOBPLibrary_GetInvokerTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.GetString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAIOSubjectHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAIOBPLibrary::GetString(const struct FAIOSubjectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "GetString");

	Params::AIOBPLibrary_GetString Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.GetSubjectTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UAIOBPLibrary::GetSubjectTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "GetSubjectTag");

	Params::AIOBPLibrary_GetSubjectTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.IsHandleValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAIOSubjectHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOBPLibrary::IsHandleValid(const struct FAIOSubjectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "IsHandleValid");

	Params::AIOBPLibrary_IsHandleValid Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.RemoveHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAIOSubjectHandle>&       Array                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FAIOSubjectHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOBPLibrary::RemoveHandle(TArray<struct FAIOSubjectHandle>& Array, const struct FAIOSubjectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "RemoveHandle");

	Params::AIOBPLibrary_RemoveHandle Parms{};

	Parms.Array = std::move(Array);
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Array = std::move(Parms.Array);

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOBPLibrary.SetAILogicEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOBPLibrary::SetAILogicEnabled(class AActor* Actor, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "SetAILogicEnabled");

	Params::AIOBPLibrary_SetAILogicEnabled Parms{};

	Parms.Actor = Actor;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOBPLibrary.SetCharacterMovementEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOBPLibrary::SetCharacterMovementEnabled(class ACharacter* Character, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AIOBPLibrary", "SetCharacterMovementEnabled");

	Params::AIOBPLibrary_SetCharacterMovementEnabled Parms{};

	Parms.Character = Character;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.CanBeUpdatedBySubsystem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOSubjectComponent::CanBeUpdatedBySubsystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "CanBeUpdatedBySubsystem");

	Params::AIOSubjectComponent_CanBeUpdatedBySubsystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.GetClosestInvokerLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAIOSubjectComponent::GetClosestInvokerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetClosestInvokerLocation");

	Params::AIOSubjectComponent_GetClosestInvokerLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.GetDespawnRadiusSquared
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAIOptimizerSubsystem*            Subsystem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIOSubjectComponent::GetDespawnRadiusSquared(class UAIOptimizerSubsystem* Subsystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetDespawnRadiusSquared");

	Params::AIOSubjectComponent_GetDespawnRadiusSquared Parms{};

	Parms.Subsystem = Subsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.GetOptimizationLayerForCurrentDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOSubjectComponent::GetOptimizationLayerForCurrentDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetOptimizationLayerForCurrentDistance");

	Params::AIOSubjectComponent_GetOptimizationLayerForCurrentDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.GetSpawnRadiusSquared
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAIOptimizerSubsystem*            Subsystem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIOSubjectComponent::GetSpawnRadiusSquared(class UAIOptimizerSubsystem* Subsystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetSpawnRadiusSquared");

	Params::AIOSubjectComponent_GetSpawnRadiusSquared Parms{};

	Parms.Subsystem = Subsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.RegisterSubject
// (Final, Native, Public, BlueprintCallable)

void UAIOSubjectComponent::RegisterSubject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "RegisterSubject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.ReinitializeOptimizationLayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAIOptimizationLayer>&    NewOptimizationLayers                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIOSubjectComponent::ReinitializeOptimizationLayers(TArray<struct FAIOptimizationLayer>& NewOptimizationLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "ReinitializeOptimizationLayers");

	Params::AIOSubjectComponent_ReinitializeOptimizationLayers Parms{};

	Parms.NewOptimizationLayers = std::move(NewOptimizationLayers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NewOptimizationLayers = std::move(Parms.NewOptimizationLayers);
}


// Function AIOptimizer.AIOSubjectComponent.SetCanBeUpdatedBySubsystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCanBeUpdated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOSubjectComponent::SetCanBeUpdatedBySubsystem(bool bCanBeUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "SetCanBeUpdatedBySubsystem");

	Params::AIOSubjectComponent_SetCanBeUpdatedBySubsystem Parms{};

	Parms.bCanBeUpdated = bCanBeUpdated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.SetCharacterFeatures
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FeaturesToEnable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOSubjectComponent::SetCharacterFeatures(class ACharacter* Character, int32 FeaturesToEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "SetCharacterFeatures");

	Params::AIOSubjectComponent_SetCharacterFeatures Parms{};

	Parms.Character = Character;
	Parms.FeaturesToEnable = FeaturesToEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.SetSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISpawnerInterface>NewSpawner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UAIOSubjectComponent::SetSpawner(TScriptInterface<class ISpawnerInterface> NewSpawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "SetSpawner");

	Params::AIOSubjectComponent_SetSpawner Parms{};

	Parms.NewSpawner = NewSpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.ShouldBeDespawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAIOptimizerSubsystem*            Subsystem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdateDataToInvokers                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOSubjectComponent::ShouldBeDespawned(class UAIOptimizerSubsystem* Subsystem, bool bForceUpdateDataToInvokers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "ShouldBeDespawned");

	Params::AIOSubjectComponent_ShouldBeDespawned Parms{};

	Parms.Subsystem = Subsystem;
	Parms.bForceUpdateDataToInvokers = bForceUpdateDataToInvokers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.UnregisterSubject
// (Final, Native, Public, BlueprintCallable)

void UAIOSubjectComponent::UnregisterSubject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "UnregisterSubject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.AIOSubjectComponent.GetCurrentOptimizationLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIOSubjectComponent::GetCurrentOptimizationLayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetCurrentOptimizationLayer");

	Params::AIOSubjectComponent_GetCurrentOptimizationLayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.GetDistanceToClosestInvoker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIOSubjectComponent::GetDistanceToClosestInvoker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "GetDistanceToClosestInvoker");

	Params::AIOSubjectComponent_GetDistanceToClosestInvoker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.IsDespawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIOSubjectComponent::IsDespawning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "IsDespawning");

	Params::AIOSubjectComponent_IsDespawning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOSubjectComponent.IsSeenByAnyInvoker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIOSubjectComponent::IsSeenByAnyInvoker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOSubjectComponent", "IsSeenByAnyInvoker");

	Params::AIOSubjectComponent_IsSeenByAnyInvoker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AIOptimizer.AIOInvokerComponent.DebugAIOptimizer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIOInvokerComponent::DebugAIOptimizer(bool bDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIOInvokerComponent", "DebugAIOptimizer");

	Params::AIOInvokerComponent_DebugAIOptimizer Parms{};

	Parms.bDebug = bDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AIOptimizer.SpawnerInterface.OnSubjectDespawnedByOptimizerSubsystem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAIOSubjectComponent*             DespawnedSubjectComponent                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISpawnerInterface::OnSubjectDespawnedByOptimizerSubsystem(class UAIOSubjectComponent* DespawnedSubjectComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SpawnerInterface", "OnSubjectDespawnedByOptimizerSubsystem");

	Params::SpawnerInterface_OnSubjectDespawnedByOptimizerSubsystem Parms{};

	Parms.DespawnedSubjectComponent = DespawnedSubjectComponent;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function AIOptimizer.SpawnerInterface.OnSubjectSpawnedByOptimizerSubsystem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAIOSubjectComponent*             SpawnedSubjectComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISpawnerInterface::OnSubjectSpawnedByOptimizerSubsystem(class UAIOSubjectComponent* SpawnedSubjectComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SpawnerInterface", "OnSubjectSpawnedByOptimizerSubsystem");

	Params::SpawnerInterface_OnSubjectSpawnedByOptimizerSubsystem Parms{};

	Parms.SpawnedSubjectComponent = SpawnedSubjectComponent;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

