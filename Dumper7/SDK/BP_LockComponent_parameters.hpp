#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_LockComponent.BP_LockComponent_C.ExecuteUbergraph_BP_LockComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_LockpickingHUD_C*                   K2Node_CustomEvent_HUD;                            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent) == 0x000008, "Wrong alignment on BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent");
static_assert(sizeof(BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent) == 0x000010, "Wrong size on BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent");
static_assert(offsetof(BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent, EntryPoint) == 0x000000, "Member 'BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent, K2Node_CustomEvent_HUD) == 0x000008, "Member 'BP_LockComponent_C_ExecuteUbergraph_BP_LockComponent::K2Node_CustomEvent_HUD' has a wrong offset!");

// Function BP_LockComponent.BP_LockComponent_C.SetHUDInfo
// 0x0008 (0x0008 - 0x0000)
struct BP_LockComponent_C_SetHUDInfo final
{
public:
	class UUI_LockpickingHUD_C*                   HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockComponent_C_SetHUDInfo) == 0x000008, "Wrong alignment on BP_LockComponent_C_SetHUDInfo");
static_assert(sizeof(BP_LockComponent_C_SetHUDInfo) == 0x000008, "Wrong size on BP_LockComponent_C_SetHUDInfo");
static_assert(offsetof(BP_LockComponent_C_SetHUDInfo, HUD) == 0x000000, "Member 'BP_LockComponent_C_SetHUDInfo::HUD' has a wrong offset!");

}

